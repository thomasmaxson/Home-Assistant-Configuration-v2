################################################################################
#
# @author      : Thomas Maxson
# @package     : Template Sensors
# @description :
#
################################################################################

template:
  - sensor:
      - name: "Is Week Even"
        icon: >-
          {{ iif( ( now().isocalendar().week % 2 == 0 ), 'mdi:calendar-check', 'mdi:calendar-remove' ) }}
        state: >-
          {{ iif( ( now().isocalendar().week % 2 == 0 ), 'on', 'off' ) }}

      - name: "Is Week Odd"
        icon: >-
          {{ iif( ( now().isocalendar().week % 2 == 1 ), 'mdi:calendar-check', 'mdi:calendar-remove' ) }}
        state: >-
          {{ iif( ( now().isocalendar().week % 2 == 1 ), 'on', 'off' ) }}

  - trigger:
      # Update on Home Assistant startup
      - trigger: homeassistant
        event: start
      # Update on Template reload
      - trigger: event
        event_type: event_template_reloaded
      # Update every minute
      - trigger: time_pattern
        hours: "00"
        minutes: "/01"
        seconds: "00"
    sensor:
      - name: "Sunset Automations Status"
        icon: >-
          {%- set offset = 30 * 60 %}
          {%- set next_sunset = as_timestamp(states.sun.sun.attributes.next_setting) %}
          {%- set ts_next_sunset = (next_sunset - offset) | timestamp_custom('%H%M%S', false) | int %}
          {%- set ts_current = as_timestamp(now()) | timestamp_custom('%H%M%S', false) | int %}

          {%- if( is_state( 'input_boolean.sunset_automations_active', 'on' ) ) %}
            mdi:clock-alert-outline
          {%- elif( ts_current > ts_next_sunset ) %}
            mdi:clock-check-outline
          {%- else %}
            mdi:clock-outline
          {%- endif %}
        state: >-
          {%- set offset = 30 * 60 %}
          {%- set next_sunset = as_timestamp(states.sun.sun.attributes.next_setting) %}
          {%- set ts_next_sunset = (next_sunset - offset) | timestamp_custom('%H%M%S', false) | int %}
          {%- set ts_current = as_timestamp(now()) | timestamp_custom('%H%M%S', false) | int %}

          {%- if( is_state( 'input_boolean.sunset_automations_active', 'on' ) ) %}
            Active
          {%- elif( ts_current > ts_next_sunset ) %}
            Complete
          {%- else %}
            Run at {{ modified_sunset | timestamp_custom( '%I:%M %p' ) }}
          {%- endif %}

  - trigger:
      # Update on Home Assistant startup
      - trigger: homeassistant
        event: start
      # Update on Template reload
      - trigger: event
        event_type: event_template_reloaded
      # Update every XX seconds
      - trigger: time_pattern
        seconds: /5
    sensor:
      - name: "Laundry Washer Combined Details"
        icon: mdi:washing-machine
        state: >-
          {{ states( 'sensor.laundry_washer_machine_state' ) }}
        attributes:
          original_time: >-
            {{ states( 'input_text.laundry_washer_original_duration' ) }}
          time_remaining: >-
            {{ states( 'sensor.laundry_washer_time_remaining' ) }}
          cycle_type: >-
            {{ states( 'sensor.laundry_washer_sub_cycle' ) | string }}
          cycle_end: >-
            {{ states( 'binary_sensor.laundry_washer_end_of_cycle' ) }}

  - trigger:
      # Update on Home Assistant startup
      - trigger: homeassistant
        event: start
      # Update on Template reload
      - trigger: event
        event_type: event_template_reloaded
      # Update every XX seconds
      - trigger: time_pattern
        seconds: /5
    sensor:
      - name: "Laundry Dryer Combined Details"
        icon: mdi:tumble-dryer
        state: >-
          {{ states( 'sensor.laundry_dryer_machine_state' ) }}
        attributes:
          original_time: >-
            {{ states( 'input_text.laundry_dryer_original_duration' ) }}
          time_remaining: >-
            {{ states( 'sensor.laundry_dryer_time_remaining' ) }}
          cycle_type: >-
            {{ states( 'sensor.laundry_dryer_sub_cycle' ) | string }}
          cycle_end: >-
            {{ states( 'binary_sensor.laundry_dryer_end_of_cycle' ) }}
