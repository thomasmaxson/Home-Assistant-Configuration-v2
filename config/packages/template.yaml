################################################################################
#
# @author      : Thomas Maxson
# @package     : Template Sensors
# @description :
#
################################################################################

template:
  - sensor:
      - name: "Is Week Even"
        icon: >-
          {{ iif( ( now().isocalendar().week % 2 == 0 ), 'mdi:calendar-check', 'mdi:calendar-remove' ) }}
        state: >-
          {{ iif( ( now().isocalendar().week % 2 == 0 ), 'on', 'off' ) }}

      - name: "Is Week Odd"
        icon: >-
          {{ iif( ( now().isocalendar().week % 2 == 1 ), 'mdi:calendar-check', 'mdi:calendar-remove' ) }}
        state: >-
          {{ iif( ( now().isocalendar().week % 2 == 1 ), 'on', 'off' ) }}

  # - trigger:
  #     # Update on Home Assistant startup
  #     - trigger: homeassistant
  #       event: start
  #     # Update on Template reload
  #     - trigger: event
  #       event_type: event_template_reloaded
  #     # Update every minute
  #     - trigger: time_pattern
  #       hours: "00"
  #       minutes: "/01"
  #       seconds: "00"
  #   sensor:
  #     - name: "Sunrise Automations Status"
  #       icon: >-
  #         {%- set offset = 30 | int( 0 ) %}
  #         {%- set time_sunset = as_timestamp( state_attr( 'sun.sun', 'next_rising' ) | as_datetime | as_local ) %}
  #         {%- set time_now = as_timestamp( now() | as_datetime | as_local ) %}

  #         {%- if( time_now > time_sunset ) %}
  #           mdi:clock-check-outline
  #         {%- else %}
  #           mdi:clock-outline
  #         {%- endif %}
  #       state: >-
  #         {%- set time_sunset = as_timestamp( state_attr( 'sun.sun', 'next_rising' ) | as_datetime | as_local ) %}
  #         {%- set time_now = as_timestamp( now() | as_datetime | as_local ) %}

  #         {%- if( time_now > time_sunset ) %}
  #           Complete
  #         {%- else %}
  #           {{ time_sunset | timestamp_custom( '%I:%M %p' ) }}
  #         {%- endif %}

  #     - name: "Sunset Automations Status"
  #       icon: >-
  #         {%- set time_sunset = as_timestamp( state_attr( 'sun.sun', 'next_setting' ) | as_datetime | as_local - timedelta( minutes = 30 ) ) %}
  #         {%- set time_now = as_timestamp( now() | as_datetime | as_local ) %}

  #         {%- if( is_state( 'input_boolean.sunset_automations_active', 'on' ) ) %}
  #           Active
  #         {%- elif( time_now > time_sunset ) %}
  #           mdi:clock-check-outline
  #         {%- else %}
  #           mdi:clock-outline
  #         {%- endif %}
  #       state: >-
  #         {%- set time_sunset = as_timestamp( state_attr( 'sun.sun', 'next_setting' ) | as_datetime | as_local - timedelta( minutes = 30 ) ) %}
  #         {%- set time_now = as_timestamp( now() | as_datetime | as_local ) %}

  #         {%- if( is_state( 'input_boolean.sunset_automations_active', 'on' ) ) %}
  #           Active
  #         {%- elif( time_now > time_sunset ) %}
  #           Complete
  #         {%- else %}
  #           {{ time_sunset | timestamp_custom( '%I:%M %p' ) }}
  #         {%- endif %}

  - trigger:
      # Update on Home Assistant startup
      - trigger: homeassistant
        event: start
      # Update on Template reload
      - trigger: event
        event_type: event_template_reloaded
      # Update every XX seconds
      - trigger: time_pattern
        seconds: /5
    sensor:
      - name: "Laundry Washer Combined Details"
        icon: mdi:washing-machine
        state: >-
          {{ states( 'sensor.laundry_washer_machine_state' ) }}
        attributes:
          original_time: >-
            {{ states( 'input_text.laundry_washer_original_duration' ) }}
          time_remaining: >-
            {{ states( 'sensor.laundry_washer_time_remaining' ) }}
          cycle_type: >-
            {{ states( 'sensor.laundry_washer_sub_cycle' ) | string }}
          cycle_end: >-
            {{ states( 'binary_sensor.laundry_washer_end_of_cycle' ) }}

  - trigger:
      # Update on Home Assistant startup
      - trigger: homeassistant
        event: start
      # Update on Template reload
      - trigger: event
        event_type: event_template_reloaded
      # Update every XX seconds
      - trigger: time_pattern
        seconds: /5
    sensor:
      - name: "Laundry Dryer Combined Details"
        icon: mdi:tumble-dryer
        state: >-
          {{ states( 'sensor.laundry_dryer_machine_state' ) }}
        attributes:
          original_time: >-
            {{ states( 'input_text.laundry_dryer_original_duration' ) }}
          time_remaining: >-
            {{ states( 'sensor.laundry_dryer_time_remaining' ) }}
          cycle_type: >-
            {{ states( 'sensor.laundry_dryer_sub_cycle' ) | string }}
          cycle_end: >-
            {{ states( 'binary_sensor.laundry_dryer_end_of_cycle' ) }}
