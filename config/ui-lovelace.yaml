title: CasaMaxson
views:
  - type: custom:grid-layout
    path: home
    title: Home
    layout:
      margin: 2.75vw 0 0 0
      grid-row-gap: 1vw
      grid-column-gap: 2vw
      grid-auto-rows: min-content
      grid-template-columns: 2vw 25% repeat( 4, 1fr ) 2vw
      grid-template-areas: |
        ".  zoneSbar   tileFoyer   tileKit    tileLivR   tileDinR   ."
        ".  zoneSbar   modalFoyer  modalKit   modalLivR  modalDinR  ."
        ".  zoneSbar   tileBdr1    tileBdr2   tileBdr3   tileBdr4   ."
        ".  zoneSbar   modalBdr1   modalBdr2  modalBdr3  modalBdr4  ."
        ".  zoneSbar   tileLaund   tileGar    tileOut    tileMisc   ."
        ".  zoneSbar   modalLaund  modalGar   modalOut   modalMisc  ."
        ".  zoneSbar   overflow1   overflow2  overflow3  overflow4  ."
        ".  modalSbar  .           .          modalSys   modalConf  ."
      mediaquery:
        '(max-width: 576px)':
          margin: 2vw 1vw 0 1vw
          grid-row-gap: 2.25vw
          grid-column-gap: 4.5vw
          grid-auto-rows: min-content
          grid-template-columns: 0 repeat( 2, 1fr ) 0
          grid-template-areas: |
            ".  zoneSbar   zoneSbar     ."
            ".  modalSbar  .            ."
            ".  tileFoyer  tileKit      ."
            ".  modalFoyer modalKit     ."
            ".  tileLivR   tileDinR     ."
            ".  modalLivR  modalDinR    ."
            ".  tileBdr1   tileBdr2     ."
            ".  modalBdr1  modalBdr2    ."
            ".  tileBdr3   tileBdr4     ."
            ".  modalBdr3  modalBdr4    ."
            ".  tileLaund  tileGar      ."
            ".  popLaund   modalGar     ."
            ".  tileOut    tileMisc     ."
            ".  modalOut   modalMisc    ."
            ".  overflow1  overflow2    ."
            ".  overflow3  overflow4    ."
            ".  tilePer1   tilePer2     ."
            ".  modalSbar  modalSys     ."
            ".  modalConf  .            ."
            ".  modalSys   modalConf    ."
        '(max-width: 992px)':
          grid-row-gap: 1.25vw
          grid-column-gap: 2.5vw
          grid-auto-rows: min-content
          grid-template-columns: 1vw repeat( 3, 1fr ) 1vw
          grid-template-areas: |
            ".  zoneSbar    zoneSbar   zoneSbar     ."
            ".  modalSbar   .          .            ."
            ".  tileFoyer   tileKit    tileLivR     ."
            ".  modalFoyer  modalKit   modalLivR    ."
            ".  tileDinR    tileBdr1   tileBdr2     ."
            ".  modalDinR   modalBdr1  modalBdr2    ."
            ".  tileBdr3    tileBdr4   tileLaund    ."
            ".  modalBdr3   modalBdr4  modalLaund   ."
            ".  tileGar     tileOut    tileMisc     ."
            ".  modalFar    modalOut   modalMisc    ."
            ".  overflow1   overflow2  overflow3    ."
            ".  .           overflow4  .            ."
            ".  .           .          modalSys     ."
            ".  modalConf   .          .            ."
        '(max-width: 1200px)':
          grid-row-gap: 1vw
          grid-column-gap: 2vw
          grid-auto-rows: min-content
          grid-template-columns: 0 30% repeat( 3, 1fr ) 0
          grid-template-areas: |
            ".  zoneSbar   tileFoyer    tileKit      tileLivR    ."
            ".  zoneSbar   modalFoyer   modalKit     modalLivR   ."
            ".  zoneSbar   tileDinR     tileBdr1     tileBdr2    ."
            ".  zoneSbar   modalDinR    modalBdr1    modalBdr2   ."
            ".  zoneSbar   tileBdr3     tileBdr4     tileLaund   ."
            ".  zoneSbar   modalBdr3    modalBdr4    modalLaund  ."
            ".  zoneSbar   tileGar      tileOut      tileMisc    ."
            ".  zoneSbar   modalFar     modalOut     modalMisc   ."
            ".  zoneSbar   overflow1    overflow2    overflow3   ."
            ".  zoneSbar   overflow4    .            .           ."
            ".  modalSbar  .            .            modalSys    ."
            ".  .          modalConf    .            .           ."
    icon: ''
    cards:
      - type: custom:button-card
        view_layout:
          grid-area: zoneSbar
        styles:
          card:
            - display: none
      - type: custom:mod-card
        view_layout:
          grid-area: zoneSbar
        style:
          hui-vertical-stack-card$: |
            #root { gap: 0 !important;}
        card:
          type: vertical-stack
          cards:
            - type: custom:button-card
              template: notification
              variables:
                key: recycle_bring_in
                color: var( --red-color-rgb )
                boolean: input_boolean.reminder_waste_bring_in_recycle
            - type: custom:button-card
              template: notification
              variables:
                key: waste_bring_in
                color: var( --red-color-rgb )
                boolean: input_boolean.reminder_waste_bring_in_solid
            - type: custom:button-card
              template: notification
              variables:
                key: recycle_take_out
                boolean: input_boolean.reminder_waste_take_out_recycle
            - type: custom:button-card
              template: notification
              variables:
                key: waste_take_out
                color: var( --yellow-color-rgb )
                boolean: input_boolean.reminder_waste_take_out_solid
            - type: custom:button-card
              template: notification
              variables:
                key: laundry_complete_washer
                color: var( --green-color-rgb )
                boolean: input_boolean.reminder_laundry_complete_washer
            - type: custom:button-card
              template: notification
              variables:
                key: laundry_complete_dryer
                color: var( --green-color-rgb )
                boolean: input_boolean.reminder_laundry_complete_dryer
            - type: custom:button-card
              entity: sensor.template_sidebar
              template: sidebar_content
      - type: custom:button-card
        view_layout:
          grid-area: tileFoyer
        template: room_tile
        name: Foyer
        entity: light.all_lights_foyer
        triggers_update:
          - lock.front_door
          - light.all_lights_foyer
          - binary_sensor.all_leak_sensors_foyer
          - binary_sensor.door_front_primary
          - binary_sensor.door_front_secondary
        double_tap_action:
          action: call-service
          service: |
            [[[
              return ( states['lock.front_door'].state === 'locked') ? 'lock.unlock' : 'lock.lock';
            ]]]
          service_data:
            entity_id: lock.front_door
        variables:
          path: '#details-foyer'
          icon_on: mdi:home
          icon_off: mdi:home-outline
          data_door: binary_sensor.door_front_primary
          data_lightOn: light.lights_primary_foyer
          data_temperature: sensor.temperature_foyer
          badge_alert: |
            [[[ 
              if( states['binary_sensor.leak_air_conditioner'].state == 'on' )
              {
                return '<ha-icon icon="mdi:water-alert"></ha-icon>';

              } else
              { 
                const state = states['lock.front_door'].state;

                if( state === 'unlocked' )
                {
                  return '<ha-icon icon="mdi:lock-open-variant"></ha-icon>';

                } else if( state === 'locked' )
                {
                  return '';

                } else if( state === 'locking' || state === 'unlocking' )
                {
                  return '<ha-icon icon="mdi:clock-outline"></ha-icon>';

                } else
                { 
                  return '<ha-icon icon="mdi:help-circle"></ha-icon>';

                } // endif
              } // endif

              return '';
            ]]]
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#details-foyer'
            styles: |-
              #root {
                border: var( --popup--border-width ) solid var( --popup--border-color ) !important;
                background-color: var( --popup--background-color ) !important;
              }

              .bubble-header-container { height: 0 !important;}

              .bubble-header, 
              .bubble-close-button { display: none !important;}

              .bubble-pop-up-container { 
                  padding-top: 0 !important;
                  margin-top: 0 !important;
              }
            margin: 7px
            width_desktop: 540px
            width_mobile: 100%
            bg_opacity: '90'
            bg_blur: '6'
            bg_color: var( --modal--background-color )
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-auto-rows: min-content
              grid-template-columns: min-content 1fr min-content
              grid-template-areas: '"icon title action"'
            cards:
              - type: custom:mushroom-template-card
                view_layout:
                  grid-area: icon
                show_name: false
                show_state: false
                show_label: false
                card_mod:
                  style: |
                    ha-card {
                      padding: 0 !important;
                      border: none;
                      margin: 1px 5px 0 -5px;
                    }

                    mushroom-shape-icon { 
                      --shape-color: transparent !important;
                    }
                icon: mdi:home
              - type: custom:mushroom-title-card
                title: Foyer
                card_mod:
                  style: |
                    ha-card { 
                      --title-padding: 0 !important;
                      margin-top: 6px;
                      margin-right: 0;
                      margin-left: 0;
                    }
              - type: custom:button-card
                view_layout:
                  grid-area: action
                template: button__close_popup
          - type: custom:mod-card
            style:
              hui-horizontal-stack-card$: |
                #root { 
                  flex-wrap: wrap;
                }
            card:
              type: horizontal-stack
              cards:
                - type: custom:button-card
                  template: chip_detail__temperature
                  entity: sensor.temperature_foyer
                - type: custom:button-card
                  template: chip_detail__door
                  entity: binary_sensor.door_front_primary
                - type: custom:button-card
                  template: chip_detail__light
                  entity: light.all_lights_foyer
                - type: custom:button-card
                  template: chip_detail__leak
                  entity: binary_sensor.all_leak_sensors_foyer
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Lights
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  '--masonry-view-card-margin': 0
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                  grid-auto-rows: auto
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                cards:
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_foyer_lights
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_foyer_lights
                        state: 'on'
                    card:
                      type: custom:mushroom-light-card
                      name: Ceiling Lights
                      entity: light.foyer_ceiling_lights
                      collapsible_controls: true
                      show_brightness_control: true
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_foyer_lights
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_foyer_lights
                        state: 'off'
                    card:
                      type: custom:mushroom-light-card
                      name: Entryway
                      entity: light.foyer_entryway_ceiling
                      collapsible_controls: true
                      show_brightness_control: true
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_foyer_lights
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_foyer_lights
                        state: 'off'
                    card:
                      type: custom:mushroom-light-card
                      name: Hallway
                      entity: light.foyer_hallway_ceiling
                      collapsible_controls: true
                      show_brightness_control: true
                  - type: custom:mushroom-light-card
                    name: Upper Ledge
                    entity: light.foyer_ceiling_ledge
                    collapsible_controls: true
                    show_brightness_control: true
                    show_color_control: true
                    use_light_color: true
                  - type: custom:mushroom-light-card
                    name: Under Table
                    entity: light.foyer_under_table
                    collapsible_controls: true
                    show_brightness_control: true
                    show_color_control: true
                    use_light_color: true
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Devices
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  '--masonry-view-card-margin': 0
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:mushroom-lock-card
                    entity: lock.front_door
                    layout: vertical
                    icon_type: none
                    primary_info: name
                    secondary_info: state
                    hold_action:
                      action: more-info
                    double_tap_action:
                      action: more-info
                  - type: custom:mushroom-climate-card
                    entity: climate.ecobee
                    name: Thermostat
                    layout: vertical
                    icon_type: none
                    primary_info: name
                    secondary_info: state
                    show_temperature_control: true
                    hvac_modes:
                      - auto
                      - cool
                      - heat
                    hold_action:
                      action: more-info
                    double_tap_action:
                      action: more-info
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Water Detection
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:button-card
                    template: entity_card__leak
                    name: Air Conditioner
                    entity: binary_sensor.leak_air_conditioner
                    variables:
                      data_entity: sensor.leak_battery_air_conditioner
          - type: custom:expander-card
            title: Configure
            card_mod:
              style: |
                ha-card { 
                  color: red !important;
                }
            cards:
              - type: entities
                show_header_toggle: false
                card_mod:
                  style: |
                    ha-card.type-entities { 
                      --ha-card-border-color: transparent;
                      --ha-card-border-width: 0;
                      --ha-card-border-radius: 0;
                      --ha-card-background: transparent;
                      padding-top: 12px;
                      padding-right: 0;
                      padding-left: 0;
                    }

                    #states { padding: 0;}
                entities:
                  - entity: input_boolean.sync_foyer_lights
                    name: Sync Ceiling Lights
                  - entity: input_boolean.automation_foyer_door_open_close
                    name: Turn on entryway light when door opens at night
            title-card-clickable: true
        view_layout:
          grid-area: modalFoyer
      - type: custom:button-card
        view_layout:
          grid-area: tileKit
        template: room_tile
        name: Kitchen
        entity: light.all_lights_kitchen
        triggers_update:
          - light.all_lights_kitchen
          - binary_sensor.all_leak_sensors_kitchen
        variables:
          path: '#details-kitchen'
          icon_on: mdi:fridge
          icon_off: mdi:fridge-outline
          data_door: false
          data_lightOn: light.kitchen_ceiling_lights
          data_temperature: false
          badge_alert: |
            [[[ 
              let leakEntities = [
                states['binary_sensor.leak_sink_kitchen'],
                states['binary_sensor.leak_dish_washer']
              ];

              for( var i = 0; i < leakEntities.length; i++ )
              { 
                if( leakEntities[i] !== undefined && leakEntities[i].state === 'on' )
                { 
                 return '<ha-icon icon="mdi:water-alert"></ha-icon>';

                } // endif
              } // endif

              return '';
            ]]]
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#details-kitchen'
            styles: |-
              #root {
                border: var( --popup--border-width ) solid var( --popup--border-color ) !important;
                background-color: var( --popup--background-color ) !important;
              }

              .bubble-header-container { height: 0 !important;}

              .bubble-header, 
              .bubble-close-button { display: none !important;}

              .bubble-pop-up-container { 
                  padding-top: 0 !important;
                  margin-top: 0 !important;
              }
            margin: 7px
            width_desktop: 540px
            width_mobile: 100%
            bg_opacity: '90'
            bg_blur: '6'
            bg_color: var( --modal--background-color )
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-auto-rows: min-content
              grid-template-columns: min-content 1fr min-content
              grid-template-areas: '"icon title action"'
            cards:
              - type: custom:mushroom-template-card
                view_layout:
                  grid-area: icon
                show_name: false
                show_state: false
                show_label: false
                card_mod:
                  style: |
                    ha-card {
                      padding: 0 !important;
                      border: none;
                      margin: 1px 5px 0 -5px;
                    }

                    mushroom-shape-icon { 
                      --shape-color: transparent !important;
                    }
                icon: mdi:fridge
              - type: custom:mushroom-title-card
                title: Kitchen
                card_mod:
                  style: |
                    ha-card { 
                      --title-padding: 0 !important;
                      margin-top: 6px;
                      margin-right: 0;
                      margin-left: 0;
                    }
              - type: custom:button-card
                view_layout:
                  grid-area: action
                template: button__close_popup
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                template: chip_detail__light
                entity: light.all_lights_kitchen
              - type: custom:button-card
                template: chip_detail__leak
                entity: binary_sensor.all_leak_sensors_kitchen
          - type: conditional
            conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity: media_player.echo_kitchen
                    state:
                      - playing
                      - paused
            card:
              type: custom:mini-media-player
              entity: media_player.echo_kitchen
              name: Amazon Echo
              artwork: cover
              hide:
                icon: true
                source: true
                volume: true
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Lights
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_kitchen_ceiling_lights
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_kitchen_ceiling_lights
                        state: 'on'
                    card:
                      type: custom:mushroom-light-card
                      name: Ceiling Lights
                      entity: light.kitchen_ceiling_lights
                      collapsible_controls: true
                      show_brightness_control: true
                      show_color_control: true
                      use_light_color: true
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_kitchen_ceiling_lights
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_kitchen_ceiling_lights
                        state: 'off'
                    card:
                      type: custom:mushroom-light-card
                      name: Ceiling Light 1
                      entity: light.kitchen_light_1
                      collapsible_controls: true
                      show_brightness_control: true
                      show_color_control: true
                      use_light_color: true
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_kitchen_ceiling_lights
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_kitchen_ceiling_lights
                        state: 'off'
                    card:
                      type: custom:mushroom-light-card
                      name: Ceiling Light 2
                      entity: light.kitchen_light_2
                      collapsible_controls: true
                      show_brightness_control: true
                      show_color_control: true
                      use_light_color: true
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_kitchen_ceiling_lights
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_kitchen_ceiling_lights
                        state: 'off'
                    card:
                      type: custom:mushroom-light-card
                      name: Ceiling Light 3
                      entity: light.kitchen_light_3
                      collapsible_controls: true
                      show_brightness_control: true
                      show_color_control: true
                      use_light_color: true
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_kitchen_ceiling_lights
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_kitchen_ceiling_lights
                        state: 'off'
                    card:
                      type: custom:mushroom-light-card
                      name: Ceiling Light 4
                      entity: light.kitchen_light_4
                      collapsible_controls: true
                      show_brightness_control: true
                      show_color_control: true
                      use_light_color: true
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_kitchen_ceiling_lights
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_kitchen_ceiling_lights
                        state: 'off'
                    card:
                      type: custom:mushroom-light-card
                      name: Ceiling Light 5
                      entity: light.kitchen_light_5
                      collapsible_controls: true
                      show_brightness_control: true
                      show_color_control: true
                      use_light_color: true
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_kitchen_ceiling_lights
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_kitchen_ceiling_lights
                        state: 'off'
                    card:
                      type: custom:mushroom-light-card
                      name: Ceiling Light 6
                      entity: light.kitchen_light_6
                      collapsible_controls: true
                      show_brightness_control: true
                      show_color_control: true
                      use_light_color: true
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_cabinet_above_lights
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_cabinet_above_lights
                        state: 'on'
                    card:
                      type: custom:mushroom-light-card
                      name: Cabinet Up Lights
                      entity: light.cabinet_upper_lights
                      collapsible_controls: true
                      show_brightness_control: true
                      show_color_control: true
                      use_light_color: true
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_cabinet_above_lights
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_cabinet_above_lights
                        state: 'off'
                    card:
                      type: custom:mushroom-light-card
                      name: Coffee Bar Up Lights
                      entity: light.kitchen_cabinet_upper_coffee_bar
                      collapsible_controls: true
                      show_brightness_control: true
                      show_color_control: true
                      use_light_color: true
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_cabinet_above_lights
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_cabinet_above_lights
                        state: 'off'
                    card:
                      type: custom:mushroom-light-card
                      name: Range/Oven Up Lights
                      entity: light.kitchen_cabinet_upper_range
                      collapsible_controls: true
                      show_brightness_control: true
                      show_color_control: true
                      use_light_color: true
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Devices
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:mini-graph-card
                    name: Refrigerator
                    show:
                      icon: false
                      points: false
                    animate: true
                    decimals: 0
                    line_color: var( --blue-color-hex )
                    tap_action:
                      action: none
                    entities:
                      - entity: sensor.temperature_refrigerator
                  - type: custom:mini-graph-card
                    name: Freezer
                    show:
                      icon: false
                      points: false
                    animate: true
                    decimals: 0
                    line_color: var( --grey-color-hex )
                    tap_action:
                      action: none
                    entities:
                      - entity: sensor.temperature_freezer
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:button-card
                    template: entity_card__leak
                    name: Sink
                    entity: binary_sensor.leak_sink_kitchen
                    variables:
                      data_entity: sensor.leak_battery_sink_kitchen
                  - type: custom:button-card
                    template: entity_card__leak
                    name: Dish Washer
                    entity: binary_sensor.leak_dish_washer
                    variables:
                      data_entity: sensor.leak_battery_dish_washer
          - type: custom:expander-card
            title: Other
            cards:
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:mushroom-light-card
                    name: Above Coffee Bar
                    entity: switch.plug_kitchen_cabinets_upper_coffee_bar
                  - type: custom:mushroom-light-card
                    name: Above Range
                    entity: switch.plug_kitchen_cabinets_upper_range
                  - type: custom:mushroom-light-card
                    name: Tablet Power
                    entity: light.tablet_plug
          - type: custom:expander-card
            title: Configure
            cards:
              - type: entities
                show_header_toggle: false
                card_mod:
                  style: |
                    ha-card.type-entities { 
                      --ha-card-border-color: transparent;
                      --ha-card-border-width: 0;
                      --ha-card-border-radius: 0;
                      --ha-card-background: transparent;
                      padding-top: 12px;
                      padding-right: 0;
                      padding-left: 0;
                    }

                    #states { padding: 0;}
                entities:
                  - entity: input_boolean.sync_kitchen_ceiling_lights
                    name: Sync Ceiling Lights
                  - entity: input_boolean.sync_cabinet_above_lights
                    name: Sync Cabinet Up Lights
        view_layout:
          grid-area: modalKit
      - type: custom:button-card
        view_layout:
          grid-area: tileLivR
        template: room_tile
        name: Living Room
        entity: light.all_lights_living_room
        triggers_update:
          - light.all_lights_living_room
          - binary_sensor.door_living
        variables:
          path: '#details-living-room'
          icon_on: mdi:sofa
          icon_off: mdi:sofa-outline
          data_door: binary_sensor.door_living
          data_lightOn: light.living_room_corner_lamp
          data_temperature: sensor.temperature_living_room
          badge_alert: |
            [[[ 
              if( states['binary_sensor.door_living'].state == 'on' )
              {
                return '<ha-icon icon="mdi:door-sliding-open"></ha-icon>';

              } // endif

              return '';
            ]]]
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#details-living-room'
            styles: |-
              #root {
                border: var( --popup--border-width ) solid var( --popup--border-color ) !important;
                background-color: var( --popup--background-color ) !important;
              }

              .bubble-header-container { height: 0 !important;}

              .bubble-header, 
              .bubble-close-button { display: none !important;}

              .bubble-pop-up-container { 
                  padding-top: 0 !important;
                  margin-top: 0 !important;
              }
            margin: 7px
            width_desktop: 540px
            width_mobile: 100%
            bg_opacity: '90'
            bg_blur: '6'
            bg_color: var( --modal--background-color )
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-auto-rows: min-content
              grid-template-columns: min-content 1fr min-content
              grid-template-areas: '"icon title action"'
            cards:
              - type: custom:mushroom-template-card
                view_layout:
                  grid-area: icon
                show_name: false
                show_state: false
                show_label: false
                card_mod:
                  style: |
                    ha-card {
                      padding: 0 !important;
                      border: none;
                      margin: 1px 5px 0 -5px;
                    }

                    mushroom-shape-icon { 
                      --shape-color: transparent !important;
                    }
                icon: mdi:sofa
              - type: custom:mushroom-title-card
                title: Living Room
                card_mod:
                  style: |
                    ha-card { 
                      --title-padding: 0 !important;
                      margin-top: 6px;
                      margin-right: 0;
                      margin-left: 0;
                    }
              - type: custom:button-card
                view_layout:
                  grid-area: action
                template: button__close_popup
          - type: custom:mod-card
            style:
              hui-horizontal-stack-card$: |
                #root { 
                  flex-wrap: wrap;
                }
            card:
              type: horizontal-stack
              cards:
                - type: custom:button-card
                  template: chip_detail__temperature
                  entity: sensor.temperature_living_room
                - type: custom:button-card
                  template: chip_detail__door
                  entity: binary_sensor.door_living
                - type: custom:button-card
                  template: chip_detail__light
                  entity: light.all_lights_living_room
          - type: vertical-stack
            cards:
              - type: conditional
                conditions:
                  - condition: or
                    conditions:
                      - condition: state
                        entity: media_player.appletv_living_room
                        state:
                          - playing
                          - paused
                          - buffering
                card:
                  type: custom:mini-media-player
                  entity: media_player.appletv_living_room
                  name: AppleTV
                  artwork: cover
                  hide:
                    icon: true
                    source: true
                    volume: true
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Lights
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:mushroom-light-card
                    name: Ceiling
                    entity: light.living_room_corner_lamp
                    collapsible_controls: true
                    show_brightness_control: true
                    show_color_control: true
                    use_light_color: true
                  - type: custom:mushroom-light-card
                    name: TV Ambient Lights
                    entity: light.tv_ambient_lights
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Devices
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:mushroom-media-player-card
                    name: Television
                    primary_info: name
                    secondary_info: none
                    entity: media_player.sony_bravia_tv
                    collapsible_controls: true
                    media_controls: on_off
                    volume_controls: volume_mute volume_buttons
          - type: custom:expander-card
            title: Configure
            cards:
              - type: entities
                show_header_toggle: false
                card_mod:
                  style: |
                    ha-card.type-entities { 
                      --ha-card-border-color: transparent;
                      --ha-card-border-width: 0;
                      --ha-card-border-radius: 0;
                      --ha-card-background: transparent;
                      padding-top: 12px;
                      padding-right: 0;
                      padding-left: 0;
                    }

                    #states { padding: 0;}
                entities:
                  - entity: input_boolean.automation_living_room_door_open_close
                    name: Turn on exterior string light when door opens at night
        view_layout:
          grid-area: modalLivR
      - type: custom:button-card
        view_layout:
          grid-area: tileDinR
        template: room_tile
        name: Dining Room
        entity: light.all_lights_dining_room
        variables:
          path: '#details-dining-room'
          icon_on: mdi:table-furniture
          icon_off: mdi:table-furniture
          data_door: false
          data_lightOn: light.dining_room_chandelier
          data_temperature: sensor.temperature_living_room
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#details-dining-room'
            styles: |-
              #root {
                border: var( --popup--border-width ) solid var( --popup--border-color ) !important;
                background-color: var( --popup--background-color ) !important;
              }

              .bubble-header-container { height: 0 !important;}

              .bubble-header, 
              .bubble-close-button { display: none !important;}

              .bubble-pop-up-container { 
                  padding-top: 0 !important;
                  margin-top: 0 !important;
              }
            margin: 7px
            width_desktop: 540px
            width_mobile: 100%
            bg_opacity: '90'
            bg_blur: '6'
            bg_color: var( --modal--background-color )
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-auto-rows: min-content
              grid-template-columns: min-content 1fr min-content
              grid-template-areas: '"icon title action"'
            cards:
              - type: custom:mushroom-template-card
                view_layout:
                  grid-area: icon
                show_name: false
                show_state: false
                show_label: false
                card_mod:
                  style: |
                    ha-card {
                      padding: 0 !important;
                      border: none;
                      margin: 1px 5px 0 -5px;
                    }

                    mushroom-shape-icon { 
                      --shape-color: transparent !important;
                    }
                icon: mdi:table-furniture
              - type: custom:mushroom-title-card
                title: Dining Room
                card_mod:
                  style: |
                    ha-card { 
                      --title-padding: 0 !important;
                      margin-top: 6px;
                      margin-right: 0;
                      margin-left: 0;
                    }
              - type: custom:button-card
                view_layout:
                  grid-area: action
                template: button__close_popup
          - type: custom:mod-card
            style:
              hui-horizontal-stack-card$: |
                #root { 
                  flex-wrap: wrap;
                }
            card:
              type: horizontal-stack
              cards:
                - type: custom:button-card
                  template: chip_detail__temperature
                  entity: sensor.temperature_living_room
                - type: custom:button-card
                  template: chip_detail__light
                  entity: light.all_lights_dining_room
          - type: conditional
            conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity: media_player.echo_dot_dining_room
                    state:
                      - playing
                      - paused
            card:
              type: custom:mini-media-player
              entity: media_player.echo_dot_dining_room
              name: Amazon Echo Dot
              artwork: cover
              hide:
                icon: true
                source: true
                volume: true
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Lights
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:mushroom-light-card
                    name: Chandelier
                    entity: light.dining_room_chandelier
                    collapsible_controls: true
                    show_brightness_control: true
        view_layout:
          grid-area: modalDinR
      - type: custom:button-card
        view_layout:
          grid-area: tileBdr1
        template: room_tile
        name: Main Bedroom
        entity: light.all_lights_bedroom_1
        triggers_update:
          - cover.large_window_curtains_bedroom_1
          - light.all_lights_bedroom_1
          - binary_sensor.door_bedroom_1
        variables:
          path: '#details-bedroom-1'
          icon_on: mdi:bed-king
          icon_off: mdi:bed-king-outline
          data_curtains: cover.large_window_curtains_bedroom_1
          data_door: binary_sensor.door_bedroom_1
          data_lightOn: light.bedroom_1_bedside_lamps
          data_temperature: sensor.temperature_bedroom_1
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#details-bedroom-1'
            styles: |-
              #root {
                border: var( --popup--border-width ) solid var( --popup--border-color ) !important;
                background-color: var( --popup--background-color ) !important;
              }

              .bubble-header-container { height: 0 !important;}

              .bubble-header, 
              .bubble-close-button { display: none !important;}

              .bubble-pop-up-container { 
                  padding-top: 0 !important;
                  margin-top: 0 !important;
              }
            margin: 7px
            width_desktop: 540px
            width_mobile: 100%
            bg_opacity: '90'
            bg_blur: '6'
            bg_color: var( --modal--background-color )
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-auto-rows: min-content
              grid-template-columns: min-content 1fr min-content
              grid-template-areas: '"icon title action"'
            cards:
              - type: custom:mushroom-template-card
                view_layout:
                  grid-area: icon
                show_name: false
                show_state: false
                show_label: false
                card_mod:
                  style: |
                    ha-card {
                      padding: 0 !important;
                      border: none;
                      margin: 1px 5px 0 -5px;
                    }
                      
                    mushroom-shape-icon { 
                      --shape-color: transparent !important;
                    }
                icon: mdi:bed-king
              - type: custom:mushroom-title-card
                title: Main Bedroom
                card_mod:
                  style: |
                    ha-card { 
                      --title-padding: 0 !important;
                      margin-top: 6px;
                      margin-right: 0;
                      margin-left: 0;
                    }
              - type: custom:button-card
                view_layout:
                  grid-area: action
                template: button__close_popup
          - type: custom:mod-card
            style:
              hui-horizontal-stack-card$: |
                #root { 
                  flex-wrap: wrap;
                }
            card:
              type: horizontal-stack
              cards:
                - type: custom:button-card
                  template: chip_detail__temperature
                  entity: sensor.temperature_bedroom_1
                - type: custom:button-card
                  template: chip_detail__door
                  entity: binary_sensor.door_bedroom_1
                - type: custom:button-card
                  template: chip_detail__light
                  entity: light.all_lights_bedroom_1
          - type: vertical-stack
            cards:
              - type: conditional
                conditions:
                  - condition: or
                    conditions:
                      - condition: state
                        entity: media_player.appletv_bedroom_1
                        state:
                          - playing
                          - paused
                          - buffering
                card:
                  type: custom:mini-media-player
                  entity: media_player.appletv_bedroom_1
                  name: AppleTV
                  artwork: cover
                  hide:
                    icon: true
                    source: true
                    volume: true
              - type: conditional
                conditions:
                  - condition: or
                    conditions:
                      - condition: state
                        entity: media_player.echo_dot_bedroom_1
                        state:
                          - playing
                          - paused
                card:
                  type: custom:mini-media-player
                  entity: media_player.echo_dot_bedroom_1
                  name: Amazon Echo Dot
                  artwork: cover
                  hide:
                    icon: true
                    source: true
                    volume: true
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Lights
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_bedroom_1_bedside_lamps
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_bedroom_1_bedside_lamps
                        state: 'on'
                    card:
                      type: custom:mushroom-light-card
                      name: Bedside Lamps
                      entity: light.bedroom_1_bedside_lamps
                      collapsible_controls: true
                      show_brightness_control: true
                      show_color_control: true
                      use_light_color: true
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_bedroom_1_bedside_lamps
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_bedroom_1_bedside_lamps
                        state: 'off'
                    card:
                      type: custom:mushroom-light-card
                      name: Jess' Bedside Lamp
                      entity: light.bedroom_1_lamp_hers
                      collapsible_controls: true
                      show_brightness_control: true
                      show_color_control: true
                      use_light_color: true
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_bedroom_1_bedside_lamps
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_bedroom_1_bedside_lamps
                        state: 'off'
                    card:
                      type: custom:mushroom-light-card
                      name: Tom's Bedside Lamp
                      entity: light.bedroom_1_lamp_his
                      collapsible_controls: true
                      show_brightness_control: true
                      show_color_control: true
                      use_light_color: true
                  - type: custom:mushroom-light-card
                    entity: light.closet_hallway_ceiling_light
                    name: Hallway
                    collapsible_controls: true
                    show_brightness_control: true
                  - type: custom:mushroom-light-card
                    entity: light.closet_hallway_light_hers
                    name: Jess' Closet
                    collapsible_controls: true
                    show_brightness_control: true
                  - type: custom:mushroom-light-card
                    entity: light.closet_hallway_light_his
                    name: Tom's Closet
                    collapsible_controls: true
                    show_brightness_control: true
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Windows
              - type: custom:mushroom-cover-card
                layout: horizontal
                name: Curtains
                entity: cover.large_window_curtains_bedroom_1
                collapsible_controls: true
                show_buttons_control: true
          - type: custom:expander-card
            title: Other
            cards:
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:mushroom-light-card
                    name: Camera Power
                    entity: light.camera_power_bdr1
          - type: custom:expander-card
            title: Configure
            cards:
              - type: entities
                show_header_toggle: false
                card_mod:
                  style: |
                    ha-card.type-entities { 
                      --ha-card-border-color: transparent;
                      --ha-card-border-width: 0;
                      --ha-card-border-radius: 0;
                      --ha-card-background: transparent;
                      padding-top: 12px;
                      padding-right: 0;
                      padding-left: 0;
                    }

                    #states { padding: 0;}
                entities:
                  - entity: input_boolean.sync_bedroom_1_bedside_lamps
                    name: Sync bedside lamps
                  - entity: input_boolean.automation_bedroom_1_door_open_close
                    name: Toggle lights when door opens/closes
                  - entity: input_boolean.closet_automatic_turn_off
                    name: Automatically turn off closet lights
        view_layout:
          grid-area: modalBdr1
      - type: custom:button-card
        view_layout:
          grid-area: tileBdr2
        template: room_tile
        name: Guest Bedroom
        entity: light.all_lights_bedroom_2
        triggers_update:
          - light.all_lights_bedroom_2
          - binary_sensor.door_bedroom_2
        variables:
          path: '#details-bedroom-2'
          icon_on: mdi:bed
          icon_off: mdi:bed-outline
          data_door: binary_sensor.door_bedroom_2
          data_lightOn: light.bedroom_2_bedside_lamps
          data_temperature: sensor.temperature_bedroom_2
      - type: vertical-stack
        view_layout:
          grid-area: modalBdr2
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#details-bedroom-2'
            styles: |-
              #root {
                border: var( --popup--border-width ) solid var( --popup--border-color ) !important;
                background-color: var( --popup--background-color ) !important;
              }

              .bubble-header-container { height: 0 !important;}

              .bubble-header, 
              .bubble-close-button { display: none !important;}

              .bubble-pop-up-container { 
                  padding-top: 0 !important;
                  margin-top: 0 !important;
              }
            margin: 7px
            width_desktop: 540px
            width_mobile: 100%
            bg_opacity: '90'
            bg_blur: '6'
            bg_color: var( --modal--background-color )
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-auto-rows: min-content
              grid-template-columns: min-content 1fr min-content
              grid-template-areas: '"icon title action"'
            cards:
              - type: custom:mushroom-template-card
                view_layout:
                  grid-area: icon
                show_name: false
                show_state: false
                show_label: false
                card_mod:
                  style: |
                    ha-card {
                      padding: 0 !important;
                      border: none;
                      margin: 1px 5px 0 -5px;
                    }

                    mushroom-shape-icon { 
                      --shape-color: transparent !important;
                    }
                icon: mdi:bed
              - type: custom:mushroom-title-card
                title: Guest Bedroom
                card_mod:
                  style: |
                    ha-card { 
                      --title-padding: 0 !important;
                      margin-top: 6px;
                      margin-right: 0;
                      margin-left: 0;
                    }
              - type: custom:button-card
                view_layout:
                  grid-area: action
                template: button__close_popup
          - type: custom:mod-card
            style:
              hui-horizontal-stack-card$: |
                #root { 
                  flex-wrap: wrap;
                }
            card:
              type: horizontal-stack
              cards:
                - type: custom:button-card
                  template: chip_detail__temperature
                  entity: sensor.temperature_bedroom_2
                - type: custom:button-card
                  template: chip_detail__door
                  entity: binary_sensor.door_bedroom_2
                - type: custom:button-card
                  template: chip_detail__light
                  entity: light.all_lights_bedroom_2
          - type: conditional
            conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity: media_player.appletv_bedroom_2
                    state:
                      - playing
                      - paused
                      - buffering
            card:
              type: custom:mini-media-player
              entity: media_player.appletv_bedroom_2
              name: AppleTV
              artwork: cover
              hide:
                icon: true
                source: true
                volume: true
          - type: conditional
            conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity: media_player.echo_dot_bedroom_2
                    state:
                      - playing
                      - paused
            card:
              type: custom:mini-media-player
              entity: media_player.echo_dot_bedroom_2
              name: Amazon Echo Dot
              artwork: cover
              hide:
                icon: true
                source: true
                volume: true
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Lights
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_bedroom_2_bedside_lamps
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_bedroom_2_bedside_lamps
                        state: 'on'
                    card:
                      type: custom:mushroom-light-card
                      name: Bedside Lamps
                      entity: light.bedroom_2_bedside_lamps
                      collapsible_controls: true
                      show_brightness_control: true
                      show_color_control: true
                      use_light_color: true
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_bedroom_2_bedside_lamps
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_bedroom_2_bedside_lamps
                        state: 'off'
                    card:
                      type: custom:mushroom-light-card
                      name: Right Bedside Lamp
                      entity: light.bedroom_2_lamp_right
                      collapsible_controls: true
                      show_brightness_control: true
                      show_color_control: true
                      use_light_color: true
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_bedroom_2_bedside_lamps
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_bedroom_2_bedside_lamps
                        state: 'off'
                    card:
                      type: custom:mushroom-light-card
                      name: Left Bedside Lamp
                      entity: light.bedroom_2_lamp_left
                      collapsible_controls: true
                      show_brightness_control: true
                      show_color_control: true
                      use_light_color: true
          - type: custom:expander-card
            title: Configure
            cards:
              - type: entities
                show_header_toggle: false
                card_mod:
                  style: |
                    ha-card.type-entities { 
                      --ha-card-border-color: transparent;
                      --ha-card-border-width: 0;
                      --ha-card-border-radius: 0;
                      --ha-card-background: transparent;
                      padding-top: 12px;
                      padding-right: 0;
                      padding-left: 0;
                    }

                    #states { padding: 0;}
                entities:
                  - entity: input_boolean.sync_bedroom_2_bedside_lamps
                    name: Sync Bedside Lamps
                  - entity: input_boolean.automation_bedroom_2_door_open_close
                name: Toggle lights when door opens/closes
      - type: custom:button-card
        view_layout:
          grid-area: tileBdr3
        template: room_tile
        name: Jess' Office
        entity: light.all_lights_bedroom_3
        triggers_update:
          - light.all_lights_bedroom_3
          - binary_sensor.door_bedroom_3
        variables:
          path: '#details-bedroom-3'
          icon_on: mdi:monitor-account
          icon_off: mdi:monitor
          data_door: binary_sensor.door_bedroom_3
          data_lightOn: light.bedroom_3_lights
          data_temperature: sensor.temperature_bedroom_3
        tap_action:
          action: none
        double_tap_action:
          action: none
        hold_action:
          action: none
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#details-bedroom-3'
            styles: |-
              #root {
                border: var( --popup--border-width ) solid var( --popup--border-color ) !important;
                background-color: var( --popup--background-color ) !important;
              }

              .bubble-header-container { height: 0 !important;}

              .bubble-header, 
              .bubble-close-button { display: none !important;}

              .bubble-pop-up-container { 
                  padding-top: 0 !important;
                  margin-top: 0 !important;
              }
            margin: 7px
            width_desktop: 540px
            width_mobile: 100%
            bg_opacity: '90'
            bg_blur: '6'
            bg_color: var( --modal--background-color )
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-auto-rows: min-content
              grid-template-columns: min-content 1fr min-content
              grid-template-areas: '"icon title action"'
            cards:
              - type: custom:mushroom-template-card
                view_layout:
                  grid-area: icon
                show_name: false
                show_state: false
                show_label: false
                card_mod:
                  style: |
                    ha-card {
                      padding: 0 !important;
                      border: none;
                      margin: 1px 5px 0 -5px;
                    }

                    mushroom-shape-icon { 
                      --shape-color: transparent !important;
                    }
                icon: mdi:monitor
              - type: custom:mushroom-title-card
                title: Jess' Office
                card_mod:
                  style: |
                    ha-card { 
                      --title-padding: 0 !important;
                      margin-top: 6px;
                      margin-right: 0;
                      margin-left: 0;
                    }
              - type: custom:button-card
                view_layout:
                  grid-area: action
                template: button__close_popup
          - type: custom:mod-card
            style:
              hui-horizontal-stack-card$: |
                #root { 
                  flex-wrap: wrap;
                }
            card:
              type: horizontal-stack
              cards:
                - type: custom:button-card
                  template: chip_detail__temperature
                  entity: sensor.temperature_bedroom_3
                - type: custom:button-card
                  template: chip_detail__door
                  entity: binary_sensor.door_bedroom_3
          - type: conditional
            conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity: media_player.appletv_bedroom_3
                    state:
                      - playing
                      - paused
                      - buffering
            card:
              type: custom:mini-media-player
              entity: media_player.appletv_bedroom_3
              name: AppleTV
              artwork: cover
              hide:
                icon: true
                source: true
                volume: true
          - type: conditional
            conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity: media_player.echo_dot_bedroom_3
                    state:
                      - playing
                      - paused
            card:
              type: custom:mini-media-player
              entity: media_player.echo_dot_bedroom_3
              name: Amazon Echo Dot
              artwork: cover
              hide:
                icon: true
                source: true
                volume: true
        view_layout:
          grid-area: modalBdr3
      - type: custom:button-card
        view_layout:
          grid-area: tileBdr4
        template: room_tile
        name: Tom's Office
        entity: light.all_lights_bedroom_4
        triggers_update:
          - cover.blinds_bedroom_4
          - light.all_lights_bedroom_4
          - binary_sensor.door_bedroom_4
        variables:
          path: '#details-bedroom-4'
          icon_on: mdi:desk-lamp-on
          icon_off: mdi:desk-lamp
          data_blinds: cover.blinds_bedroom_4
          data_door: binary_sensor.door_bedroom_4
          data_lightOn: light.bedroom_4_lights
          data_temperature: sensor.temperature_bedroom_4
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#details-bedroom-4'
            styles: |-
              #root {
                border: var( --popup--border-width ) solid var( --popup--border-color ) !important;
                background-color: var( --popup--background-color ) !important;
              }

              .bubble-header-container { height: 0 !important;}

              .bubble-header, 
              .bubble-close-button { display: none !important;}

              .bubble-pop-up-container { 
                  padding-top: 0 !important;
                  margin-top: 0 !important;
              }
            margin: 7px
            width_desktop: 540px
            width_mobile: 100%
            bg_opacity: '90'
            bg_blur: '6'
            bg_color: var( --modal--background-color )
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-auto-rows: min-content
              grid-template-columns: min-content 1fr min-content
              grid-template-areas: '"icon title action"'
            cards:
              - type: custom:mushroom-template-card
                view_layout:
                  grid-area: icon
                show_name: false
                show_state: false
                show_label: false
                card_mod:
                  style: |
                    ha-card {
                      padding: 0 !important;
                      border: none;
                      margin: 1px 5px 0 -5px;
                    }

                    mushroom-shape-icon { 
                      --shape-color: transparent !important;
                    }
                icon: mdi:desk-lamp
              - type: custom:mushroom-title-card
                title: Tom's Office
                card_mod:
                  style: |
                    ha-card { 
                      --title-padding: 0 !important;
                      margin-top: 6px;
                      margin-right: 0;
                      margin-left: 0;
                    }
              - type: custom:button-card
                view_layout:
                  grid-area: action
                template: button__close_popup
          - type: custom:mod-card
            style:
              hui-horizontal-stack-card$: |
                #root { 
                  flex-wrap: wrap;
                }
            card:
              type: horizontal-stack
              cards:
                - type: custom:button-card
                  template: chip_detail__temperature
                  entity: sensor.temperature_bedroom_4
                - type: custom:button-card
                  template: chip_detail__door
                  entity: binary_sensor.door_bedroom_4
                - type: custom:button-card
                  template: chip_detail__light
                  entity: light.all_lights_bedroom_4
          - type: conditional
            conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity: media_player.appletv_bedroom_4
                    state:
                      - playing
                      - paused
                      - buffering
            card:
              type: custom:mini-media-player
              entity: media_player.appletv_bedroom_4
              name: AppleTV
              artwork: cover
              hide:
                icon: true
                source: true
                volume: true
          - type: conditional
            conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity: media_player.echo_dot_bedroom_4
                    state:
                      - playing
                      - paused
            card:
              type: custom:mini-media-player
              entity: media_player.echo_dot_bedroom_4
              name: Amazon Echo Dot
              artwork: cover
              hide:
                icon: true
                source: true
                volume: true
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Lights
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_bedroom_4_lights
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_bedroom_4_lights
                        state: 'on'
                    card:
                      type: custom:mushroom-light-card
                      name: Room Lights
                      entity: light.bedroom_4_lights
                      collapsible_controls: true
                      show_brightness_control: true
                      show_color_control: true
                      use_light_color: true
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_bedroom_4_lights
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_bedroom_4_lights
                        state: 'off'
                    card:
                      type: custom:mushroom-light-card
                      name: Desk Lamp
                      entity: light.bedroom_4_desk_lamp
                      collapsible_controls: true
                      show_brightness_control: true
                      show_color_control: true
                      use_light_color: true
                  - type: conditional
                    conditions:
                      - condition: state
                        entity: input_boolean.sync_bedroom_4_lights
                        state_not: unavailable
                      - condition: state
                        entity: input_boolean.sync_bedroom_4_lights
                        state: 'off'
                    card:
                      type: custom:mushroom-light-card
                      name: Lightstrip
                      entity: light.bedroom_4_lightstrip
                      collapsible_controls: true
                      show_brightness_control: true
                      show_color_control: true
                      use_light_color: true
                  - type: custom:mushroom-light-card
                    name: TIE Fighter
                    entity: light.bedroom_4_tie_fighter_lamp
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Windows
              - type: custom:mushroom-cover-card
                layout: horizontal
                name: Window Blind
                entity: cover.blinds_bedroom_4
                collapsible_controls: false
                show_tilt_position_control: true
          - type: conditional
            conditions:
              - condition: state
                entity: sensor.desk_bedroom_4_desk_height
                state_not: unavailable
              - condition: state
                entity: select.desk_bedroom_4_height_units
                state_not: unavailable
            card:
              type: vertical-stack
              cards:
                - type: custom:mushroom-template-card
                  primary: >-
                    {% set height = states( 'sensor.desk_bedroom_4_desk_height'
                    ) %}

                    {% set unit = states( 'select.desk_bedroom_4_height_units' )
                    %} Desk Height ({{height}} {{unit}})
                  card_mod:
                    style: |
                      ha-card {
                        --card-primary-color: var( --subtitle-color ) !important;
                        --card-primary-font-size: var( --subtitle-font-size ) !important;
                        --card-primary-font-weight: var( --subtitle-font-weight ) !important;
                        --card-primary-line-height: var( --subtitle-line-height ) !important;
                        --card-primary-letter-spacing: var( --subtitle-letter-spacing ) !important;
                        border: none;
                        box-shadow: none;
                        background: rgba( 0, 0, 0, 0 );
                        margin: 0;
                        cursor: default;
                      }
                - type: custom:layout-card
                  layout_type: custom:grid-layout
                  layout:
                    padding: var( --popup--grid-padding )
                    margin: var( --popup--grid-margin )
                    grid-row-gap: var( --popup--grid-gap-row )
                    grid-column-gap: var( --popup--grid-gap-column )
                    grid-auto-rows: auto
                    grid-template-columns: repeat( 4, minmax( 0, 1fr ) )
                  cards:
                    - type: custom:button-card
                      entity: button.desk_bedroom_4_preset_1
                      name: Lowest
                      template: button__bdr4_desk_control
                      variables:
                        entity_height: sensor.desk_bedroom_4_desk_height
                        height_min: 0
                        height_max: 30
                    - type: custom:button-card
                      entity: button.desk_bedroom_4_preset_2
                      name: Sitting
                      template: button__bdr4_desk_control
                      variables:
                        entity_height: sensor.desk_bedroom_4_desk_height
                        height_min: 30
                        height_max: 34.5
                    - type: custom:button-card
                      entity: button.desk_bedroom_4_preset_3
                      name: Standing
                      template: button__bdr4_desk_control
                      variables:
                        entity_height: sensor.desk_bedroom_4_desk_height
                        height_min: 34.5
                        height_max: 45.5
                    - type: custom:button-card
                      entity: button.desk_bedroom_4_preset_4
                      name: Highest
                      template: button__bdr4_desk_control
                      variables:
                        entity_height: sensor.desk_bedroom_4_desk_height
                        height_min: 45.5
                        height_max: 100
          - type: custom:expander-card
            title: Other
            cards:
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:mushroom-light-card
                    name: Multimedia Power
                    entity: light.bedroom_4_media_plug
          - type: custom:expander-card
            title: Configure
            cards:
              - type: entities
                show_header_toggle: false
                card_mod:
                  style: |
                    ha-card.type-entities { 
                      --ha-card-border-color: transparent;
                      --ha-card-border-width: 0;
                      --ha-card-border-radius: 0;
                      --ha-card-background: transparent;
                      padding-top: 12px;
                      padding-right: 0;
                      padding-left: 0;
                    }

                    #states { padding: 0;}
                entities:
                  - entity: input_boolean.sync_bedroom_4_lights
                    name: Sync room lights
                  - entity: input_boolean.automation_bedroom_4_door_open_close
                name: Toggle lights when door opens/closes
        view_layout:
          grid-area: modalBdr4
      - type: custom:button-card
        view_layout:
          grid-area: tileLaund
        template: room_tile
        name: Laundry Room
        entity: light.all_lights_laundry_room
        trigger_update:
          - light.all_lights_laundry_room
          - binary_sensor.door_laundry
          - sensor.custom_laundry_washer_machine_state
          - sensor.custom_laundry_dryer_machine_state
          - sensor.reminder_laundry_complete_washer
          - sensor.reminder_laundry_complete_dryer
        variables:
          path: '#details-laundry-room'
          icon: mdi:washing-machine
          data_door: binary_sensor.door_laundry
          data_lightOn: light.laundry_ceiling_light
          data_temperature: sensor.motion_temperature_laundry_room
          badge_alert: |
            [[[
              let announcementCount = 0;
              let entities = [
                states['input_boolean.reminder_laundry_complete_washer'],
                states['input_boolean.reminder_laundry_complete_dryer']
              ];

              for( var i = 0; i < entities.length; i++ )
              { 
                if( entities[i] !== undefined && entities[i].state === 'on' )
                { 
                  announcementCount += 1;

                } // endif
              } // endif


              if( states['binary_sensor.leak_washing_machine'].state == 'on' )
              {
                return '<ha-icon icon="mdi:water-alert"></ha-icon>';

              } else if( announcementCount > 0 )
              { 
                let icon = '<ha-icon icon="mdi:alert"></ha-icon>';

                if( announcementCount > 1 )
                  icon = '<ha-icon icon="mdi:numeric-' + announcementCount + '-circle"></ha-icon>';

                return icon;

              } else if( states['sensor.custom_laundry_washer_machine_state'].state == 'on' )
              {
                return '<ha-icon icon="mdi:washing-machine"></ha-icon>';

              } else if( states['sensor.custom_laundry_dryer_machine_state'].state == 'on' )
              {
                return '<ha-icon icon="mdi:tumble-dryer"></ha-icon>';

              } // endif

              return '';
            ]]]
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#details-laundry-room'
            styles: |-
              #root {
                border: var( --popup--border-width ) solid var( --popup--border-color ) !important;
                background-color: var( --popup--background-color ) !important;
              }

              .bubble-header-container { height: 0 !important;}

              .bubble-header, 
              .bubble-close-button { display: none !important;}

              .bubble-pop-up-container { 
                  padding-top: 0 !important;
                  margin-top: 0 !important;
              }
            margin: 7px
            width_desktop: 540px
            width_mobile: 100%
            bg_opacity: '90'
            bg_blur: '6'
            bg_color: var( --modal--background-color )
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-auto-rows: min-content
              grid-template-columns: min-content 1fr min-content
              grid-template-areas: '"icon title action"'
            cards:
              - type: custom:mushroom-template-card
                view_layout:
                  grid-area: icon
                show_name: false
                show_state: false
                show_label: false
                card_mod:
                  style: |
                    ha-card {
                      padding: 0 !important;
                      border: none;
                      margin: 1px 5px 0 -5px;
                    }

                    mushroom-shape-icon { 
                      --shape-color: transparent !important;
                    }
                icon: mdi:washing-machine
              - type: custom:mushroom-title-card
                title: Laundry Room
                card_mod:
                  style: |
                    ha-card { 
                      --title-padding: 0 !important;
                      margin-top: 6px;
                      margin-right: 0;
                      margin-left: 0;
                    }
              - type: custom:button-card
                view_layout:
                  grid-area: action
                template: button__close_popup
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                template: chip_detail__door
                entity: binary_sensor.door_laundry_room
              - type: custom:button-card
                template: chip_detail__light
                entity: light.all_lights_laundry_room
              - type: custom:button-card
                template: chip_detail__leak
                entity: binary_sensor.all_leak_sensors_laundry_room
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Lights
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:mushroom-light-card
                    name: Ceiling
                    entity: light.laundry_ceiling_light
                    collapsible_controls: true
                    show_brightness_control: true
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Devices
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:button-card
                    template: laundry_card
                    name: Washing Machine
                    entity: sensor.custom_laundry_washer_machine_state
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/page-laundry
                    double_tap_action:
                      action: navigate
                      navigation_path: /lovelace/page-laundry
                    hold_action:
                      action: navigate
                      navigation_path: /lovelace/page-laundry
                    variables:
                      details: sensor.laundry_washer_combined_details
                  - type: custom:button-card
                    template: laundry_card
                    name: Tumble Dryer
                    entity: sensor.custom_laundry_dryer_machine_state
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/page-laundry
                    double_tap_action:
                      action: navigate
                      navigation_path: /lovelace/page-laundry
                    hold_action:
                      action: navigate
                      navigation_path: /lovelace/page-laundry
                    variables:
                      details: sensor.laundry_dryer_combined_details
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Water Detection
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:button-card
                    template: entity_card__leak
                    name: Washing Machine
                    entity: binary_sensor.leak_washing_machine
                    variables:
                      data_entity: sensor.leak_battery_washing_machine
          - type: custom:expander-card
            title: Configure
            cards:
              - type: entities
                show_header_toggle: false
                card_mod:
                  style: |
                    ha-card.type-entities { 
                      --ha-card-border-color: transparent;
                      --ha-card-border-width: 0;
                      --ha-card-border-radius: 0;
                      --ha-card-background: transparent;
                      padding-top: 12px;
                      padding-right: 0;
                      padding-left: 0;
                    }

                    #states { padding: 0;}
                entities:
                  - entity: input_boolean.automation_laundry_room_door_open_close
                name: Toggle lights when door opens/closes
        view_layout:
          grid-area: modalLaund
      - type: custom:button-card
        view_layout:
          grid-area: tileGar
        template: room_tile
        name: Garage
        entity: light.all_lights_garage
        trigger_update:
          - cover.garage_door
          - light.all_lights_garage
          - binary_sensor.door_garage
        double_tap_action:
          action: call-service
          service: |
            [[[ 
              return ( states['cover.garage_door'].state === 'closed') ? 'cover.open_cover' : 'cover.close_cover';
            ]]]
          target:
            entity_id: cover.garage_door
        variables:
          path: '#details-garage'
          icon_on: mdi:car
          icon_off: mdi:car-outline
          data_door: binary_sensor.door_garage
          data_lightOn: light.garage_ceiling
          data_temperature: sensor.temperature_garage
          badge_alert: |
            [[[
              const state = states['cover.garage_door'].state;

              if( state === 'open' )
              {
                return '<ha-icon icon="mdi:garage-open-variant"></ha-icon>';

              } else if( state === 'closed' )
              {
                return '';

              } else if( state === 'opening' )
              {
                return '<ha-icon icon="mdi:arrow-up-bold-box"></ha-icon>';

              } else if( state === 'closing' )
              {
                return '<ha-icon icon="mdi:arrow-down-bold-box"></ha-icon>';

              } else
              { 
                return '<ha-icon icon="mdi:help-circle"></ha-icon>';

              } // endif
            ]]]
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#details-garage'
            styles: |-
              #root {
                border: var( --popup--border-width ) solid var( --popup--border-color ) !important;
                background-color: var( --popup--background-color ) !important;
              }

              .bubble-header-container { height: 0 !important;}

              .bubble-header, 
              .bubble-close-button { display: none !important;}

              .bubble-pop-up-container { 
                  padding-top: 0 !important;
                  margin-top: 0 !important;
              }
            margin: 7px
            width_desktop: 540px
            width_mobile: 100%
            bg_opacity: '90'
            bg_blur: '6'
            bg_color: var( --modal--background-color )
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-auto-rows: min-content
              grid-template-columns: min-content 1fr min-content
              grid-template-areas: '"icon title action"'
            cards:
              - type: custom:mushroom-template-card
                view_layout:
                  grid-area: icon
                show_name: false
                show_state: false
                show_label: false
                card_mod:
                  style: |
                    ha-card {
                      padding: 0 !important;
                      border: none;
                      margin: 1px 5px 0 -5px;
                    }

                    mushroom-shape-icon { 
                      --shape-color: transparent !important;
                    }
                icon: mdi:car
              - type: custom:mushroom-title-card
                title: Garage
                card_mod:
                  style: |
                    ha-card { 
                      --title-padding: 0 !important;
                      margin-top: 6px;
                      margin-right: 0;
                      margin-left: 0;
                    }
              - type: custom:button-card
                view_layout:
                  grid-area: action
                template: button__close_popup
          - type: custom:mod-card
            style:
              hui-horizontal-stack-card$: |
                #root { 
                  flex-wrap: wrap;
                }
            card:
              type: horizontal-stack
              cards:
                - type: custom:button-card
                  template: chip_detail__temperature
                  entity: sensor.temperature_garage
                - type: custom:button-card
                  template: chip_detail__door
                  entity: binary_sensor.door_garage
                - type: custom:button-card
                  template: chip_detail__light
                  entity: light.all_lights_garage
                - type: custom:button-card
                  template: chip_detail__fan
                  entity: fan.custom_garage_fan
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Lights
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:mushroom-light-card
                    name: Ceiling
                    entity: light.garage_ceiling
                    collapsible_controls: true
                  - type: custom:mushroom-light-card
                    name: Opener
                    entity: light.garage_door_light
                    collapsible_controls: true
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Devices
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  '--masonry-view-card-margin': 0
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:mushroom-cover-card
                    entity: cover.garage_door
                    name: Garage Door
                    layout: vertical
                    icon_type: none
                    primary_info: name
                    secondary_info: state
                    show_buttons_control: true
                    hold_action:
                      action: more-info
                    double_tap_action:
                      action: more-info
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Fan
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:mushroom-fan-card
                    name: Fan
                    entity: fan.custom_garage_fan
                    collapsible_controls: true
          - type: custom:expander-card
            title: Configure
            cards:
              - type: entities
                show_header_toggle: false
                card_mod:
                  style: |
                    ha-card.type-entities { 
                      --ha-card-border-color: transparent;
                      --ha-card-border-width: 0;
                      --ha-card-border-radius: 0;
                      --ha-card-background: transparent;
                      padding-top: 12px;
                      padding-right: 0;
                      padding-left: 0;
                    }

                    #states { padding: 0;}
                entities:
                  - entity: input_boolean.automation_garage_door_open_close
                    name: Toggle lights when door opens/closes
        view_layout:
          grid-area: modalGar
      - type: custom:button-card
        view_layout:
          grid-area: tileOut
        template: room_tile
        name: Outside
        entity: light.all_lights_outside
        variables:
          path: '#details-outside'
          icon: mdi:palm-tree
          data_door: false
          data_lightOn: light.backyard_string_lights
          data_temperature: sensor.temperature_attic
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#details-outside'
            styles: |-
              #root {
                border: var( --popup--border-width ) solid var( --popup--border-color ) !important;
                background-color: var( --popup--background-color ) !important;
              }

              .bubble-header-container { height: 0 !important;}

              .bubble-header, 
              .bubble-close-button { display: none !important;}

              .bubble-pop-up-container { 
                  padding-top: 0 !important;
                  margin-top: 0 !important;
              }
            margin: 7px
            width_desktop: 540px
            width_mobile: 100%
            bg_opacity: '90'
            bg_blur: '6'
            bg_color: var( --modal--background-color )
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-auto-rows: min-content
              grid-template-columns: min-content 1fr min-content
              grid-template-areas: '"icon title action"'
            cards:
              - type: custom:mushroom-template-card
                view_layout:
                  grid-area: icon
                show_name: false
                show_state: false
                show_label: false
                card_mod:
                  style: |
                    ha-card {
                      padding: 0 !important;
                      border: none;
                      margin: 1px 5px 0 -5px;
                    }

                    mushroom-shape-icon { 
                      --shape-color: transparent !important;
                    }
                icon: mdi:palm-tree
              - type: custom:mushroom-title-card
                title: Outside
                card_mod:
                  style: |
                    ha-card { 
                      --title-padding: 0 !important;
                      margin-top: 6px;
                      margin-right: 0;
                      margin-left: 0;
                    }
              - type: custom:button-card
                view_layout:
                  grid-area: action
                template: button__close_popup
          - type: custom:mod-card
            style:
              hui-horizontal-stack-card$: |
                #root { 
                  flex-wrap: wrap;
                }
            card:
              type: horizontal-stack
              cards:
                - type: custom:button-card
                  template: chip_detail__temperature
                  entity: sensor.temperature_attic
                - type: custom:button-card
                  template: chip_detail__light
                  entity: light.all_lights_outside
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Foyer Entryway
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:mushroom-light-card
                    name: Entryway
                    entity: light.foyer_exterior_entryway
                    collapsible_controls: true
                    show_brightness_control: true
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Front Yard Lights
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:mushroom-light-card
                    name: Garage Exterior
                    entity: light.garage_exterior
                    collapsible_controls: true
                    show_brightness_control: true
                  - type: custom:mushroom-light-card
                    name: Ground Lights
                    entity: light.front_yard_accent_lights
                    collapsible_controls: true
                    show_brightness_control: true
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Backyard Lights
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:mushroom-light-card
                    name: String Lights
                    entity: light.backyard_string_lights
                    collapsible_controls: true
        view_layout:
          grid-area: modalOut
      - type: custom:mod-card
        view_layout:
          grid-area: tileMisc
        style:
          hui-vertical-stack-card$: |
            #root { 
              justify-content: space-between;
            }
          .: |
            ha-card { 
              --layout-height: 100%;
              --vertical-stack-card-gap: 0;
              justify-content: space-between;
              height: 100%;
            }
        card:
          type: vertical-stack
          cards:
            - type: custom:button-card
              template: room_tile__slim
              name: Other
              entity: light.all_lights_other
              triggers_update:
                - binary_sensor.all_leak_sensors_bar
                - binary_sensor.all_leak_sensors_bathroom_main
                - binary_sensor.all_leak_sensors_bathroom_guest
                - binary_sensor.all_leak_sensors_bathroom_half
              tap_action:
                action: navigate
                navigation_path: '#details-other'
              variables:
                path: '#details-other'
                icon_on: mdi:lightbulb-multiple
                icon_off: mdi:lightbulb-multiple-outline
                data_lightOn: light.all_lights_other
                badge_alert: |
                  [[[ 
                    let leakEntities = [
                      states['binary_sensor.leak_sink_bathroom_guest'],
                      states['binary_sensor.leak_toilet_bathroom_guest'],
                      states['binary_sensor.leak_sink_bathroom_half'],
                      states['binary_sensor.leak_toilet_bathroom_half'],
                      states['binary_sensor.leak_wine_cooler']
                    ];

                    for( var i = 0; i < leakEntities.length; i++ )
                    { 
                      if( leakEntities[i] !== undefined && leakEntities[i].state === 'on' )
                      { 
                       return '<ha-icon icon="mdi:water-alert"></ha-icon>';

                      } // endif
                    } // endif

                    return '';
                  ]]]
            - type: custom:button-card
              template: room_tile__slim
              name: Residents
              tap_action:
                action: navigate
                navigation_path: /lovelace/page-residents
              variables:
                icon_on: mdi:account
                icon_off: mdi:account-outline
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#details-other'
            styles: |-
              #root {
                border: var( --popup--border-width ) solid var( --popup--border-color ) !important;
                background-color: var( --popup--background-color ) !important;
              }

              .bubble-header-container { height: 0 !important;}

              .bubble-header, 
              .bubble-close-button { display: none !important;}

              .bubble-pop-up-container { 
                  padding-top: 0 !important;
                  margin-top: 0 !important;
              }
            margin: 7px
            width_desktop: 540px
            width_mobile: 100%
            bg_opacity: '90'
            bg_blur: '6'
            bg_color: var( --modal--background-color )
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-auto-rows: min-content
              grid-template-columns: min-content 1fr min-content
              grid-template-areas: '"icon title action"'
            cards:
              - type: custom:mushroom-template-card
                view_layout:
                  grid-area: icon
                show_name: false
                show_state: false
                show_label: false
                card_mod:
                  style: |
                    ha-card {
                      padding: 0 !important;
                      border: none;
                      margin: 1px 5px 0 -5px;
                    }

                    mushroom-shape-icon { 
                      --shape-color: transparent !important;
                    }
                icon: mdi:lightbulb-multiple
              - type: custom:mushroom-title-card
                title: Other
                card_mod:
                  style: |
                    ha-card { 
                      --title-padding: 0 !important;
                      margin-top: 6px;
                      margin-right: 0;
                      margin-left: 0;
                    }
              - type: custom:button-card
                view_layout:
                  grid-area: action
                template: button__close_popup
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Bar
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:mushroom-light-card
                    name: Fan Light
                    entity: light.bar_ceiling_light
                    collapsible_controls: true
                    show_brightness_control: true
                  - type: custom:mushroom-fan-card
                    name: Ceiling Fan
                    entity: fan.bar_ceiling_fan
                    collapsible_controls: true
                    show_percentage_control: true
                  - type: custom:mini-graph-card
                    name: Wine Fridge (Top)
                    show:
                      icon: false
                    animate: true
                    line_color: var(--primary-color)
                    decimals: 0
                    tap_action:
                      action: none
                    entities:
                      - sensor.temperature_wine_cooler_top
                  - type: custom:mini-graph-card
                    name: Wine Fridge (Bottom)
                    show:
                      icon: false
                    animate: true
                    line_color: var(--primary-color)
                    decimals: 0
                    tap_action:
                      action: none
                    entities:
                      - sensor.temperature_wine_cooler_bottom
                  - type: custom:button-card
                    template: entity_card__leak
                    name: Wine Cooler
                    entity: binary_sensor.leak_wine_cooler
                    variables:
                      data_entity: sensor.leak_battery_wine_cooler
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Hallways
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:mushroom-light-card
                    name: Guest Hallway
                    entity: light.guest_hallway_light
                    collapsible_controls: true
                    show_brightness_control: true
                  - type: custom:mushroom-light-card
                    name: Laundry Hallway
                    entity: light.laundry_hallway_light
                    collapsible_controls: true
                    show_brightness_control: true
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Main Bathroom
              - type: conditional
                conditions:
                  - condition: or
                    conditions:
                      - condition: state
                        entity: media_player.echo_pop_main_bathroom
                        state:
                          - playing
                          - paused
                card:
                  type: custom:mini-media-player
                  entity: media_player.echo_pop_main_bathroom
                  name: Amazon Echo Dot
                  artwork: cover
                  hide:
                    icon: true
                    source: true
                    volume: true
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:mushroom-light-card
                    name: Ceiling
                    entity: light.switch_1_bathroom_main_light
                    collapsible_controls: true
                  - type: custom:mushroom-light-card
                    name: Vanity
                    entity: light.switch_2_bathroom_main_light
                    collapsible_controls: true
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:button-card
                    template: entity_card__leak
                    name: Left Sink
                    entity: binary_sensor.leak_sink_bathroom_main_hers
                    variables:
                      data_entity: sensor.leak_battery_sink_bathroom_main_hers
                  - type: custom:button-card
                    template: entity_card__leak
                    name: Right Sink
                    entity: binary_sensor.leak_sink_bathroom_main_his
                    variables:
                      data_entity: sensor.leak_battery_sink_bathroom_main_his
                  - type: custom:button-card
                    template: entity_card__leak
                    name: Toilet
                    entity: binary_sensor.leak_toilet_bathroom_main
                    variables:
                      data_entity: sensor.leak_battery_toilet_bathroom_main
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Guest Bathroom
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: chip_detail__leak
                    entity: binary_sensor.all_leak_sensors_bathroom_guest
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:button-card
                    template: entity_card__leak
                    name: Sink
                    entity: binary_sensor.leak_sink_bathroom_guest
                    variables:
                      data_entity: sensor.leak_battery_sink_bathroom_guest
                  - type: custom:button-card
                    template: entity_card__leak
                    name: Toilet
                    entity: binary_sensor.leak_toilet_bathroom_guest
                    variables:
                      data_entity: sensor.leak_battery_sink_bathroom_guest
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ''
                subtitle: Half Bathroom
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: chip_detail__leak
                    entity: binary_sensor.all_leak_sensors_bathroom_half
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:button-card
                    template: entity_card__leak
                    name: Sink
                    entity: binary_sensor.leak_sink_bathroom_half
                    variables:
                      data_entity: sensor.leak_battery_sink_bathroom_half
                  - type: custom:button-card
                    template: entity_card__leak
                    name: Toilet
                    entity: binary_sensor.leak_toilet_bathroom_half
                    variables:
                      data_entity: sensor.leak_battery_sink_bathroom_half
        view_layout:
          grid-area: modalMisc
      - type: custom:button-card
        view_layout:
          grid-area: overflow1
        template: button__icon_name
        entity: light.all_lights
        icon: |
          [[[ 
            const lightOnCount = variables.state_on_count;

            switch( lightOnCount )
            { 
              case 0:
                return 'mdi:lightbulb-outline';
                break;
              case 1:
                return 'mdi:lightbulb';
              case 2:
                return 'mdi:lightbulb-multiple';
                break;
              default:
                return 'mdi:lightbulb-group';
                break;
            } // endif

            return '';
          ]]]
        name: |
          [[[ 
            const lightOnCount = variables.state_on_count;
            const lightEntities = states['light.all_lights'].attributes.entity_id;

            switch( lightOnCount )
            { 
              case lightEntities.length:
                return 'All Lights are on';
                break;
              case 0:
                return 'All Lights off';
                break;
              case 1:
                return lightOnCount + ' Light On';
              default:
                return lightOnCount + ' Lights On';
                break;
            } // endif

            return '';
          ]]]
        triggers_update:
          - light.all_lights
        tap_action:
          action: navigate
          navigation_path: /lovelace/page-lights
        double_tap_action:
          action: none
        hold_action:
          confirmation:
            text: |
              [[[
                let state = ( states['light.all_lights'].state === 'on' ) ? 'off' : 'on';
                return 'Are you sure you want to turn all lights ' + state + '?';
              ]]]
          action: call-service
          service: |
            [[[ 
              return (  states['light.all_lights'].state === 'on' )
                ? 'light.turn_off' 
                : 'light.turn_on'
            ]]]
          data:
            entity_id: light.all_lights
        state:
          - value: 'on'
            styles:
              icon:
                - '--state-light-on-color': rgb( var( --yellow-color-rgb ) )
                - '--state-light-off-color': rgb( var( --grey-color-rgb ) )
      - type: custom:button-card
        view_layout:
          grid-area: overflow2
        template: button__icon_name
        name: Devices
        icon: mdi:devices
        tap_action:
          action: navigate
          navigation_path: /lovelace/page-devices
      - type: custom:button-card
        view_layout:
          grid-area: overflow3
        template: button__icon_name
        name: Systems
        icon: mdi:information-outline
        tap_action:
          action: navigate
          navigation_path: '#details-system'
      - type: custom:button-card
        view_layout:
          grid-area: overflow4
        template: button__icon_name
        name: Configure
        icon: mdi:cog-outline
        tap_action:
          action: navigate
          navigation_path: '#details-configure'
        hold_action:
          action: navigate
          navigation_path: /lovelace/page-helpers
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#details-sidebar'
            styles: |-
              #root {
                border: var( --popup--border-width ) solid var( --popup--border-color ) !important;
                background-color: var( --popup--background-color ) !important;
              }

              .bubble-header-container { height: 0 !important;}

              .bubble-header, 
              .bubble-close-button { display: none !important;}

              .bubble-pop-up-container { 
                  padding-top: 0 !important;
                  margin-top: 0 !important;
              }
            margin: 7px
            width_desktop: 540px
            width_mobile: 100%
            bg_opacity: '90'
            bg_blur: '6'
            bg_color: var( --modal--background-color )
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-auto-rows: min-content
              grid-template-columns: min-content 1fr min-content
              grid-template-areas: '"icon title action"'
            cards:
              - type: custom:mushroom-template-card
                view_layout:
                  grid-area: icon
                show_name: false
                show_state: false
                show_label: false
                card_mod:
                  style: |
                    ha-card {
                      padding: 0 !important;
                      border: none;
                      margin: 1px 5px 0 -5px;
                    }

                    mushroom-shape-icon { 
                      --shape-color: transparent !important;
                    }
                icon: mdi:list-box
              - type: custom:mushroom-title-card
                title: SIdebar Extras
                card_mod:
                  style: |
                    ha-card { 
                      --title-padding: 0 !important;
                      margin-top: 6px;
                      margin-right: 0;
                      margin-left: 0;
                    }
              - type: custom:button-card
                view_layout:
                  grid-area: action
                template: button__close_popup
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - entity: input_boolean.sidebar_display_weather_forecast
                    name: Weather Forecast
                    secondary_info: none
                  - entity: input_boolean.sidebar_display_holidays
                    name: Upcoming Holidays
                    secondary_info: none
                  - entity: input_boolean.sidebar_display_celebrations
                    name: Upcoming Celebrations
                    secondary_info: none
                  - entity: input_boolean.sidebar_display_neighborhood
                    name: Display Neighborhood Events
                    secondary_info: none
                state_color: false
                show_header_toggle: false
                title: Content Visibility
        view_layout:
          grid-area: modalSbar
      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#details-system'
            styles: |-
              #root {
                border: var( --popup--border-width ) solid var( --popup--border-color ) !important;
                background-color: var( --popup--background-color ) !important;
              }

              .bubble-header-container { height: 0 !important;}

              .bubble-header, 
              .bubble-close-button { display: none !important;}

              .bubble-pop-up-container { 
                  padding-top: 0 !important;
                  margin-top: 0 !important;
              }
            margin: 7px
            width_desktop: 90%
            width_mobile: 100%
            bg_opacity: '90'
            bg_blur: '6'
            bg_color: var( --modal--background-color )
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-auto-rows: min-content
              grid-template-columns: min-content 1fr min-content
              grid-template-areas: '"icon title action"'
            cards:
              - type: custom:mushroom-template-card
                view_layout:
                  grid-area: icon
                show_name: false
                show_state: false
                show_label: false
                card_mod:
                  style: |
                    ha-card {
                      padding: 0 !important;
                      border: none;
                      margin: 1px 5px 0 -5px;
                    }

                    mushroom-shape-icon { 
                      --shape-color: transparent !important;
                    }
                icon: mdi:information
              - type: custom:mushroom-title-card
                title: Systems
                card_mod:
                  style: |
                    ha-card { 
                      --title-padding: 0 !important;
                      margin-top: 6px;
                      margin-right: 0;
                      margin-left: 0;
                    }
              - type: custom:button-card
                view_layout:
                  grid-area: action
                template: button__close_popup
          - type: custom:layout-card
            layout_type: custom:masonry-layout
            cards:
              - type: vertical-stack
                cards:
                  - type: custom:mini-graph-card
                    name: Download Speed
                    icon: mdi:download
                    show:
                      legend: false
                      points: false
                    animate: true
                    decimals: 0
                    color_thresholds:
                      - value: 0
                        color: '#F54436'
                      - value: 250
                        color: '#FF9800'
                      - value: 500
                        color: '#FF9101'
                      - value: 750
                        color: '#01C852'
                    hours_to_show: 12
                    points_per_hour: 2
                    line_width: 2
                    tap_action:
                      action: none
                    entities:
                      - entity: sensor.speedtest_download
                  - type: custom:mini-graph-card
                    name: Upload Speed
                    icon: mdi:upload
                    show:
                      legend: false
                      points: false
                    animate: true
                    decimals: 0
                    color_thresholds:
                      - value: 0
                        color: '#F54436'
                      - value: 250
                        color: '#FF9800'
                      - value: 500
                        color: '#FF9101'
                      - value: 750
                        color: '#01C852'
                    hours_to_show: 12
                    points_per_hour: 2
                    line_width: 2
                    tap_action:
                      action: none
                    entities:
                      - entity: sensor.speedtest_upload
                  - type: custom:mini-graph-card
                    name: Ping
                    icon: mdi:lan-pending
                    show:
                      legend: false
                      points: false
                    animate: true
                    decimals: 0
                    color_thresholds:
                      - value: 0
                        color: '#01C852'
                      - value: 15
                        color: '#FF9101'
                      - value: 30
                        color: '#FF9800'
                      - value: 45
                        color: '#F54436'
                    hours_to_show: 12
                    points_per_hour: 2
                    line_width: 2
                    tap_action:
                      action: none
                    entities:
                      - entity: sensor.speedtest_ping
              - type: vertical-stack
                cards:
                  - type: entities
                    title: Home Assistant
                    show_header_toggle: false
                    entities:
                      - entity: sensor.processor_temperature
                        name: CPU Temperature
                      - entity: sensor.processor_use_percent
                        name: CPU Usage
                      - type: divider
                      - entity: sensor.mariadb_database_size
                        name: Database Size
                      - entity: sensor.home_assistant_log_size
                        name: Home Assistant Log Size
                  - type: entities
                    title: Last Restart
                    entities:
                      - entity: sensor.uptime
                        name: Home Assistant
                      - entity: sensor.casamaxson_udmp_uptime
                        name: UniFi Dream Machine Pro
                      - entity: sensor.casamaxson_unvr_uptime
                        name: UniFi Network Video Recorder
              - type: vertical-stack
                cards:
                  - type: entities
                    title: Amazon Fire HD Tablet
                    show_header_toggle: false
                    entities:
                      - entity: switch.fire_tablet_screen
                        name: Display
                        icon: hass:tablet
                      - entity: number.fire_tablet_screen_brightness
                        name: Brightness
                      - entity: light.tablet_plug
                        name: Charger
                      - type: divider
                      - entity: sensor.fire_tablet_battery
                        name: Battery Level
                      - entity: sensor.fire_tablet_total_memory
                        name: Total Memory
                        icon: hass:memory
                      - entity: sensor.fire_tablet_used_memory
                        name: Used Memory
                        icon: mdi:database
                      - type: divider
                      - entity: input_button.home_assistant_restart
                        icon: mdi:restart
                        name: Restart System
                        tap_action:
                          action: call-service
                          service: homeassistant.restart
            layout: {}
        view_layout:
          grid-area: modalSys
      - type: vertical-stack
        view_layout:
          grid-area: modalConf
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#details-configure'
            styles: |-
              #root {
                border: var( --popup--border-width ) solid var( --popup--border-color ) !important;
                background-color: var( --popup--background-color ) !important;
              }

              .bubble-header-container { height: 0 !important;}

              .bubble-header, 
              .bubble-close-button { display: none !important;}

              .bubble-pop-up-container { 
                  padding-top: 0 !important;
                  margin-top: 0 !important;
              }
            margin: 7px
            width_desktop: 90%
            width_mobile: 100%
            bg_opacity: '90'
            bg_blur: '6'
            bg_color: var( --modal--background-color )
          - type: custom:layout-card
            layout_type: custom:grid-layout
            layout:
              grid-auto-rows: min-content
              grid-template-columns: min-content 1fr min-content
              grid-template-areas: '"icon title action"'
            cards:
              - type: custom:mushroom-template-card
                view_layout:
                  grid-area: icon
                show_name: false
                show_state: false
                show_label: false
                card_mod:
                  style: |
                    ha-card {
                      padding: 0 !important;
                      border: none;
                      margin: 1px 5px 0 -5px;
                    }

                    mushroom-shape-icon { 
                      --shape-color: transparent !important;
                    }
                icon: mdi:cog
              - type: custom:mushroom-title-card
                title: Configure
                card_mod:
                  style: |
                    ha-card { 
                      --title-padding: 0 !important;
                      margin-top: 6px;
                      margin-right: 0;
                      margin-left: 0;
                    }
              - type: custom:button-card
                view_layout:
                  grid-area: action
                template: button__close_popup
          - type: custom:layout-card
            layout_type: custom:masonry-layout
            cards:
              - type: vertical-stack
                cards:
                  - type: entities
                    entities:
                      - entity: sensor.sunset_automations_status
                        name: Sunset Automations
                      - type: conditional
                        conditions:
                          - entity: schedule.waste_take_out_solid
                            state_not: unknown
                          - entity: sensor.days_until_waste_day_solid
                            state_not: unavailable
                          - entity: sensor.days_until_waste_day_solid
                            state_not: unknown
                        row:
                          entity: sensor.days_until_waste_day_solid
                          name: Trash Pickup
                      - type: conditional
                        conditions:
                          - entity: schedule.waste_take_out_bulk
                            state_not: unknown
                          - entity: sensor.days_until_waste_day_bulk
                            state_not: unavailable
                          - entity: sensor.days_until_waste_day_bulk
                            state_not: unknown
                        row:
                          entity: sensor.days_until_waste_day_bulk
                          name: Bulk Pickup
                      - type: conditional
                        conditions:
                          - entity: schedule.waste_bring_in_recycle
                            state_not: unknown
                          - entity: sensor.days_until_recycle_drop_off
                            state_not: unavailable
                          - entity: sensor.days_until_recycle_drop_off
                            state_not: unknown
                        row:
                          entity: sensor.days_until_recycle_drop_off
                          name: Recycling Drop Off
                      - type: conditional
                        conditions:
                          - entity: schedule.house_cleaning
                            state_not: unknown
                          - entity: sensor.days_until_cleaning_day
                            state_not: unavailable
                          - entity: sensor.days_until_cleaning_day
                            state_not: unknown
                        row:
                          entity: sensor.days_until_cleaning_day
                          name: House Cleaning
                    title: Schedule
              - type: vertical-stack
                cards:
                  - type: entities
                    show_header_toggle: false
                    title: Door Triggered Automations
                    card_mod:
                      style: >
                        #states > div:nth-child(5) { padding-left: 45px
                        !important;}          
                    entities:
                      - entity: input_boolean.automation_foyer_door_open_close
                        name: Main Entry (Primary and Secondary)
                      - entity: input_boolean.automation_garage_door_open_close
                        name: Garage (Interior)
                      - entity: input_boolean.automation_living_room_door_open_close
                        name: Sliding Glass Door
                      - entity: input_boolean.automation_bedroom_1_door_open_close
                        name: Main Bedroom
                      - entity: input_boolean.closet_automatic_turn_off
                        name: Auto-Shutoff Closet Lights
                      - entity: input_boolean.automation_bedroom_2_door_open_close
                        name: Guest Bedroom
                      - entity: input_boolean.automation_bedroom_3_door_open_close
                        name: Jess' Office
                      - entity: input_boolean.automation_bedroom_4_door_open_close
                        name: Tom's Office
                      - entity: input_boolean.automation_laundry_room_door_open_close
                        name: Laundry Room
              - type: vertical-stack
                cards:
                  - type: entities
                    title: Send Notifications To
                    show_header_toggle: false
                    card_mod:
                      style: >
                        #states > div:nth-child(2), 

                        #states > div:nth-child(3) { padding-left: 45px
                        !important;}
                    entities:
                      - entity: input_boolean.app_notify
                        name: Mobile Devices
                      - type: conditional
                        conditions:
                          - entity: input_boolean.app_notify
                            state: 'on'
                        row:
                          entity: input_boolean.app_notify_tom
                          name: Tom's iPhone
                      - type: conditional
                        conditions:
                          - entity: input_boolean.app_notify
                            state: 'on'
                        row:
                          entity: input_boolean.app_notify_jess
                          name: Jess' iPhone
                  - type: entities
                    title: Send Announcements To
                    show_header_toggle: false
                    card_mod:
                      style: >
                        #states > div:nth-child(2), 

                        #states > div:nth-child(3), 

                        #states > div:nth-child(4), 

                        #states > div:nth-child(5),

                        #states > div:nth-child(6),

                        #states > div:nth-child(7),

                        #states > div:nth-child(8) { padding-left: 45px
                        !important;}
                    entities:
                      - entity: input_boolean.household_notify
                        name: Amazon Alexa Devices
                      - type: conditional
                        conditions:
                          - entity: input_boolean.household_notify
                            state: 'on'
                        row:
                          entity: input_boolean.household_notify_kitchen
                          name: Kitchen Echo
                      - type: conditional
                        conditions:
                          - entity: input_boolean.household_notify
                            state: 'on'
                        row:
                          entity: input_boolean.household_notify_dining_room
                          name: Dining Room Echo Dot
                      - type: conditional
                        conditions:
                          - entity: input_boolean.household_notify
                            state: 'on'
                        row:
                          entity: input_boolean.household_notify_bedroom_1
                          name: Main Bedroom Echo Dot
                      - type: conditional
                        conditions:
                          - entity: input_boolean.household_notify
                            state: 'on'
                        row:
                          entity: input_boolean.household_notify_bathroom_1
                          name: Main Bathroom Echo Pop
                      - type: conditional
                        conditions:
                          - entity: input_boolean.household_notify
                            state: 'on'
                        row:
                          entity: input_boolean.household_notify_bedroom_2
                          name: Guest Bedroom Echo Dot
                      - type: conditional
                        conditions:
                          - entity: input_boolean.household_notify
                            state: 'on'
                        row:
                          entity: input_boolean.household_notify_bedroom_3
                          name: Her Office Echo Dot
                      - type: conditional
                        conditions:
                          - entity: input_boolean.household_notify
                            state: 'on'
                        row:
                          entity: input_boolean.household_notify_bedroom_4
                          name: His Office Echo Dot
    theme: casamaxson
  - title: Controls
    path: page-controls
    theme: casamaxson
    type: custom:grid-layout
    layout:
      grid-gap: 0
      grid-auto-rows: auto
      grid-template-columns: 5% 1fr 5%
      grid-template-areas: |
        ".  row1  ."
        ".  row2  ."
      mediaquery:
        '(max-width: 992px)':
          grid-auto-rows: auto
          grid-template-columns: 2.5% 95% 2.5%
    cards:
      - type: picture-elements
        view_layout:
          grid-area: row1
        card_mod:
          style: |
            /* Mobile */
            @media screen and (max-width: 992px) { 
              ha-card { display: none;}
            }
            ha-card {
              {% set the_entity = 'cover.garage_door' %}
              --maxson-floorplan--color-cover-garage: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-cover-unavail ) {% elif( states( the_entity ) in ['open', 'opening'] ) %} var( --map-icon--sensor-lock-on ) {% else %} var( --map-icon--sensor-cover-off ) {% endif %};

              {% set the_entity = 'lock.front_door' %}
              --maxson-floorplan--color-lock-front-door: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-lock-unavail ) {% elif( states( the_entity ) in ['unlocked', 'unlocking'] ) %} var( --map-icon--sensor-lock-on ) {% else %} var( --map-icon--sensor-lock-off ) {% endif %};

              {% set the_entity = 'light.bedroom_1_bedside_lamps' %}
              --maxson-floorplan--color-light-bedroom-1: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.bedroom_2_bedside_lamps' %}
              --maxson-floorplan--color-light-bedroom-2: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.bedroom_4_lights' %}
              --maxson-floorplan--color-light-bedroom-4: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.bedroom_4_tie_fighter_lamp' %}
              --maxson-floorplan--color-light-bedroom-4-tie-fighter-lamp: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.kitchen_ceiling_lights' %}
              --maxson-floorplan--color-light-kitchen-ceiling: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.kitchen_cabinet_upper_coffee_bar' %}
              {% set the_color = states.light.kitchen_cabinet_upper_coffee_bar.attributes.rgb_color %}
              --maxson-floorplan--color-light-kitchen-upper-coffee: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} rgb( {{ the_color[0] }}, {{ the_color[1] }}, {{ the_color[2] }} ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.kitchen_cabinet_upper_range' %}
              {% set the_color = states.light.kitchen_cabinet_upper_range.attributes.rgb_color %}
              --maxson-floorplan--color-light-kitchen-upper-range: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} rgb( {{ the_color[0] }}, {{ the_color[1] }}, {{ the_color[2] }} ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.bar_ceiling_light' %}
              --maxson-floorplan--color-light-bar-ceiling: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'fan.bar_ceiling_fan' %}
              --maxson-floorplan--color-fan-bar-ceiling: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-fan-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-fan-on ) {% else %} var( --map-icon--sensor-fan-off ) {% endif %};

              {% set the_entity = 'light.living_room_corner_lamp' %}
              --maxson-floorplan--color-light-living-room-corner: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.dining_room_chandelier' %}
              --maxson-floorplan--color-light-dining-room-chandelier: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.guest_hallway_light' %}
              --maxson-floorplan--color-light-guest-hallway-light: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.laundry_ceiling_light' %}
              --maxson-floorplan--color-light-laundry-ceiling-light: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.laundry_hallway_light' %}
              --maxson-floorplan--color-light-laundry-hallway-light: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.foyer_hallway_ceiling' %}
              --maxson-floorplan--color-light-foyer-hallway-ceiling: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.foyer_ceiling_ledge' %}
              --maxson-floorplan--color-light-foyer-ceiling-ledge: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.foyer_under_table' %}
              --maxson-floorplan--color-light-foyer-under-table: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.foyer_entryway_ceiling' %}
              --maxson-floorplan--color-light-foyer-entryway-ceiling: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.foyer_exterior_entryway' %}
              --maxson-floorplan--color-light-foyer-exterior-entryway: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.garage_exterior' %}
              --maxson-floorplan--color-light-garage-exterior: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.garage_ceiling' %}
              --maxson-floorplan--color-light-garage-ceiling: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.garage_door_light' %}
              --maxson-floorplan--color-light-garage-door-light: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'fan.custom_garage_fan' %}
              --maxson-floorplan--color-fan-garage: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-fan-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-fan-on ) {% else %} var( --map-icon--sensor-fan-off ) {% endif %};

              {% set the_entity = 'light.closet_hallway_ceiling_light' %}
              --maxson-floorplan--color-light-closet-hallway-light: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.closet_hallway_light_hers' %}
              --maxson-floorplan--color-light-closet-hallway-light-hers: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.closet_hallway_light_his' %}
              --maxson-floorplan--color-light-closet-hallway-light-his: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.switch_1_bathroom_main_light' %}
              --maxson-floorplan--color-light-bathroom-main-ceiling: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.switch_2_bathroom_main_light' %}
              --maxson-floorplan--color-light-bathroom-main-vanity: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.front_yard_accent_lights' %}      
              --maxson-floorplan--color-light-front-yard-accent-lights: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.backyard_string_lights' %}
              --maxson-floorplan--color-light-backyard-string-lights: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.tv_ambient_lights' %}
              --maxson-floorplan--color-light-tv-ambient-lights: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'media_player.sony_bravia_tv' %}
              --maxson-floorplan--color-media-player-sony-bravia-tv: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-media-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-media-on ) {% else %} var( --map-icon--sensor-media-off ) {% endif %};

              {% set the_entity = 'cover.large_window_curtains_bedroom_1' %}
              --maxson-floorplan--color-curtains-bedroom-1: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-cover-unavail ) {% elif( states( the_entity ) in ['open', 'opening'] ) %} var( --map-icon--sensor-cover-on ) {% else %} var( --map-icon--sensor-cover-off ) {% endif %};

              {% set the_entity = 'cover.blinds_bedroom_4' %}
              --maxson-floorplan--color-blinds-bedroom-4: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-cover-unavail ) {% elif( states( the_entity ) in ['open', 'opening'] ) %} var( --map-icon--sensor-cover-on ) {% else %} var( --map-icon--sensor-cover-off ) {% endif %};
            }
        elements:
          - type: state-icon
            entity: cover.garage_door
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 30%
              left: 91.5%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-cover-garage ) )
          - type: state-icon
            entity: lock.front_door
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 60%
              left: 72.75%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-lock-front-door ) )
          - type: state-icon
            entity: light.bedroom_1_bedside_lamps
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 15%
              left: 19%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-bedroom-1 ) )
          - type: state-icon
            entity: cover.large_window_curtains_bedroom_1
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 25%
              left: 12%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-curtains-bedroom-1 ) )
          - type: state-icon
            entity: light.bedroom_2_bedside_lamps
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 79%
              left: 84.5%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-bedroom-2 ) )
          - type: state-icon
            entity: light.bedroom_4_lights
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 79%
              left: 56%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-bedroom-4 ) )
          - type: state-icon
            entity: light.bedroom_4_tie_fighter_lamp
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 82%
              left: 62%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var(
                --maxson-floorplan--color-light-bedroom-4-tie-fighter-lamp ) )
          - type: state-icon
            entity: cover.blinds_bedroom_4
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 86.5%
              left: 59.5%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-blinds-bedroom-4 ) )
          - type: state-icon
            entity: light.kitchen_ceiling_lights
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 79%
              left: 39%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-kitchen-ceiling ) )
          - type: state-icon
            entity: light.cabinet_upper_lights
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 83%
              left: 47%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-kitchen-upper-coffee )
                )
          - type: state-icon
            entity: light.cabinet_upper_lights
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 66.25%
              left: 34%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-kitchen-upper-range )
                )
          - type: state-icon
            entity: light.bar_ceiling_light
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 79%
              left: 16.5%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-bar-ceiling ) )
          - type: state-icon
            entity: fan.bar_ceiling_fan
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 79%
              left: 20.5%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-fan-bar-ceiling ) )
          - type: state-icon
            entity: light.living_room_corner_lamp
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 42%
              left: 11%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-living-room-corner ) )
          - type: state-icon
            entity: light.dining_room_chandelier
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 48%
              left: 36.5%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-dining-room-chandelier
                ) )
          - type: state-icon
            entity: light.guest_hallway_light
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 72.5%
              left: 68%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-guest-hallway-light )
                )
          - type: state-icon
            entity: light.laundry_ceiling_light
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 44%
              left: 61%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-laundry-ceiling-light
                ) )
          - type: state-icon
            entity: light.laundry_hallway_light
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 40%
              left: 53.5%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-laundry-hallway-light
                ) )
          - type: state-icon
            entity: light.foyer_hallway_ceiling
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 58%
              left: 45%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-foyer-hallway-ceiling
                ) )
          - type: state-icon
            entity: light.foyer_under_table
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 60%
              left: 53%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-foyer-under-table ) )
          - type: state-icon
            entity: light.foyer_ceiling_ledge
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 56%
              left: 58%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-foyer-ceiling-ledge )
                )
          - type: state-icon
            entity: light.foyer_entryway_ceiling
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 60%
              left: 68%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-foyer-entryway-ceiling
                ) )
          - type: state-icon
            entity: light.foyer_exterior_entryway
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 60%
              left: 77.5%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var(
                --maxson-floorplan--color-light-foyer-exterior-entryway ) )
          - type: state-icon
            entity: light.garage_exterior
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 13%
              left: 95%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-garage-exterior ) )
          - type: state-icon
            entity: light.garage_exterior
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 49%
              left: 95%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-garage-exterior ) )
          - type: state-icon
            entity: light.garage_ceiling
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 30%
              left: 75%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-garage-ceiling ) )
          - type: state-icon
            entity: light.garage_door_light
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 30%
              left: 82%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-garage-door-light ) )
          - type: state-icon
            entity: fan.custom_garage_fan
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 18%
              left: 78.5%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-fan-garage ) )
          - type: state-icon
            entity: light.closet_hallway_ceiling_light
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 25%
              left: 29%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-closet-hallway-light )
                )
          - type: state-icon
            entity: light.closet_hallway_light_hers
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 15.5%
              left: 34%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var(
                --maxson-floorplan--color-light-closet-hallway-light-hers ) )
          - type: state-icon
            entity: light.closet_hallway_light_his
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 32.5%
              left: 34%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var(
                --maxson-floorplan--color-light-closet-hallway-light-his ) )
          - type: state-icon
            entity: light.switch_1_bathroom_main_light
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 20%
              left: 42%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-bathroom-main-ceiling
                ) )
          - type: state-icon
            entity: light.switch_2_bathroom_main_light
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 25%
              left: 47.75%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-bathroom-main-vanity )
                )
          - type: state-icon
            entity: light.backyard_string_lights
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 50%
              left: 5%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-backyard-string-lights
                ) )
          - type: state-icon
            entity: light.front_yard_accent_lights
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 79%
              left: 96.5%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var(
                --maxson-floorplan--color-light-front-yard-accent-lights ) )
          - type: state-icon
            entity: media_player.sony_bravia_tv
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 42%
              left: 17%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-media-player-sony-bravia-tv
                ) )
          - type: state-icon
            entity: light.tv_ambient_lights
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 42%
              left: 22.5%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-tv-ambient-lights ) )
        image: /local/images/floor-plan/casa-maxson-floor-plan-horizontal.png
      - type: picture-elements
        view_layout:
          grid-area: row2
        card_mod:
          style: |
            /* Desktop */
            @media screen and (min-width: 992px) { 
              ha-card { display: none;}
            }
            ha-card {
              {% set the_entity = 'cover.garage_door' %}
              --maxson-floorplan--color-cover-garage: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-cover-unavail ) {% elif( states( the_entity ) in ['open', 'opening'] ) %} var( --map-icon--sensor-lock-on ) {% else %} var( --map-icon--sensor-cover-off ) {% endif %};

              {% set the_entity = 'lock.front_door' %}
              --maxson-floorplan--color-lock-front-door: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-lock-unavail ) {% elif( states( the_entity ) in ['unlocked', 'unlocking'] ) %} var( --map-icon--sensor-lock-on ) {% else %} var( --map-icon--sensor-lock-off ) {% endif %};

              {% set the_entity = 'light.bedroom_1_bedside_lamps' %}
              --maxson-floorplan--color-light-bedroom-1: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.bedroom_2_bedside_lamps' %}
              --maxson-floorplan--color-light-bedroom-2: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.bedroom_4_lights' %}
              --maxson-floorplan--color-light-bedroom-4: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.bedroom_4_tie_fighter_lamp' %}
              --maxson-floorplan--color-light-bedroom-4-tie-fighter-lamp: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.kitchen_ceiling_lights' %}
              --maxson-floorplan--color-light-kitchen-ceiling: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.kitchen_cabinet_upper_coffee_bar' %}
              {% set the_color = states.light.kitchen_cabinet_upper_coffee_bar.attributes.rgb_color %}
              --maxson-floorplan--color-light-kitchen-upper-coffee: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} rgb( {{ the_color[0] }}, {{ the_color[1] }}, {{ the_color[2] }} ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.kitchen_cabinet_upper_range' %}
              {% set the_color = states.light.kitchen_cabinet_upper_range.attributes.rgb_color %}
              --maxson-floorplan--color-light-kitchen-upper-range: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} rgb( {{ the_color[0] }}, {{ the_color[1] }}, {{ the_color[2] }} ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.bar_ceiling_light' %}
              --maxson-floorplan--color-light-bar-ceiling: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'fan.bar_ceiling_fan' %}
              --maxson-floorplan--color-fan-bar-ceiling: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-fan-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-fan-on ) {% else %} var( --map-icon--sensor-fan-off ) {% endif %};

              {% set the_entity = 'light.living_room_corner_lamp' %}
              --maxson-floorplan--color-light-living-room-corner: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.dining_room_chandelier' %}
              --maxson-floorplan--color-light-dining-room-chandelier: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.guest_hallway_light' %}
              --maxson-floorplan--color-light-guest-hallway-light: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.laundry_ceiling_light' %}
              --maxson-floorplan--color-light-laundry-ceiling-light: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.laundry_hallway_light' %}
              --maxson-floorplan--color-light-laundry-hallway-light: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.foyer_hallway_ceiling' %}
              --maxson-floorplan--color-light-foyer-hallway-ceiling: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.foyer_ceiling_ledge' %}
              --maxson-floorplan--color-light-foyer-ceiling-ledge: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.foyer_under_table' %}
              --maxson-floorplan--color-light-foyer-under-table: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.foyer_entryway_ceiling' %}
              --maxson-floorplan--color-light-foyer-entryway-ceiling: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.foyer_exterior_entryway' %}
              --maxson-floorplan--color-light-foyer-exterior-entryway: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.garage_exterior' %}
              --maxson-floorplan--color-light-garage-exterior: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.garage_ceiling' %}
              --maxson-floorplan--color-light-garage-ceiling: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.garage_door_light' %}
              --maxson-floorplan--color-light-garage-door-light: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'fan.custom_garage_fan' %}
              --maxson-floorplan--color-fan-garage: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-fan-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-fan-on ) {% else %} var( --map-icon--sensor-fan-off ) {% endif %};

              {% set the_entity = 'light.closet_hallway_ceiling_light' %}
              --maxson-floorplan--color-light-closet-hallway-light: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.closet_hallway_light_hers' %}
              --maxson-floorplan--color-light-closet-hallway-light-hers: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.closet_hallway_light_his' %}
              --maxson-floorplan--color-light-closet-hallway-light-his: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.switch_1_bathroom_main_light' %}
              --maxson-floorplan--color-light-bathroom-main-ceiling: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.switch_2_bathroom_main_light' %}
              --maxson-floorplan--color-light-bathroom-main-vanity: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.front_yard_accent_lights' %}      
              --maxson-floorplan--color-light-front-yard-accent-lights: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.backyard_string_lights' %}
              --maxson-floorplan--color-light-backyard-string-lights: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'light.tv_ambient_lights' %}
              --maxson-floorplan--color-light-tv-ambient-lights: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-light-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-light-on ) {% else %} var( --map-icon--sensor-light-off ) {% endif %};

              {% set the_entity = 'media_player.sony_bravia_tv' %}
              --maxson-floorplan--color-media-player-sony-bravia-tv: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-media-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-media-on ) {% else %} var( --map-icon--sensor-media-off ) {% endif %};

              {% set the_entity = 'cover.large_window_curtains_bedroom_1' %}
              --maxson-floorplan--color-curtains-bedroom-1: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-cover-unavail ) {% elif( states( the_entity ) in ['open', 'opening'] ) %} var( --map-icon--sensor-cover-on ) {% else %} var( --map-icon--sensor-cover-off ) {% endif %};

              {% set the_entity = 'cover.blinds_bedroom_4' %}
              --maxson-floorplan--color-blinds-bedroom-4: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-cover-unavail ) {% elif( states( the_entity ) in ['open', 'opening'] ) %} var( --map-icon--sensor-cover-on ) {% else %} var( --map-icon--sensor-cover-off ) {% endif %};
            }
        elements:
          - type: state-icon
            entity: cover.garage_door
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 92%
              left: 69.5%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-cover-garage ) )
          - type: state-icon
            entity: lock.front_door
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 72.5%
              left: 39.75%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-lock-front-door ) )
          - type: state-icon
            entity: light.bedroom_1_bedside_lamps
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 18%
              left: 84%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-bedroom-1 ) )
          - type: state-icon
            entity: cover.large_window_curtains_bedroom_1
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 11.5%
              left: 76%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-curtains-bedroom-1 ) )
          - type: state-icon
            entity: light.bedroom_2_bedside_lamps
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 83%
              left: 20.5%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-bedroom-2 ) )
          - type: state-icon
            entity: light.bedroom_4_lights
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 55%
              left: 21%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-bedroom-4 ) )
          - type: state-icon
            entity: cover.blinds_bedroom_4
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 59.5%
              left: 14%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-blinds-bedroom-4 ) )
          - type: state-icon
            entity: light.kitchen_ceiling_lights
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 39%
              left: 21%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-kitchen-ceiling ) )
          - type: state-icon
            entity: light.cabinet_upper_lights
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 46%
              left: 16.5%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-kitchen-upper-coffee )
                )
          - type: state-icon
            entity: light.cabinet_upper_lights
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 32%
              left: 32%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-kitchen-upper-range )
                )
          - type: state-icon
            entity: light.bar_ceiling_light
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 17%
              left: 29%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-bar-ceiling ) )
          - type: state-icon
            entity: fan.bar_ceiling_fan
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 17%
              left: 19%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-fan-bar-ceiling ) )
          - type: state-icon
            entity: light.living_room_corner_lamp
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 11.5%
              left: 59%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-living-room-corner ) )
          - type: state-icon
            entity: light.dining_room_chandelier
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 36%
              left: 53%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-dining-room-chandelier
                ) )
          - type: state-icon
            entity: light.guest_hallway_light
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 69%
              left: 27.5%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-guest-hallway-light )
                )
          - type: state-icon
            entity: light.laundry_ceiling_light
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 60.5%
              left: 56.26%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-laundry-ceiling-light
                ) )
          - type: state-icon
            entity: light.laundry_hallway_light
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 53.5%
              left: 51%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-laundry-hallway-light
                ) )
          - type: state-icon
            entity: light.foyer_hallway_ceiling
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 46%
              left: 42%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-foyer-hallway-ceiling
                ) )
          - type: state-icon
            entity: light.foyer_ceiling_ledge
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 60%
              left: 45%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-foyer-ceiling-ledge )
                )
          - type: state-icon
            entity: light.foyer_under_table
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 53%
              left: 39%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-foyer-under-table ) )
          - type: state-icon
            entity: light.foyer_entryway_ceiling
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 67%
              left: 39.75%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-foyer-entryway-ceiling
                ) )
          - type: state-icon
            entity: light.foyer_exterior_entryway
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 78%
              left: 39.75%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var(
                --maxson-floorplan--color-light-foyer-exterior-entryway ) )
          - type: state-icon
            entity: light.garage_exterior
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 95%
              left: 87.5%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-garage-exterior ) )
          - type: state-icon
            entity: light.garage_exterior
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 95%
              left: 52%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-garage-exterior ) )
          - type: state-icon
            entity: light.garage_ceiling
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 78%
              left: 63%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-garage-ceiling ) )
          - type: state-icon
            entity: light.garage_door_light
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 78%
              left: 73%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-garage-door-light ) )
          - type: state-icon
            entity: fan.custom_garage_fan
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 72%
              left: 68%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-fan-garage ) )
          - type: state-icon
            entity: light.closet_hallway_ceiling_light
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 31%
              left: 75%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-closet-hallway-light )
                )
          - type: state-icon
            entity: light.closet_hallway_light_hers
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 34%
              left: 86%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var(
                --maxson-floorplan--color-light-closet-hallway-light-hers ) )
          - type: state-icon
            entity: light.closet_hallway_light_his
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 34%
              left: 66%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var(
                --maxson-floorplan--color-light-closet-hallway-light-his ) )
          - type: state-icon
            entity: light.switch_1_bathroom_main_light
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 42%
              left: 79%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-bathroom-main-ceiling
                ) )
          - type: state-icon
            entity: light.switch_2_bathroom_main_light
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 47%
              left: 75%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-bathroom-main-vanity )
                )
          - type: state-icon
            entity: light.backyard_string_lights
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 6%
              left: 46%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-light-backyard-string-lights
                ) )
          - type: state-icon
            entity: light.front_yard_accent_lights
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 95%
              left: 21.5%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var(
                --maxson-floorplan--color-light-front-yard-accent-lights ) )
          - type: state-icon
            entity: media_player.sony_bravia_tv
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 17%
              left: 59%
              border-radius: 100%
              '--paper-item-icon-color': >-
                rgb( var( --maxson-floorplan--color-media-player-sony-bravia-tv
                ) )
          - type: state-icon
            entity: light.tv_ambient_lights
            state_color: false
            tap_action:
              action: toggle
            style:
              top: 22.5%
              left: 59%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-light-tv-ambient-lights ) )
        image: /local/images/floor-plan/casa-maxson-floor-plan-vertical.png
  - layout:
      grid-gap: 0
      grid-auto-rows: auto
      grid-template-columns: 5% 1fr 5%
      grid-template-areas: |
        ".  row1  ."
        ".  row2  ."
      mediaquery:
        '(max-width: 992px)':
          grid-auto-rows: auto
          grid-template-columns: 2.5% 95% 2.5%
    type: custom:grid-layout
    title: Water
    path: page-water
    theme: casamaxson
    cards:
      - type: picture-elements
        view_layout:
          grid-area: row1
        card_mod:
          style: |
            /* Mobile */
            @media screen and (max-width: 992px) { 
              ha-card { display: none;}
            }
            ha-card {
              {% set the_entity = 'binary_sensor.leak_air_conditioner' %}
              --maxson-floorplan--color-leak-air-conditioner: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_dish_washer' %}
              --maxson-floorplan--color-leak-dish-washer: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_sink_bathroom_guest' %}
              --maxson-floorplan--color-leak-sink-guest-bathroom: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_sink_bathroom_half' %}
              --maxson-floorplan--color-leak-sink-half-bathroom: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_sink_bathroom_main_hers' %}
              --maxson-floorplan--color-leak-sink-main-bathroom-hers: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_sink_bathroom_main_his' %}
              --maxson-floorplan--color-leak-sink-main-bathroom-his: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_sink_kitchen' %}
              --maxson-floorplan--color-leak-sink-kitchen: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_toilet_bathroom_guest' %}
              --maxson-floorplan--color-leak-toilet-guest-bathroom: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_toilet_bathroom_half' %}
              --maxson-floorplan--color-leak-toilet-half-bathroom: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_toilet_bathroom_main' %}
              --maxson-floorplan--color-leak-toilet-main-bathroom: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_washing_machine' %}
              --maxson-floorplan--color-leak-washing-machine: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_wine_cooler' %}
              --maxson-floorplan--color-leak-wine-cooler: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'valve.front_yard_east' %}
              --maxson-floorplan--color-valve-front-yard-east: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-valve-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-valve-on ) {% else %} var( --map-icon--sensor-valve-off ) {% endif %};

              {% set the_entity = 'valve.side_yard_north' %}
              --maxson-floorplan--color-valve-side-yard-north: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-valve-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-valve-on ) {% else %} var( --map-icon--sensor-valve-off ) {% endif %};

              {% set the_entity = 'valve.side_yard_south' %}
              --maxson-floorplan--color-valve-side-yard-south: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-valve-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-valve-on ) {% else %} var( --map-icon--sensor-valve-off ) {% endif %};
            }
        elements:
          - type: state-icon
            entity: binary_sensor.leak_air_conditioner
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 55%
              left: 67.5%
              border-radius: 100%
              '--icon-primary-color': rgb( var( --maxson-floorplan--color-leak-air-conditioner ) )
          - type: state-icon
            entity: binary_sensor.leak_dish_washer
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 79.75%
              left: 33.5%
              border-radius: 100%
              '--icon-primary-color': rgb( var( --maxson-floorplan--color-leak-dish-washer ) )
          - type: state-icon
            entity: binary_sensor.leak_sink_bathroom_guest
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 80%
              left: 70%
              border-radius: 100%
              '--icon-primary-color': rgb( var( --maxson-floorplan--color-leak-sink-guest-bathroom ) )
          - type: state-icon
            entity: binary_sensor.leak_sink_bathroom_half
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 44.5%
              left: 49%
              border-radius: 100%
              '--icon-primary-color': rgb( var( --maxson-floorplan--color-leak-sink-half-bathroom ) )
          - type: state-icon
            entity: binary_sensor.leak_sink_bathroom_main_hers
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 21%
              left: 46.25%
              border-radius: 100%
              '--icon-primary-color': >-
                rgb( var( --maxson-floorplan--color-leak-sink-main-bathroom-hers
                ) )
          - type: state-icon
            entity: binary_sensor.leak_sink_bathroom_main_his
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 27.5%
              left: 46.25%
              border-radius: 100%
              '--icon-primary-color': >-
                rgb( var( --maxson-floorplan--color-leak-sink-main-bathroom-his
                ) )
          - type: state-icon
            entity: binary_sensor.leak_sink_kitchen
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 74.5%
              left: 33.5%
              border-radius: 100%
              '--icon-primary-color': rgb( var( --maxson-floorplan--color-leak-sink-kitchen ) )
          - type: state-icon
            entity: binary_sensor.leak_toilet_bathroom_guest
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 86.5%
              left: 72.25%
              border-radius: 100%
              '--icon-primary-color': >-
                rgb( var( --maxson-floorplan--color-leak-toilet-guest-bathroom )
                )
          - type: state-icon
            entity: binary_sensor.leak_toilet_bathroom_half
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 48.5%
              left: 45.75%
              border-radius: 100%
              '--icon-primary-color': >-
                rgb( var( --maxson-floorplan--color-leak-toilet-half-bathroom )
                )
          - type: state-icon
            entity: binary_sensor.leak_toilet_bathroom_main
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 37%
              left: 46.325%
              border-radius: 100%
              '--icon-primary-color': >-
                rgb( var( --maxson-floorplan--color-leak-toilet-main-bathroom )
                )
          - type: state-icon
            entity: binary_sensor.leak_washing_machine
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 44%
              left: 64%
              border-radius: 100%
              '--icon-primary-color': rgb( var( --maxson-floorplan--color-leak-washing-machine ) )
          - type: state-icon
            entity: binary_sensor.leak_wine_cooler
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 85%
              left: 11.5%
              border-radius: 100%
              '--icon-primary-color': rgb( var( --maxson-floorplan--color-leak-wine-cooler ) )
          - type: state-icon
            entity: valve.front_yard_east
            state_color: false
            style:
              top: 60%
              left: 96%
              border-radius: 100%
              '--icon-primary-color': rgb( var( --maxson-floorplan--color-valve-front-yard-east ) )
          - type: state-icon
            entity: valve.side_yard_north
            state_color: false
            style:
              top: 5%
              left: 84%
              border-radius: 100%
              '--icon-primary-color': rgb( var( --maxson-floorplan--color-valve-side-yard-north ) )
          - type: state-icon
            entity: valve.side_yard_south
            state_color: false
            style:
              top: 95%
              left: 84%
              border-radius: 100%
              '--icon-primary-color': rgb( var( --maxson-floorplan--color-valve-side-yard-south ) )
        image: /local/images/floor-plan/casa-maxson-floor-plan-horizontal.png
      - type: picture-elements
        view_layout:
          grid-area: row2
        card_mod:
          style: |
            /* Desktop */
            @media screen and (min-width: 992px) { 
              ha-card { display: none;}
            }
            ha-card {
              {% set the_entity = 'binary_sensor.leak_air_conditioner' %}
              --maxson-floorplan--color-leak-air-conditioner: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_dish_washer' %}
              --maxson-floorplan--color-leak-dish-washer: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_sink_bathroom_guest' %}
              --maxson-floorplan--color-leak-sink-guest-bathroom: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_sink_bathroom_half' %}
              --maxson-floorplan--color-leak-sink-half-bathroom: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_sink_bathroom_main_hers' %}
              --maxson-floorplan--color-leak-sink-main-bathroom-hers: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_sink_bathroom_main_his' %}
              --maxson-floorplan--color-leak-sink-main-bathroom-his: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_sink_kitchen' %}
              --maxson-floorplan--color-leak-sink-kitchen: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_toilet_bathroom_guest' %}
              --maxson-floorplan--color-leak-toilet-guest-bathroom: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_toilet_bathroom_half' %}
              --maxson-floorplan--color-leak-toilet-half-bathroom: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_toilet_bathroom_main' %}
              --maxson-floorplan--color-leak-toilet-main-bathroom: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_washing_machine' %}
              --maxson-floorplan--color-leak-washing-machine: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'binary_sensor.leak_wine_cooler' %}
              --maxson-floorplan--color-leak-wine-cooler: {% if( states( the_entity ) == 'unavailable' ) %} var( --maxsonmap-icon--sensor-leak-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-leak-on ) {% else %} var( --map-icon--sensor-leak-off ) {% endif %};

              {% set the_entity = 'valve.front_yard_east' %}
              --maxson-floorplan--color-valve-front-yard-east: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-valve-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-valve-on ) {% else %} var( --map-icon--sensor-valve-off ) {% endif %};

              {% set the_entity = 'valve.side_yard_north' %}
              --maxson-floorplan--color-valve-side-yard-north: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-valve-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-valve-on ) {% else %} var( --map-icon--sensor-valve-off ) {% endif %};

              {% set the_entity = 'valve.side_yard_south' %}
              --maxson-floorplan--color-valve-side-yard-south: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-valve-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-valve-on ) {% else %} var( --map-icon--sensor-valve-off ) {% endif %};
            }
        elements:
          - type: state-icon
            entity: binary_sensor.leak_air_conditioner
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 67%
              left: 45%
              border-radius: 100%
              '--icon-primary-color': rgb( var( --maxson-floorplan--color-leak-air-conditioner ) )
          - type: state-icon
            entity: binary_sensor.leak_dish_washer
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 33.5%
              left: 20%
              border-radius: 100%
              '--icon-primary-color': rgb( var( --maxson-floorplan--color-leak-dish-washer ) )
          - type: state-icon
            entity: binary_sensor.leak_sink_bathroom_guest
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 70%
              left: 19.65%
              border-radius: 100%
              '--icon-primary-color': rgb( var( --maxson-floorplan--color-leak-sink-guest-bathroom ) )
          - type: state-icon
            entity: binary_sensor.leak_sink_bathroom_half
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 49%
              left: 55%
              border-radius: 100%
              '--icon-primary-color': rgb( var( --maxson-floorplan--color-leak-sink-half-bathroom ) )
          - type: state-icon
            entity: binary_sensor.leak_sink_bathroom_main_hers
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 46.5%
              left: 78.5%
              border-radius: 100%
              '--icon-primary-color': >-
                rgb( var( --maxson-floorplan--color-leak-sink-main-bathroom-hers
                ) )
          - type: state-icon
            entity: binary_sensor.leak_sink_bathroom_main_his
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 46.5%
              left: 72%
              border-radius: 100%
              '--icon-primary-color': >-
                rgb( var( --maxson-floorplan--color-leak-sink-main-bathroom-his
                ) )
          - type: state-icon
            entity: binary_sensor.leak_sink_kitchen
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 33.5%
              left: 25%
              border-radius: 100%
              '--icon-primary-color': rgb( var( --maxson-floorplan--color-leak-sink-kitchen ) )
          - type: state-icon
            entity: binary_sensor.leak_toilet_bathroom_guest
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 72.25%
              left: 13.325%
              border-radius: 100%
              '--icon-primary-color': >-
                rgb( var( --maxson-floorplan--color-leak-toilet-guest-bathroom )
                )
          - type: state-icon
            entity: binary_sensor.leak_toilet_bathroom_half
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 45.75%
              left: 51.5%
              border-radius: 100%
              '--icon-primary-color': >-
                rgb( var( --maxson-floorplan--color-leak-toilet-half-bathroom )
                )
          - type: state-icon
            entity: binary_sensor.leak_toilet_bathroom_main
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 46.25%
              left: 63%
              border-radius: 100%
              '--icon-primary-color': >-
                rgb( var( --maxson-floorplan--color-leak-toilet-main-bathroom )
                )
          - type: state-icon
            entity: binary_sensor.leak_washing_machine
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 64%
              left: 56%
              border-radius: 100%
              '--icon-primary-color': rgb( var( --maxson-floorplan--color-leak-washing-machine ) )
          - type: state-icon
            entity: binary_sensor.leak_wine_cooler
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 11.5%
              left: 14%
              border-radius: 100%
              '--icon-primary-color': rgb( var( --maxson-floorplan--color-leak-wine-cooler ) )
          - type: state-icon
            entity: valve.front_yard_east
            state_color: false
            style:
              top: 96%
              left: 39.5%
              border-radius: 100%
              '--icon-primary-color': rgb( var( --maxson-floorplan--color-valve-front-yard-east ) )
          - type: state-icon
            entity: valve.side_yard_north
            state_color: false
            style:
              top: 85%
              left: 95%
              border-radius: 100%
              '--icon-primary-color': rgb( var( --maxson-floorplan--color-valve-side-yard-north ) )
          - type: state-icon
            entity: valve.side_yard_south
            state_color: false
            style:
              top: 85%
              left: 5%
              border-radius: 100%
              '--icon-primary-color': rgb( var( --maxson-floorplan--color-valve-side-yard-south ) )
        image: /local/images/floor-plan/casa-maxson-floor-plan-vertical.png
  - layout:
      grid-gap: 0
      grid-auto-rows: auto
      grid-template-columns: 5% 1fr 5%
      grid-template-areas: |
        ".  row1  ."
        ".  row2  ."
      mediaquery:
        '(max-width: 992px)':
          grid-auto-rows: auto
          grid-template-columns: 2.5% 95% 2.5%
    theme: casamaxson
    title: Other
    path: page-other
    type: custom:grid-layout
    cards:
      - type: picture-elements
        view_layout:
          grid-area: row1
        card_mod:
          style: |
            /* Mobile */
            @media screen and (max-width: 992px) { 
              ha-card { display: none;}
            }
            ha-card {
              --maxson-floorplan--color-temperature-text: var( --black-color-rgb );

              {% set the_entity = 'binary_sensor.door_bedroom_1' %}
              --maxson-floorplan--color-door-bedroom-1: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.door_bedroom_2' %}
              --maxson-floorplan--color-door-bedroom-2: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.door_bedroom_3' %}
              --maxson-floorplan--color-door-bedroom-3: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.door_bedroom_4' %}
              --maxson-floorplan--color-door-bedroom-4: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.door_front_primary' %}
              --maxson-floorplan--color-door-front-primary: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.door_front_secondary' %}
              --maxson-floorplan--color-door-front-secondary: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.door_garage' %}
              --maxson-floorplan--color-door-garage: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.door_living' %}
              --maxson-floorplan--color-door-living: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.door_laundry' %}
              --maxson-floorplan--color-door-laundry: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.door_closet_hallway_hers' %}
              --maxson-floorplan--color-door-closet-hallway-hers: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.door_closet_hallway_his' %}
              --maxson-floorplan--color-door-closet-hallway-his: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.presence_living_room' %}
              --maxson-floorplan--color-presence-living: {% if( states( 'binary_sensor.presence_living_room' ) == 'on' ) %} var( --map-icon--sensor-presence-on ) {% else %} var( --map-icon--sensor-presence-off ) {% endif %};

              {% set the_entity = 'binary_sensor.presence_garage' %}
              --maxson-floorplan--color-presence-garage: {% if( states( 'binary_sensor.presence_garage' ) == 'on' ) %} var( --map-icon--sensor-presence-on ) {% else %} var( --map-icon--sensor-presence-off ) {% endif %};

              {% set the_entity = 'binary_sensor.motion_laundry_room' %}
              --maxson-floorplan--color-motion-laundry-room: {% if( states( 'binary_sensor.motion_laundry' ) == 'on' ) %} var( --map-icon--sensor-presence-on ) {% else %} var( --map-icon--sensor-presence-off ) {% endif %};
            }
        elements:
          - type: state-icon
            entity: binary_sensor.door_bedroom_1
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 37%
              left: 27.5%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-bedroom-1 ) )
          - type: state-icon
            entity: binary_sensor.door_bedroom_2
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 72.5%
              left: 74.5%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-bedroom-2 ) )
          - type: state-icon
            entity: binary_sensor.door_bedroom_3
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 35%
              left: 53.5%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-bedroom-3 ) )
          - type: state-icon
            entity: binary_sensor.door_bedroom_4
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 68%
              left: 60.5%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-bedroom-4 ) )
          - type: state-icon
            entity: binary_sensor.door_front_primary
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 58%
              left: 73%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-front-primary ) )
          - type: state-icon
            entity: binary_sensor.door_front_secondary
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 63%
              left: 73%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-front-secondary ) )
          - type: state-icon
            entity: binary_sensor.door_living
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 50%
              left: 5%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-living ) )
          - type: state-icon
            entity: binary_sensor.door_laundry
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 44%
              left: 56%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-laundry ) )
          - type: state-icon
            entity: binary_sensor.door_garage
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 44%
              left: 65%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-garage ) )
          - type: state-icon
            entity: binary_sensor.door_closet_hallway_hers
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 21%
              left: 34%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-closet-hallway-hers ) )
          - type: state-icon
            entity: binary_sensor.door_closet_hallway_his
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 28.5%
              left: 34%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-closet-hallway-his ) )
          - type: state-label
            entity: sensor.temperature_humidity_attic
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 35%
              left: 95%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_bedroom_1
            tap_action:
              action: more-info
            style:
              top: 25%
              left: 20%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_bedroom_2
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 79.5%
              left: 85%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_bedroom_3
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 23%
              left: 59%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_bedroom_4
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 80%
              left: 56.5%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_living_room
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 64%
              left: 19%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_garage
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 31%
              left: 83%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_attic
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 27%
              left: 95%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_foyer
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 60%
              left: 65%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_refrigerator
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 72%
              left: 44%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_freezer
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 75%
              left: 44%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_wine_cooler_top
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 84%
              left: 12%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_wine_cooler_bottom
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 87%
              left: 12%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-icon
            entity: binary_sensor.presence_living_room
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 50%
              left: 20%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-presence-living ) )
          - type: state-icon
            entity: binary_sensor.presence_garage
            tap_action:
              action: more-info
            state_color: false
            style:
              top: 31%
              left: 71.5%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-presence-garage ) )
          - type: state-icon
            entity: binary_sensor.motion_laundry_room
            tap_action:
              action: more-info
            state_color: false
            style:
              top: 49%
              left: 58%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-motion-laundry-room ) )
        image: /local/images/floor-plan/casa-maxson-floor-plan-horizontal.png
      - type: picture-elements
        view_layout:
          grid-area: row2
        card_mod:
          style: |
            /* Desktop */
            @media screen and (min-width: 992px) { 
              ha-card { display: none;}
            }
            ha-card {
              --maxson-floorplan--color-temperature-text: var( --black-color-rgb );

              {% set the_entity = 'binary_sensor.door_bedroom_1' %}
              --maxson-floorplan--color-door-bedroom-1: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.door_bedroom_2' %}
              --maxson-floorplan--color-door-bedroom-2: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.door_bedroom_3' %}
              --maxson-floorplan--color-door-bedroom-3: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.door_bedroom_4' %}
              --maxson-floorplan--color-door-bedroom-4: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.door_front_primary' %}
              --maxson-floorplan--color-door-front-primary: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.door_front_secondary' %}
              --maxson-floorplan--color-door-front-secondary: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.door_garage' %}
              --maxson-floorplan--color-door-garage: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.door_living' %}
              --maxson-floorplan--color-door-living: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.door_laundry' %}
              --maxson-floorplan--color-door-laundry: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.door_closet_hallway_hers' %}
              --maxson-floorplan--color-door-closet-hallway-hers: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.door_closet_hallway_his' %}
              --maxson-floorplan--color-door-closet-hallway-his: {% if( states( the_entity ) == 'unavailable' ) %} var( --map-icon--sensor-door-unavail ) {% elif( states( the_entity ) == 'on' ) %} var( --map-icon--sensor-door-on ) {% else %} var( --map-icon--sensor-door-off ) {% endif %};

              {% set the_entity = 'binary_sensor.presence_living_room' %}
              --maxson-floorplan--color-presence-living: {% if( states( 'binary_sensor.presence_living_room' ) == 'on' ) %} var( --map-icon--sensor-presence-on ) {% else %} var( --map-icon--sensor-presence-off ) {% endif %};

              {% set the_entity = 'binary_sensor.presence_garage' %}
              --maxson-floorplan--color-presence-garage: {% if( states( 'binary_sensor.presence_garage' ) == 'on' ) %} var( --map-icon--sensor-presence-on ) {% else %} var( --map-icon--sensor-presence-off ) {% endif %};

              {% set the_entity = 'binary_sensor.motion_laundry_room' %}
              --maxson-floorplan--color-motion-laundry-room: {% if( states( 'binary_sensor.motion_laundry' ) == 'on' ) %} var( --map-icon--sensor-presence-on ) {% else %} var( --map-icon--sensor-presence-off ) {% endif %};
            }
        elements:
          - type: state-icon
            entity: binary_sensor.door_bedroom_1
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 27.5%
              left: 62.5%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-bedroom-1 ) )
          - type: state-icon
            entity: binary_sensor.door_bedroom_2
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 74.5%
              left: 27.5%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-bedroom-2 ) )
          - type: state-icon
            entity: binary_sensor.door_bedroom_3
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 53.5%
              left: 64%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-bedroom-3 ) )
          - type: state-icon
            entity: binary_sensor.door_bedroom_4
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 61%
              left: 33%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-bedroom-4 ) )
          - type: state-icon
            entity: binary_sensor.door_front_primary
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 72.5%
              left: 42%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-front-primary ) )
          - type: state-icon
            entity: binary_sensor.door_front_secondary
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 72.5%
              left: 37%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-front-secondary ) )
          - type: state-icon
            entity: binary_sensor.door_living
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 6%
              left: 49%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-living ) )
          - type: state-icon
            entity: binary_sensor.door_laundry
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 55.5%
              left: 56%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-laundry ) )
          - type: state-icon
            entity: binary_sensor.door_garage
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 65.5%
              left: 56%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-garage ) )
          - type: state-icon
            entity: binary_sensor.door_closet_hallway_hers
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 34%
              left: 79%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-closet-hallway-hers ) )
          - type: state-icon
            entity: binary_sensor.door_closet_hallway_his
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 34%
              left: 71%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-door-closet-hallway-his ) )
          - type: state-label
            entity: sensor.temperature_humidity_attic
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 91.5%
              left: 75%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_bedroom_1
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 19%
              left: 76.5%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_bedroom_2
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 84%
              left: 21%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_bedroom_3
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 59%
              left: 77%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_bedroom_4
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 56%
              left: 21%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_living_room
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 13%
              left: 49%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_garage
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 73%
              left: 69%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_attic
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 91.5%
              left: 65%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_foyer
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 65%
              left: 40%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_refrigerator
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 44%
              left: 21%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_freezer
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 44%
              left: 33%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_wine_cooler_top
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 11%
              left: 17%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-label
            entity: sensor.temperature_wine_cooler_bottom
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 14%
              left: 17%
              color: rgb( var( --maxson-floorplan--color-temperature-text ) )
          - type: state-icon
            entity: binary_sensor.presence_living_room
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 21%
              left: 49%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-presence-living ) )
          - type: state-icon
            entity: binary_sensor.presence_garage
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 78%
              left: 69%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-presence-garage ) )
          - type: state-icon
            entity: binary_sensor.motion_laundry_room
            state_color: false
            tap_action:
              action: more-info
            style:
              top: 58%
              left: 53.5%
              border-radius: 100%
              '--paper-item-icon-color': rgb( var( --maxson-floorplan--color-motion-laundry-room ) )
        image: /local/images/floor-plan/casa-maxson-floor-plan-vertical.png
  - title: Security
    path: page-security
    theme: casamaxson
    type: custom:vertical-layout
    cards:
      - type: vertical-stack
        cards:
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: Access
              - type: custom:layout-card
                layout_type: custom:grid-layout
                layout:
                  padding: var( --popup--grid-padding )
                  margin: var( --popup--grid-margin )
                  grid-template-columns: repeat( 2, minmax( 0, 1fr ) )
                  grid-auto-rows: auto
                  grid-row-gap: var( --popup--grid-gap-row )
                  grid-column-gap: var( --popup--grid-gap-column )
                cards:
                  - type: custom:mushroom-lock-card
                    entity: lock.front_door
                    layout: vertical
                    icon_type: none
                    primary_info: name
                    secondary_info: state
                    hold_action:
                      action: more-info
                    double_tap_action:
                      action: more-info
                  - type: custom:mushroom-cover-card
                    entity: cover.garage_door
                    name: Garage Door
                    layout: vertical
                    icon_type: none
                    primary_info: name
                    secondary_info: state
                    show_buttons_control: true
                    hold_action:
                      action: more-info
                    double_tap_action:
                      action: more-info
              - type: entities
                title: Camera Settings
                show_header_toggle: false
                card_mod:
                  style: |
                    ha-card.type-entities { 
                      --ha-card-border-color: transparent;
                      --ha-card-border-width: 0;
                      --ha-card-border-radius: 0;
                      --ha-card-background: transparent;
                      padding-right: 0;
                      padding-left: 0;
                    }

                    #states { padding: 0;}
                entities:
                  - entity: input_boolean.enable_exterior_camera_recording
                    name: Record Exterior Cameras
                  - entity: input_boolean.enable_interior_camera_recording
                    name: Record Interior Cameras
                  - entity: input_boolean.enable_motion_camera_recording
                    name: Record Motion Cameras
                  - entity: input_boolean.camera_int_privacy_mode
                    name: Interior Privacy
      - type: vertical-stack
        cards:
          - type: custom:mushroom-title-card
            title: Cameras
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                template: state_switch_tile
                entity: input_boolean.enable_exterior_camera_recording
                name: Exterior
                icon: mdi:tooltip-image
                tap_action:
                  action: navigate
                  navigation_path: '#camera-exterior'
                variables:
                  text_state_on: Recording
                  text_state_off: Stopped
              - type: custom:button-card
                template: state_switch_tile
                entity: input_boolean.enable_interior_camera_recording
                name: Interior
                icon: mdi:tooltip-account
                tap_action:
                  action: navigate
                  navigation_path: '#camera-interior'
                variables:
                  text_state_on: Recording
                  text_state_off: Stopped
              - type: custom:button-card
                template: state_switch_tile
                entity: input_boolean.enable_motion_camera_recording
                name: Motion
                icon: mdi:tooltip-check
                tap_action:
                  action: navigate
                  navigation_path: '#camera-motion'
                variables:
                  text_state_on: Recording
                  text_state_off: Stopped
          - type: custom:state-switch
            default: camera-exterior
            entity: hash
            states:
              camera-exterior:
                type: vertical-stack
                cards:
                  - type: entities
                    title: Exterior Cameras
                    show_header_toggle: false
                    entities:
                      - entity: camera.ext_doorbell
                        secondary_info: none
                        name: Main Entry Doorbell
                      - entity: camera.ext_backyard_northeast
                        name: Backyard, Northeast
                      - entity: camera.ext_backyard_southeast
                        name: Backyard, Southeast
                      - entity: camera.ext_front_yard_northeast
                        secondary_info: none
                        name: Front Yard, Northeast
                      - entity: camera.ext_front_yard_southeast
                        name: Front Yard, Southeast
                        secondary_info: none
                      - entity: camera.ext_side_yard_northeast
                        name: Side Yard, North
                      - entity: camera.ext_side_yard_southeast
                        name: Side Yard, South
                    card_mod:
                      style: |
                        ha-card.type-entities { 
                          --ha-card-border-color: transparent;
                          --ha-card-border-width: 0;
                          --ha-card-border-radius: 0;
                          --ha-card-background: transparent;
                          padding-right: 0;
                          padding-left: 0;
                        }

                        #states { padding: 0;}
              camera-interior:
                type: vertical-stack
                cards:
                  - type: entities
                    title: Interior Cameras
                    show_header_toggle: false
                    entities:
                      - entity: camera.int_dining_room
                        name: Dining Room
                      - entity: camera.int_kitchen
                        secondary_info: none
                        name: Kitchen
                      - entity: camera.int_foyer
                        secondary_info: none
                        name: Foyer Entryway
                      - entity: camera.int_living_room
                        secondary_info: none
                        name: Living Room
                    card_mod:
                      style: |
                        ha-card.type-entities { 
                          --ha-card-border-color: transparent;
                          --ha-card-border-width: 0;
                          --ha-card-border-radius: 0;
                          --ha-card-background: transparent;
                          padding-right: 0;
                          padding-bottom: 18px;
                          padding-left: 0;
                          border-bottom: 1px solid var( --divider-color );
                        }

                        #states { padding: 0;}
                  - type: entities
                    title: Private Interior Cameras
                    show_header_toggle: false
                    entities:
                      - entity: camera.int_bdr1
                        name: Main Bedroom
                    card_mod:
                      style: |
                        ha-card.type-entities { 
                          --ha-card-border-color: transparent;
                          --ha-card-border-width: 0;
                          --ha-card-border-radius: 0;
                          --ha-card-background: transparent;
                          padding-right: 0;
                          padding-bottom: 18px;
                          padding-left: 0;
                          border-bottom: 1px solid var( --divider-color );
                        }

                        #states { padding: 0;}
              camera-motion:
                type: vertical-stack
                cards:
                  - type: entities
                    title: Motion Only Cameras
                    show_header_toggle: false
                    entities:
                      - entity: camera.ext_garage
                        name: Garage
                    card_mod:
                      style: |
                        ha-card.type-entities { 
                          --ha-card-border-color: transparent;
                          --ha-card-border-width: 0;
                          --ha-card-border-radius: 0;
                          --ha-card-background: transparent;
                          padding-right: 0;
                          padding-left: 0;
                        }

                        #states { padding: 0;}
    layout: {}
  - title: Laundry Details
    path: page-laundry
    theme: casamaxson
    type: custom:horizontal-layout
    layout:
      max_cols: 3
    subview: true
    cards:
      - type: vertical-stack
        cards:
          - type: custom:button-card
            template: laundry_card
            name: Washing Machine
            entity: sensor.custom_laundry_washer_machine_state
            trigger_update:
              - sensor.laundry_washer_combined_details
              - sensor.custom_laundry_washer_machine_state
              - input_boolean.reminder_laundry_complete_washer
            variables:
              details: sensor.laundry_washer_combined_details
            styles:
              name:
                - font-size: 20px
              state:
                - font-size: 18px
          - type: entities
            show_header_toggle: false
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-left: 0;
                }

                #states { padding: 0;}
            entities:
              - entity: input_boolean.reminder_laundry_complete_washer
                name: Announce when done via Alexa
              - entity: sensor.laundry_washer_sub_cycle
                name: Sub-Cycle
              - entity: sensor.laundry_washer_cycle
                name: Cycle
              - entity: binary_sensor.laundry_washer_door
                name: Door Position
      - type: vertical-stack
        cards:
          - type: custom:button-card
            template: laundry_card
            name: Tumble Dryer
            entity: sensor.custom_laundry_dryer_machine_state
            trigger_update:
              - sensor.laundry_dryer_combined_details
              - sensor.custom_laundry_dryer_machine_state
              - input_boolean.reminder_laundry_complete_dryer
            variables:
              details: sensor.laundry_dryer_combined_details
            styles:
              name:
                - font-size: 20px
              state:
                - font-size: 18px
          - type: entities
            show_header_toggle: false
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-left: 0;
                }

                #states { padding: 0;}
            entities:
              - entity: input_boolean.reminder_laundry_complete_dryer
                name: Announce when done via Alexa
              - entity: sensor.laundry_dryer_sub_cycle
                name: Sub-Cycle
              - entity: sensor.laundry_dryer_cycle
                name: Cycle
              - entity: binary_sensor.laundry_dryer_door
                name: Door Position
  - title: Lights
    path: page-lights
    theme: casamaxson
    type: custom:horizontal-layout
    layout:
      max_columns: 3
    subview: true
    cards:
      - type: vertical-stack
        cards:
          - type: entities
            title: Kitchen
            show_header_toggle: false
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-bottom: 18px;
                  padding-left: 0;
                  border-bottom: 1px solid var( --divider-color );
                }

                #states { padding: 0;}
            entities:
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.sync_kitchen_ceiling_lights
                    state_not: unavailable
                  - condition: state
                    entity: input_boolean.sync_kitchen_ceiling_lights
                    state: 'on'
                row:
                  type: custom:mushroom-light-card
                  name: Recessed Ceiling Lights
                  entity: light.kitchen_ceiling_lights
                  collapsible_controls: true
                  show_brightness_control: true
                  show_color_control: true
                  use_light_color: true
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.sync_kitchen_ceiling_lights
                    state_not: unavailable
                  - condition: state
                    entity: input_boolean.sync_kitchen_ceiling_lights
                    state: 'off'
                row:
                  type: custom:mushroom-light-card
                  name: 'Recessed Light #1'
                  entity: light.kitchen_light_1
                  collapsible_controls: true
                  show_brightness_control: true
                  show_color_control: true
                  use_light_color: true
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.sync_kitchen_ceiling_lights
                    state_not: unavailable
                  - condition: state
                    entity: input_boolean.sync_kitchen_ceiling_lights
                    state: 'off'
                row:
                  type: custom:mushroom-light-card
                  name: 'Recessed Light #2'
                  entity: light.kitchen_light_2
                  collapsible_controls: true
                  show_brightness_control: true
                  show_color_control: true
                  use_light_color: true
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.sync_kitchen_ceiling_lights
                    state_not: unavailable
                  - condition: state
                    entity: input_boolean.sync_kitchen_ceiling_lights
                    state: 'off'
                row:
                  type: custom:mushroom-light-card
                  name: 'Recessed Light #3'
                  entity: light.kitchen_light_3
                  collapsible_controls: true
                  show_brightness_control: true
                  show_color_control: true
                  use_light_color: true
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.sync_kitchen_ceiling_lights
                    state_not: unavailable
                  - condition: state
                    entity: input_boolean.sync_kitchen_ceiling_lights
                    state: 'off'
                row:
                  type: custom:mushroom-light-card
                  name: 'Recessed Light #4'
                  entity: light.kitchen_light_4
                  collapsible_controls: true
                  show_brightness_control: true
                  show_color_control: true
                  use_light_color: true
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.sync_kitchen_ceiling_lights
                    state_not: unavailable
                  - condition: state
                    entity: input_boolean.sync_kitchen_ceiling_lights
                    state: 'off'
                row:
                  type: custom:mushroom-light-card
                  name: 'Recessed Light #5'
                  entity: light.kitchen_light_5
                  collapsible_controls: true
                  show_brightness_control: true
                  show_color_control: true
                  use_light_color: true
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.sync_kitchen_ceiling_lights
                    state_not: unavailable
                  - condition: state
                    entity: input_boolean.sync_kitchen_ceiling_lights
                    state: 'off'
                row:
                  type: custom:mushroom-light-card
                  name: 'Recessed Light #6'
                  entity: light.kitchen_light_6
                  collapsible_controls: true
                  show_brightness_control: true
                  show_color_control: true
                  use_light_color: true
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.sync_cabinet_above_lights
                    state_not: unavailable
                  - condition: state
                    entity: input_boolean.sync_cabinet_above_lights
                    state: 'on'
                row:
                  type: custom:mushroom-light-card
                  name: Cabinet Up Lights
                  entity: light.cabinet_upper_lights
                  collapsible_controls: true
                  show_brightness_control: true
                  show_color_control: true
                  use_light_color: true
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.sync_cabinet_above_lights
                    state_not: unavailable
                  - condition: state
                    entity: input_boolean.sync_cabinet_above_lights
                    state: 'off'
                row:
                  type: custom:mushroom-light-card
                  name: Coffee Bar Up Lights
                  entity: light.kitchen_cabinet_upper_coffee_bar
                  collapsible_controls: true
                  show_brightness_control: true
                  show_color_control: true
                  use_light_color: true
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.sync_cabinet_above_lights
                    state_not: unavailable
                  - condition: state
                    entity: input_boolean.sync_cabinet_above_lights
                    state: 'off'
                row:
                  type: custom:mushroom-light-card
                  name: Range/Oven Up Lights
                  entity: light.kitchen_cabinet_upper_range
                  collapsible_controls: true
                  show_brightness_control: true
                  show_color_control: true
                  use_light_color: true
          - type: entities
            title: Common Areas
            show_header_toggle: false
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-bottom: 18px;
                  padding-left: 0;
                  border-bottom: 1px solid var( --divider-color );
                }

                #states { padding: 0;}
            entities:
              - type: custom:mushroom-light-card
                entity: light.dining_room_chandelier
                name: Dining Room, Chandelier
                collapsible_controls: true
                show_brightness_control: true
                show_color_control: true
              - type: custom:mushroom-light-card
                entity: light.living_room_corner_lamp
                name: Living Room, Corner Lamp
                collapsible_controls: true
                show_brightness_control: true
                show_color_control: true
                use_light_color: true
              - type: custom:mushroom-light-card
                entity: light.tv_ambient_lights
                name: Television, Ambient Light
                collapsible_controls: true
                show_brightness_control: true
          - type: entities
            title: Foyer
            show_header_toggle: false
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-bottom: 18px;
                  padding-left: 0;
                  border-bottom: 1px solid var( --divider-color );
                }

                #states { padding: 0;}
            entities:
              - type: conditional
                conditions:
                  - entity: input_boolean.sync_foyer_lights
                    state: 'on'
                row:
                  type: custom:mushroom-light-card
                  entity: light.foyer_entryway_ceiling
                  name: Ceiling Lights
                  collapsible_controls: true
                  show_brightness_control: true
              - type: conditional
                conditions:
                  - entity: input_boolean.sync_foyer_lights
                    state: 'off'
                row:
                  type: custom:mushroom-light-card
                  entity: light.foyer_entryway_ceiling
                  name: Entryway
                  collapsible_controls: true
                  show_brightness_control: true
              - type: conditional
                conditions:
                  - entity: input_boolean.sync_foyer_lights
                    state: 'off'
                row:
                  type: custom:mushroom-light-card
                  entity: light.foyer_hallway_ceiling
                  name: Hallway
                  collapsible_controls: true
                  show_brightness_control: true
              - type: custom:mushroom-light-card
                entity: light.foyer_ceiling_ledge
                name: Upper Ledge
                collapsible_controls: true
                show_brightness_control: true
                show_color_control: true
                use_light_color: true
              - type: custom:mushroom-light-card
                entity: light.foyer_under_table
                name: Under Table
                collapsible_controls: true
                show_brightness_control: true
                show_color_control: true
                use_light_color: true
          - type: entities
            title: Bar
            show_header_toggle: false
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-bottom: 18px;
                  padding-left: 0;
                  border-bottom: 1px solid var( --divider-color );
                }

                #states { padding: 0;}
            entities:
              - type: custom:mushroom-fan-card
                entity: fan.bar_ceiling_fan
                name: Ceiling Fan
                collapsible_controls: true
                show_percentage_control: true
              - type: custom:mushroom-light-card
                entity: light.bar_ceiling_light
                name: Ceiling Fan Light
                collapsible_controls: true
                show_brightness_control: true
      - type: vertical-stack
        cards:
          - type: entities
            title: Main Bedroom
            show_header_toggle: false
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-bottom: 18px;
                  padding-left: 0;
                  border-bottom: 1px solid var( --divider-color );
                }

                #states { padding: 0;}
            entities:
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.sync_bedroom_1_bedside_lamps
                    state_not: unavailable
                  - condition: state
                    entity: input_boolean.sync_bedroom_1_bedside_lamps
                    state: 'on'
                row:
                  type: custom:mushroom-light-card
                  name: Bedside Lamps
                  entity: light.bedroom_1_bedside_lamps
                  collapsible_controls: true
                  show_brightness_control: true
                  show_color_control: true
                  use_light_color: true
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.sync_bedroom_1_bedside_lamps
                    state_not: unavailable
                  - condition: state
                    entity: input_boolean.sync_bedroom_1_bedside_lamps
                    state: 'off'
                row:
                  type: custom:mushroom-light-card
                  name: Jess' Bedside Lamp
                  entity: light.bedroom_1_lamp_hers
                  collapsible_controls: true
                  show_brightness_control: true
                  show_color_control: true
                  use_light_color: true
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.sync_bedroom_1_bedside_lamps
                    state_not: unavailable
                  - condition: state
                    entity: input_boolean.sync_bedroom_1_bedside_lamps
                    state: 'off'
                row:
                  type: custom:mushroom-light-card
                  name: Tom's Bedside Lamp
                  entity: light.bedroom_1_lamp_his
                  collapsible_controls: true
                  show_brightness_control: true
                  show_color_control: true
                  use_light_color: true
              - type: custom:mushroom-cover-card
                entity: cover.large_window_curtains_bedroom_1
                name: Window Curtains
                show_position_control: true
                show_tilt_position_control: true
              - type: custom:mushroom-light-card
                entity: light.closet_hallway_ceiling_light
                name: Hallway
                collapsible_controls: true
                show_brightness_control: true
              - type: custom:mushroom-light-card
                entity: light.closet_hallway_light_hers
                name: Jess' Closet
                collapsible_controls: true
                show_brightness_control: true
              - type: custom:mushroom-light-card
                entity: light.closet_hallway_light_his
                name: Tom's Closet
                collapsible_controls: true
                show_brightness_control: true
          - type: entities
            title: Main Bathroom
            show_header_toggle: false
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-bottom: 18px;
                  padding-left: 0;
                  border-bottom: 1px solid var( --divider-color );
                }

                #states { padding: 0;}
            entities:
              - type: custom:mushroom-light-card
                entity: light.switch_1_bathroom_main_light
                name: Ceiling
                collapsible_controls: true
              - type: custom:mushroom-light-card
                entity: light.switch_2_bathroom_main_light
                name: Vanity
                collapsible_controls: true
          - type: entities
            title: Guest Bedroom
            show_header_toggle: false
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-bottom: 18px;
                  padding-left: 0;
                  border-bottom: 1px solid var( --divider-color );
                }

                #states { padding: 0;}
            entities:
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.sync_bedroom_2_bedside_lamps
                    state_not: unavailable
                  - condition: state
                    entity: input_boolean.sync_bedroom_2_bedside_lamps
                    state: 'on'
                row:
                  type: custom:mushroom-light-card
                  name: Bedside Lamps
                  entity: light.bedroom_2_bedside_lamps
                  collapsible_controls: true
                  show_brightness_control: true
                  show_color_control: true
                  use_light_color: true
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.sync_bedroom_2_bedside_lamps
                    state_not: unavailable
                  - condition: state
                    entity: input_boolean.sync_bedroom_2_bedside_lamps
                    state: 'off'
                row:
                  type: custom:mushroom-light-card
                  name: Left Side Bedside Lamp
                  entity: light.bedroom_2_lamp_left
                  collapsible_controls: true
                  show_brightness_control: true
                  show_color_control: true
                  use_light_color: true
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.sync_bedroom_2_bedside_lamps
                    state_not: unavailable
                  - condition: state
                    entity: input_boolean.sync_bedroom_2_bedside_lamps
                    state: 'off'
                row:
                  type: custom:mushroom-light-card
                  name: Right Side Bedside Lamp
                  entity: light.bedroom_2_lamp_right
                  collapsible_controls: true
                  show_brightness_control: true
                  show_color_control: true
                  use_light_color: true
              - type: custom:mushroom-light-card
                entity: light.guest_hallway_light
                name: Hallway
                collapsible_controls: true
                show_brightness_control: true
          - type: entities
            title: Tom's Office
            show_header_toggle: false
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-bottom: 18px;
                  padding-left: 0;
                  border-bottom: 1px solid var( --divider-color );
                }

                #states { padding: 0;}
            entities:
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.sync_bedroom_4_lights
                    state_not: unavailable
                  - condition: state
                    entity: input_boolean.sync_bedroom_4_lights
                    state: 'on'
                row:
                  type: custom:mushroom-light-card
                  name: Office Lights
                  entity: light.bedroom_4_lights
                  collapsible_controls: true
                  show_brightness_control: true
                  show_color_control: true
                  use_light_color: true
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.sync_bedroom_4_lights
                    state_not: unavailable
                  - condition: state
                    entity: input_boolean.sync_bedroom_4_lights
                    state: 'off'
                row:
                  type: custom:mushroom-light-card
                  name: Desk Lamp
                  entity: light.bedroom_4_desk_lamp
                  collapsible_controls: true
                  show_brightness_control: true
                  show_color_control: true
                  use_light_color: true
              - type: conditional
                conditions:
                  - condition: state
                    entity: input_boolean.sync_bedroom_4_lights
                    state_not: unavailable
                  - condition: state
                    entity: input_boolean.sync_bedroom_4_lights
                    state: 'off'
                row:
                  type: custom:mushroom-light-card
                  name: Lightstrip
                  entity: light.bedroom_4_lightstrip
                  collapsible_controls: true
                  show_brightness_control: true
                  show_color_control: true
                  use_light_color: true
              - type: custom:mushroom-light-card
                entity: light.bedroom_4_tie_fighter_lamp
                name: TIE Fighter Lamp
                collapsible_controls: true
              - type: custom:mushroom-cover-card
                entity: cover.blinds_bedroom_4
                name: Window
                show_position_control: true
                show_tilt_position_control: true
      - type: vertical-stack
        cards:
          - type: entities
            title: Laundry Room
            show_header_toggle: false
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-bottom: 18px;
                  padding-left: 0;
                  border-bottom: 1px solid var( --divider-color );
                }

                #states { padding: 0;}
            entities:
              - type: custom:mushroom-light-card
                entity: light.laundry_ceiling_light
                name: Ceiling
                collapsible_controls: true
                show_brightness_control: true
              - type: custom:mushroom-light-card
                entity: light.laundry_hallway_light
                name: Hallway
                collapsible_controls: true
                show_brightness_control: true
          - type: entities
            title: Garage
            show_header_toggle: false
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-bottom: 18px;
                  padding-left: 0;
                  border-bottom: 1px solid var( --divider-color );
                }

                #states { padding: 0;}
            entities:
              - type: custom:mushroom-light-card
                entity: light.garage_door_light
                name: Opener
                collapsible_controls: true
              - type: custom:mushroom-light-card
                entity: light.garage_ceiling
                name: Ceiling
                collapsible_controls: true
              - type: custom:mushroom-fan-card
                entity: fan.custom_garage_fan
                name: Fan
                collapsible_controls: true
          - type: entities
            title: Outside
            show_header_toggle: false
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-bottom: 18px;
                  padding-left: 0;
                  border-bottom: 1px solid var( --divider-color );
                }

                #states { padding: 0;}
            entities:
              - type: custom:mushroom-light-card
                entity: light.garage_exterior
                name: Garage Exterior Sconces
                collapsible_controls: true
                show_brightness_control: true
              - type: custom:mushroom-light-card
                entity: light.front_yard_accent_lights
                name: Front Yard Ground Lights
                collapsible_controls: true
                show_brightness_control: true
                show_color_control: true
                use_light_color: true
              - type: custom:mushroom-light-card
                entity: light.foyer_entryway_ceiling
                name: Front Door Entryway
                collapsible_controls: true
                show_brightness_control: true
              - type: custom:mushroom-light-card
                entity: light.backyard_string_lights
                name: Backyard String Lights
                collapsible_controls: true
  - title: Devices
    path: page-devices
    layout:
      max_columns: 3
    type: custom:horizontal-layout
    theme: casamaxson
    subview: true
    cards:
      - type: vertical-stack
        cards:
          - type: entities
            title: Door Sensors
            show_header_toggle: false
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-bottom: 18px;
                  padding-left: 0;
                  border-bottom: 1px solid var( --divider-color );
                }

                #states { padding: 0;}
            entities:
              - type: custom:button-card
                template: entity_card
                name: Front Door (Primary)
                entity: binary_sensor.door_front_primary
                variables:
                  icon_on_color: var( --green-color-rgb )
                  data_entity: sensor.door_battery_front_primary
                  data_type: battery
              - type: custom:button-card
                template: entity_card
                name: Front Door (Secondary)
                entity: binary_sensor.door_front_secondary
                variables:
                  icon_on_color: var( --green-color-rgb )
                  data_entity: sensor.door_battery_front_secondary
                  data_type: battery
              - type: custom:button-card
                template: entity_card
                name: Garage Door (Interior)
                entity: binary_sensor.door_garage
                variables:
                  icon_on_color: var( --green-color-rgb )
                  data_entity: sensor.door_battery_garage
                  data_type: battery
              - type: custom:button-card
                template: entity_card
                name: Living Room Door
                entity: binary_sensor.door_living
                variables:
                  icon_on_color: var( --green-color-rgb )
                  data_entity: sensor.door_battery_living
                  data_type: battery
              - type: custom:button-card
                template: entity_card
                name: Main Bedroom Door
                entity: binary_sensor.door_bedroom_1
                variables:
                  icon_on_color: var( --green-color-rgb )
                  data_entity: sensor.door_battery_bedroom_1
                  data_type: battery
              - type: custom:button-card
                template: entity_card
                name: Guest Bedroom Door
                entity: binary_sensor.door_bedroom_2
                variables:
                  icon_on_color: var( --green-color-rgb )
                  data_entity: sensor.door_battery_bedroom_2
                  data_type: battery
              - type: custom:button-card
                template: entity_card
                name: Jess' Office Door
                entity: binary_sensor.door_bedroom_3
                variables:
                  icon_on_color: var( --green-color-rgb )
                  data_entity: sensor.door_battery_bedroom_3
                  data_type: battery
              - type: custom:button-card
                template: entity_card
                name: Tom's Office Door
                entity: binary_sensor.door_bedroom_4
                variables:
                  icon_on_color: var( --green-color-rgb )
                  data_entity: sensor.door_battery_bedroom_4
                  data_type: battery
              - type: custom:button-card
                template: entity_card
                name: Laundry Room Door
                entity: binary_sensor.door_laundry
                variables:
                  icon_on_color: var( --green-color-rgb )
                  data_entity: sensor.door_battery_laundry
                  data_type: battery
              - type: custom:button-card
                template: entity_card
                name: Jess' Closet Door
                entity: binary_sensor.door_closet_hallway_hers
                variables:
                  icon_on_color: var( --green-color-rgb )
                  data_entity: sensor.door_battery_closet_hallway_hers
                  data_type: battery
              - type: custom:button-card
                template: entity_card
                name: Tom's Closet Door
                entity: binary_sensor.door_closet_hallway_his
                variables:
                  icon_on_color: var( --green-color-rgb )
                  data_entity: sensor.door_battery_closet_hallway_his
                  data_type: battery
          - type: entities
            title: Presense Sensors
            show_header_toggle: false
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-bottom: 18px;
                  padding-left: 0;
                  border-bottom: 1px solid var( --divider-color );
                }

                #states { padding: 0;}
            entities:
              - type: custom:button-card
                template: entity_card
                name: Living Room
                entity: binary_sensor.presence_living_room
                variables:
                  icon_on_color: var( --green-color-rgb )
              - type: custom:button-card
                template: entity_card
                name: Garage
                entity: binary_sensor.presence_garage
                variables:
                  icon_on_color: var( --green-color-rgb )
          - type: entities
            title: Motion Sensors
            show_header_toggle: false
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-bottom: 18px;
                  padding-left: 0;
                  border-bottom: 1px solid var( --divider-color );
                }

                #states { padding: 0;}
            entities:
              - type: custom:button-card
                template: entity_card
                name: Laundry Room
                entity: binary_sensor.motion_laundry_room
                variables:
                  data_entity: sensor.motion_battery_laundry_room
                  data_type: battery
                  icon_on_color: var( --green-color-rgb )
      - type: vertical-stack
        cards:
          - type: entities
            title: Leak Sensors
            show_header_toggle: false
            entities:
              - type: custom:button-card
                template: entity_card
                name: Air Conditioner
                entity: binary_sensor.leak_air_conditioner
                variables:
                  icon_on_color: var( --red-color-rgb )
                  data_entity: sensor.leak_battery_air_conditioner
                  data_type: battery
                  icon_type: battery_level
              - type: custom:button-card
                template: entity_card
                name: Dish Washer
                entity: binary_sensor.leak_dish_washer
                variables:
                  icon_on_color: var( --red-color-rgb )
                  data_entity: sensor.leak_battery_dish_washer
                  data_type: battery
                  icon_type: battery_level
              - type: custom:button-card
                template: entity_card
                name: Sink, Guest Bathroom
                entity: binary_sensor.leak_sink_bathroom_guest
                variables:
                  icon_on_color: var( --red-color-rgb )
                  data_entity: sensor.leak_battery_sink_bathroom_guest
                  data_type: battery
                  icon_type: battery_level
              - type: custom:button-card
                template: entity_card
                name: Sink, Half Bathroom
                entity: binary_sensor.leak_sink_bathroom_half
                variables:
                  icon_on_color: var( --red-color-rgb )
                  data_entity: sensor.leak_battery_sink_bathroom_half
                  data_type: battery
                  icon_type: battery_level
              - type: custom:button-card
                template: entity_card
                name: Sink, Main Bathroom - Left
                entity: binary_sensor.leak_sink_bathroom_main_hers
                variables:
                  icon_on_color: var( --red-color-rgb )
                  data_entity: sensor.leak_battery_sink_bathroom_main_hers
                  data_type: battery
                  icon_type: battery_level
              - type: custom:button-card
                template: entity_card
                name: Sink, Main Bathroom - Right
                entity: binary_sensor.leak_sink_bathroom_main_his
                variables:
                  icon_on_color: var( --red-color-rgb )
                  data_entity: sensor.leak_battery_sink_bathroom_main_his
                  data_type: battery
                  icon_type: battery_level
              - type: custom:button-card
                template: entity_card
                name: Sink, Kitchen
                entity: binary_sensor.leak_sink_kitchen
                variables:
                  icon_on_color: var( --red-color-rgb )
                  data_entity: sensor.leak_battery_sink_kitchen
                  data_type: battery
                  icon_type: battery_level
              - type: custom:button-card
                template: entity_card
                name: Toilet, Guest Bathroom
                entity: binary_sensor.leak_toilet_bathroom_guest
                variables:
                  icon_on_color: var( --red-color-rgb )
                  data_entity: sensor.leak_battery_toilet_bathroom_guest
                  data_type: battery
                  icon_type: battery_level
              - type: custom:button-card
                template: entity_card
                name: Toilet, Half Bathroom
                entity: binary_sensor.leak_toilet_bathroom_half
                variables:
                  icon_on_color: var( --red-color-rgb )
                  data_entity: sensor.leak_battery_toilet_bathroom_half
                  data_type: battery
                  icon_type: battery_level
              - type: custom:button-card
                template: entity_card
                name: Toilet, Main Bathroom
                entity: binary_sensor.leak_toilet_bathroom_main
                variables:
                  icon_on_color: var( --red-color-rgb )
                  data_entity: sensor.leak_battery_toilet_bathroom_main
                  data_type: battery
                  icon_type: battery_level
              - type: custom:button-card
                template: entity_card
                name: Wine Cooler
                entity: binary_sensor.leak_wine_cooler_bar
                variables:
                  icon_on_color: var( --red-color-rgb )
                  data_entity: sensor.leak_battery_wine_cooler
                  data_type: battery
                  icon_type: battery_level
              - type: custom:button-card
                template: entity_card
                name: Washing Machine
                entity: binary_sensor.leak_washing_machine_laundry
                variables:
                  icon_on_color: var( --red-color-rgb )
                  data_entity: sensor.leak_battery_washing_machine
                  data_type: battery
                  icon_type: battery_level
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-bottom: 18px;
                  padding-left: 0;
                  border-bottom: 1px solid var( --divider-color );
                }

                #states { padding: 0;}
          - type: entities
            title: Power Outlets
            show_header_toggle: false
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-bottom: 18px;
                  padding-left: 0;
                  border-bottom: 1px solid var( --divider-color );
                }

                #states { padding: 0;}
            entities:
              - type: custom:button-card
                template: entity_card
                name: Garage, Fan
                entity: light.garage_fan
              - type: custom:button-card
                template: entity_card
                name: Kitchen, Above Coffee Bar
                entity: switch.plug_kitchen_cabinets_upper_coffee_bar
              - type: custom:button-card
                template: entity_card
                name: Kitchen, Above Range
                entity: switch.plug_kitchen_cabinets_upper_range
              - type: custom:button-card
                template: entity_card
                name: Kitchen, Tablet
                entity: light.tablet_plug
              - type: custom:button-card
                template: entity_card
                name: Main Bedroom, Camera
                entity: light.camera_power_bdr1
              - type: custom:button-card
                template: entity_card
                name: Tom's Office, Media
                entity: light.bedroom_4_media_plug
      - type: vertical-stack
        cards:
          - type: entities
            title: Locks
            show_header_toggle: false
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-bottom: 18px;
                  padding-left: 0;
                  border-bottom: 1px solid var( --divider-color );
                }

                #states { padding: 0;}
            entities:
              - type: custom:button-card
                template: entity_card
                name: Front Door
                entity: lock.front_door
                variables:
                  data_entity: sensor.front_door_battery
                  data_type: battery
                  icon_type: battery_level
          - type: entities
            title: Temperature Sensors
            show_header_toggle: false
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-bottom: 18px;
                  padding-left: 0;
                  border-bottom: 1px solid var( --divider-color );
                }

                #states { padding: 0;}
            entities:
              - type: custom:button-card
                template: entity_card
                name: Attic
                entity: sensor.temperature_attic
                variables:
                  data_entity: sensor.temperature_battery_attic
                  data_type: battery
                  icon_type: battery_level
              - type: custom:button-card
                template: entity_card
                name: Garage
                entity: sensor.temperature_garage
                variables:
                  data_entity: sensor.temperature_battery_garage
                  data_type: battery
                  icon_type: battery_level
              - type: custom:button-card
                template: entity_card
                name: Wine Cooler (Top)
                entity: sensor.temperature_wine_cooler_top
                variables:
                  data_entity: sensor.temperature_wine_cooler_top
                  data_type: battery
                  icon_type: battery_level
              - type: custom:button-card
                template: entity_card
                name: Wine Cooler (Bottom)
                entity: sensor.temperature_wine_cooler_bottom
                variables:
                  data_entity: sensor.temperature_wine_cooler_bottom
                  data_type: battery
                  icon_type: battery_level
          - type: entities
            title: Windows Treatments
            show_header_toggle: false
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-bottom: 18px;
                  padding-left: 0;
                  border-bottom: 1px solid var( --divider-color );
                }

                #states { padding: 0;}
            entities:
              - type: custom:button-card
                template: entity_card
                name: Left Curtain, Main Bedroom
                entity: cover.bedroom_1_large_window_left
                variables:
                  data_entity: sensor.bedroom_1_large_window_left_battery
                  data_type: battery
                  icon_type: battery_level
              - type: custom:button-card
                template: entity_card
                name: Right Curtain, Main Bedroom
                entity: cover.bedroom_1_large_window_right
                variables:
                  data_entity: sensor.bedroom_1_large_window_right_battery
                  data_type: battery
                  icon_type: battery_level
              - type: custom:button-card
                template: entity_card
                name: Blinds, Tom's Office
                entity: cover.blinds_bedroom_4
                variables:
                  data_entity: sensor.blinds_bedroom_4_battery
                  data_type: battery
                  icon_type: battery_level
          - type: entities
            title: Remotes
            show_header_toggle: false
            card_mod:
              style: |
                ha-card.type-entities { 
                  --ha-card-border-color: transparent;
                  --ha-card-border-width: 0;
                  --ha-card-border-radius: 0;
                  --ha-card-background: transparent;
                  padding-right: 0;
                  padding-bottom: 18px;
                  padding-left: 0;
                  border-bottom: 1px solid var( --divider-color );
                }

                #states { padding: 0;}
            entities:
              - type: custom:button-card
                template: entity_card
                name: For Garage Door
                entity: sensor.remote_battery_kitchen_for_garage_door
                variables:
                  data_entity: sensor.remote_battery_kitchen_for_garage_door
                  data_type: battery
                  icon_type: battery_level
              - type: custom:button-card
                template: entity_card
                name: For Garage Fan
                entity: sensor.remote_battery_garage_for_garage_fan
                variables:
                  data_entity: sensor.remote_battery_garage_for_garage_fan
                  data_type: battery
                  icon_type: battery_level
              - type: custom:button-card
                template: entity_card
                name: For Living Room Lights
                entity: sensor.remote_battery_living_room_for_living_room
                variables:
                  data_entity: sensor.remote_battery_living_room_for_living_room
                  data_type: battery
                  icon_type: battery_level
              - type: custom:button-card
                template: entity_card
                name: For Main Bedroom Lights
                entity: sensor.remote_battery_bedroom_1_for_bedroom_1
                variables:
                  data_entity: sensor.remote_battery_bedroom_1_for_bedroom_1
                  data_type: battery
                  icon_type: battery_level
              - type: custom:button-card
                template: entity_card
                name: For Tom's Office Lights
                entity: sensor.remote_battery_bedroom_4_for_bedroom_4
                variables:
                  data_entity: sensor.remote_battery_bedroom_4_for_bedroom_4
                  data_type: battery
                  icon_type: battery_level
  - title: Residents
    path: page-residents
    theme: casamaxson
    type: custom:horizontal-layout
    cards:
      - type: vertical-stack
        cards:
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                template: state_switch_tile__person
                entity: person.thomas
                name: Tom
                tap_action:
                  action: navigate
                  navigation_path: '#tom'
              - type: custom:button-card
                template: state_switch_tile__person
                entity: person.jessica
                name: Jess
                tap_action:
                  action: navigate
                  navigation_path: '#jess'
              - type: custom:button-card
                template: state_switch_tile__person
                entity: input_boolean.status_dog_gouda
                name: Gouda
                variables:
                  img_path: /local/uploads/avatar-gouda.png
                tap_action:
                  action: navigate
                  navigation_path: '#gouda'
              - type: custom:button-card
                template: state_switch_tile__person
                entity: input_boolean.guests_home
                name: Guest
                variables:
                  img_path: /local/uploads/avatar-guest-dino.png
                  text_state_on: Visiting
                  text_state_off: Traveling
                tap_action:
                  action: navigate
                  navigation_path: '#guest'
          - type: custom:state-switch
            default: tom
            entity: hash
            transition: slide-down
            transition_time: 350
            states:
              tom:
                type: vertical-stack
                cards:
                  - type: custom:mushroom-title-card
                    title: Tom's Details
                  - type: custom:layout-card
                    layout_type: grid
                    layout:
                      place-items: center center
                    square: false
                    columns: 1
                    cards:
                      - type: custom:button-card
                        template: button__icon_name
                        name: Find my iPhone
                        icon: mdi:bell-ring
                        variables:
                          device: notify.mobile_app_toms_iphone
                        tap_action:
                          confirmation:
                            text: Are you sure you want to ping this device?
                          action: call-service
                          service: '[[[ return variables.device; ]]]'
                          service_data:
                            title: Find my iPhone
                            message: Here I am.
                            data:
                              push:
                                sound:
                                  name: alarm.caf
                                  critical: 1
                                  volume: 1
                  - type: custom:expander-card
                    title: Daily Reminders
                    cards:
                      - type: entities
                        show_header_toggle: false
                        card_mod:
                          style: |
                            ha-card.type-entities { 
                              --ha-card-border-color: transparent;
                              --ha-card-border-width: 0;
                              --ha-card-border-radius: 0;
                              --ha-card-background: transparent;
                              padding-top: 12px;
                              padding-right: 0;
                              padding-left: 0;
                            }

                            #states { padding: 0;}
                        entities:
                          - entity: >-
                              input_boolean.reminder_medicine_morning_complete_thomas
                            name: Morning Medication Taken
                          - entity: >-
                              input_boolean.reminder_medicine_afternoon_complete_thomas
                            name: Afternoon Medication Taken
                          - entity: >-
                              input_boolean.reminder_medicine_evening_complete_thomas
                            name: Evening Medication Taken
                  - type: custom:expander-card
                    title: Notification Settings
                    cards:
                      - type: entities
                        show_header_toggle: false
                        card_mod:
                          style: |
                            ha-card.type-entities { 
                              --ha-card-border-color: transparent;
                              --ha-card-border-width: 0;
                              --ha-card-border-radius: 0;
                              --ha-card-background: transparent;
                              padding-top: 12px;
                              padding-right: 0;
                              padding-left: 0;
                            }

                            #states { 
                              --list-indent-size: 45px;
                              padding: 0;
                            }

                            #states > div:nth-child( 2 ), 
                            #states > div:nth-child( 3 ), 
                            #states > div:nth-child( 4 ), 
                            #states > div:nth-child( 7 ), 
                            #states > div:nth-child( 8 ) { 
                              padding-left: var( --list-indent-size ) !important;
                            }

                            #states > div:nth-child( 5 ), 
                            #states > div:nth-child( 6 ) { 
                              padding-left: calc( var( --list-indent-size ) * 2 ) !important;
                            }
                        entities:
                          - entity: input_boolean.app_notify_tom
                            name: Allow Mobile Device Notifications
                          - type: conditional
                            conditions:
                              - entity: input_boolean.app_notify_tom
                                state: 'on'
                              - entity: input_boolean.app_notify_tom
                                state_not: unavailable
                            row:
                              entity: input_boolean.app_notify_tom_alert_schedule
                              name: Schedule Notifications
                          - type: conditional
                            conditions:
                              - entity: input_boolean.app_notify_tom
                                state: 'on'
                              - entity: input_boolean.app_notify_tom
                                state_not: unavailable
                            row:
                              entity: input_boolean.app_notify_tom_alert_info
                              name: Informational Notifications
                          - type: conditional
                            conditions:
                              - entity: input_boolean.app_notify_tom
                                state: 'on'
                              - entity: input_boolean.app_notify_tom
                                state_not: unavailable
                            row:
                              entity: input_boolean.app_notify_tom_alert_activity
                              name: Activity Notifications
                          - type: conditional
                            conditions:
                              - entity: input_boolean.app_notify_tom
                                state: 'on'
                              - entity: input_boolean.app_notify_tom
                                state_not: unavailable
                              - entity: input_boolean.app_notify_tom_alert_activity
                                state: 'on'
                              - entity: input_boolean.app_notify_tom_alert_activity
                                state_not: unavailable
                            row:
                              entity: input_boolean.app_notify_tom_alert_activity_door
                              name: Door Status
                          - type: conditional
                            conditions:
                              - entity: input_boolean.app_notify_tom
                                state: 'on'
                              - entity: input_boolean.app_notify_tom
                                state_not: unavailable
                              - entity: input_boolean.app_notify_tom_alert_activity
                                state: 'on'
                              - entity: input_boolean.app_notify_tom_alert_activity
                                state_not: unavailable
                            row:
                              entity: >-
                                input_boolean.app_notify_tom_alert_activity_person_location
                              name: Person Location
                          - type: conditional
                            conditions:
                              - entity: input_boolean.app_notify_tom
                                state: 'on'
                              - entity: input_boolean.app_notify_tom
                                state_not: unavailable
                            row:
                              entity: input_boolean.app_notify_tom_alert_warning
                              name: Warning Notifications
                          - type: conditional
                            conditions:
                              - entity: input_boolean.app_notify_tom
                                state: 'on'
                              - entity: input_boolean.app_notify_tom
                                state_not: unavailable
                            row:
                              entity: input_boolean.app_notify_tom_alert_critical
                              name: Critical Notifications
              jess:
                type: vertical-stack
                cards:
                  - type: custom:mushroom-title-card
                    title: Jess' Details
                  - type: custom:layout-card
                    layout_type: grid
                    layout:
                      place-items: center center
                    square: false
                    columns: 1
                    cards:
                      - type: custom:button-card
                        template: button__icon_name
                        name: Find my iPhone
                        icon: mdi:bell-ring
                        variables:
                          device: notify.mobile_app_jess_iphone
                        tap_action:
                          confirmation:
                            text: Are you sure you want to ping this device?
                          action: call-service
                          service: '[[[ return variables.device; ]]]'
                          service_data:
                            title: Find my iPhone
                            message: Here I am.
                            data:
                              push:
                                sound:
                                  name: alarm.caf
                                  critical: 1
                                  volume: 1
                  - type: custom:expander-card
                    title: Daily Reminders
                    cards:
                      - type: entities
                        show_header_toggle: false
                        card_mod:
                          style: |
                            ha-card.type-entities { 
                              --ha-card-border-color: transparent;
                              --ha-card-border-width: 0;
                              --ha-card-border-radius: 0;
                              --ha-card-background: transparent;
                              padding-top: 12px;
                              padding-right: 0;
                              padding-left: 0;
                            }

                            #states { padding: 0;}
                        entities:
                          - entity: >-
                              input_boolean.reminder_medicine_morning_complete_jessica
                            name: Morning Medication Taken
                          - entity: >-
                              input_boolean.reminder_medicine_afternoon_complete_jessica
                            name: Afternoon Medication Taken
                          - entity: >-
                              input_boolean.reminder_medicine_evening_complete_jessica
                            name: Evening Medication Taken
                  - type: custom:expander-card
                    title: Notification Settings
                    cards:
                      - type: entities
                        show_header_toggle: false
                        card_mod:
                          style: |
                            ha-card.type-entities { 
                              --ha-card-border-color: transparent;
                              --ha-card-border-width: 0;
                              --ha-card-border-radius: 0;
                              --ha-card-background: transparent;
                              padding-top: 12px;
                              padding-right: 0;
                              padding-left: 0;
                            }

                            #states { 
                              --list-indent-size: 45px;
                              padding: 0;
                            }

                            #states > div:nth-child( 2 ), 
                            #states > div:nth-child( 3 ), 
                            #states > div:nth-child( 4 ), 
                            #states > div:nth-child( 7 ), 
                            #states > div:nth-child( 8 ) { 
                              padding-left: var( --list-indent-size ) !important;
                            }

                            #states > div:nth-child( 5 ), 
                            #states > div:nth-child( 6 ) { 
                              padding-left: calc( var( --list-indent-size ) * 2 ) !important;
                            }
                        entities:
                          - entity: input_boolean.app_notify_jess
                            name: Allow Mobile Device Notifications
                          - type: conditional
                            conditions:
                              - entity: input_boolean.app_notify_jess
                                state: 'on'
                              - entity: input_boolean.app_notify_jess
                                state_not: unavailable
                            row:
                              entity: input_boolean.app_notify_jess_alert_schedule
                              name: Schedule Notifications
                          - type: conditional
                            conditions:
                              - entity: input_boolean.app_notify_jess
                                state: 'on'
                              - entity: input_boolean.app_notify_jess
                                state_not: unavailable
                            row:
                              entity: input_boolean.app_notify_jess_alert_info
                              name: Informational Notifications
                          - type: conditional
                            conditions:
                              - entity: input_boolean.app_notify_jess
                                state: 'on'
                              - entity: input_boolean.app_notify_jess
                                state_not: unavailable
                            row:
                              entity: input_boolean.app_notify_jess_alert_activity
                              name: Activity Notifications
                          - type: conditional
                            conditions:
                              - entity: input_boolean.app_notify_jess
                                state: 'on'
                              - entity: input_boolean.app_notify_jess
                                state_not: unavailable
                              - entity: input_boolean.app_notify_jess_alert_activity
                                state: 'on'
                              - entity: input_boolean.app_notify_jess_alert_activity
                                state_not: unavailable
                            row:
                              entity: >-
                                input_boolean.app_notify_jess_alert_activity_door
                              name: Door Status
                          - type: conditional
                            conditions:
                              - entity: input_boolean.app_notify_jess
                                state: 'on'
                              - entity: input_boolean.app_notify_jess
                                state_not: unavailable
                              - entity: input_boolean.app_notify_jess_alert_activity
                                state: 'on'
                              - entity: input_boolean.app_notify_jess_alert_activity
                                state_not: unavailable
                            row:
                              entity: >-
                                input_boolean.app_notify_jess_alert_activity_person_location
                              name: Person Location
                          - type: conditional
                            conditions:
                              - entity: input_boolean.app_notify_jess
                                state: 'on'
                              - entity: input_boolean.app_notify_jess
                                state_not: unavailable
                            row:
                              entity: input_boolean.app_notify_jess_alert_warning
                              name: Warning Notifications
                          - type: conditional
                            conditions:
                              - entity: input_boolean.app_notify_jess
                                state: 'on'
                              - entity: input_boolean.app_notify_jess
                                state_not: unavailable
                            row:
                              entity: input_boolean.app_notify_jess_alert_critical
                              name: Critical Notifications
              gouda:
                type: vertical-stack
                cards:
                  - type: custom:mushroom-title-card
                    title: Gouda's Details
                  - type: entities
                    entities:
                      - entity: input_boolean.status_dog_gouda
                        name: Is Home
                      - entity: input_boolean.reminder_medicine_complete_gouda
                        name: Medication Given
              guest:
                type: vertical-stack
                cards:
                  - type: custom:mushroom-title-card
                    title: Guest Details
                  - type: entities
                    entities:
                      - entity: input_boolean.guests_home
                        name: Guests are visiting
    subview: true
  - title: Helpers
    path: page-helpers
    type: custom:horizontal-layout
    layout:
      max_columns: 3
    cards:
      - type: vertical-stack
        cards:
          - type: entities
            title: Notification Reminders
            show_header_toggle: false
            entities:
              - entity: input_boolean.reminder_waste_take_out_solid
                name: Waste Bin Take Out
              - entity: input_boolean.reminder_waste_bring_in_solid
                name: Waste Bin Bring In
              - entity: input_boolean.reminder_waste_take_out_recycle
                name: Recycling Reminder
              - entity: input_boolean.reminder_waste_bring_in_recycle
                name: Recycling Dropoff
              - entity: input_boolean.reminder_laundry_complete_washer
                name: Washing Machine Complete
              - entity: input_boolean.reminder_laundry_complete_dryer
                name: Tumble Dryer Complete
      - type: vertical-stack
        cards:
          - type: entities
            title: iOS Snoozed Push Notifications
            show_header_toggle: false
            entities:
              - entity: input_boolean.snooze_notify_household_activity
                name: Household Activities
              - entity: input_boolean.snooze_notify_garage_open
                name: Garage Door Open
              - entity: input_boolean.snooze_notify_front_door_unlocked
                name: Front Door Unlocked
              - entity: input_boolean.snooze_notify_doorbell_motion
                name: Doorbell Motion Activites
              - entity: input_boolean.snooze_waste_reminder_bring_in
                name: Waste, Bring In
              - entity: input_boolean.snooze_waste_reminder_take_out
                name: Waste, Take Out
      - type: vertical-stack
        cards:
          - type: custom:expander-card
            title: Sunrise Automations
            cards:
              - type: entities
                title: Sunrise Automations
                show_header_toggle: false
                entities:
                  - entity: input_boolean.sunrise_automations_run
                    name: Enable
                  - type: conditional
                    conditions:
                      - entity: input_boolean.sunrise_automations_run
                        state: 'on'
                    row:
                      entity: input_button.trigger_sunrise_automations_run
                      name: Trigger
          - type: custom:expander-card
            title: Noon Automations
            cards:
              - type: entities
                title: Noon Automations
                show_header_toggle: false
                entities:
                  - entity: input_boolean.noon_automations_run
                    name: Enable
                  - type: conditional
                    conditions:
                      - entity: input_boolean.noon_automations_run
                        state: 'on'
                    row:
                      entity: input_button.trigger_noon_automations_run
                      name: Trigger
          - type: custom:expander-card
            title: Sunset Automations
            cards:
              - type: entities
                title: Sunset Automations
                show_header_toggle: false
                entities:
                  - entity: input_boolean.sunset_automations_run
                    name: Enable
                  - type: conditional
                    conditions:
                      - entity: input_boolean.sunset_automations_run
                        state: 'on'
                    row:
                      entity: input_button.trigger_sunset_automations_run
                      name: Trigger
                  - entity: sensor.sunset_automations_status
                    name: Sunset Automations
                  - entity: input_boolean.sunset_automations_active
                    name: Active
          - type: custom:expander-card
            title: Bedtime Automations
            cards:
              - type: entities
                title: Bedtime Automations
                show_header_toggle: false
                entities:
                  - entity: input_boolean.bedtime_automations_run
                    name: Enable
                  - type: conditional
                    conditions:
                      - entity: input_boolean.bedtime_automations_run
                        state: 'on'
                    row:
                      entity: input_button.trigger_bedtime_automations_run
                      name: Trigger
          - type: custom:expander-card
            title: Midnight Automations
            cards:
              - type: entities
                title: Midnight Automations
                show_header_toggle: false
                entities:
                  - entity: input_boolean.midnight_automations_run
                    name: Enable
                  - type: conditional
                    conditions:
                      - entity: input_boolean.midnight_automations_run
                        state: 'on'
                    row:
                      entity: input_button.trigger_midnight_automations_run
                      name: Trigger
    subview: true
button_card_templates:
  button_data_setup:
    variables:
      entity_id: |
        [[[ return ! entity || entity.entity_id; ]]]
      state: |
        [[[ return ! entity || entity.state; ]]]
      state_on: |
        [[[ 
          if( ! entity || variables.entity_id == false )
            return false;

          const active_states = [ 
            'home', 
            'on', 
            'open', 
            'playing', 
            'paused', 
            'buffering', 
            'unlocked', 
            'wet'
          ];

          if( states[variables.entity_id].attributes != undefined )
          { 
            let deviceEntities = states[variables.entity_id].attributes.entity_id;

            if( deviceEntities != undefined && deviceEntities.length >= 1 )
            { 
              for( var i = 0; i < deviceEntities.length; i++ )
              { 
                if( active_states.indexOf( states[deviceEntities[i]].state ) >= 0 )
                { 
                  return true;

                } // endif
              } // endfor

              return false;
            } // endif
          } // endif

          return ( active_states.indexOf( states[entity.entity_id].state ) >= 0 ) ? true : false;
        ]]]
      state_on_count: |
        [[[ 
          if( ! entity || variables.entity_id == false )
            return 0;

          const active_states = [ 
            'home', 
            'on', 
            'open', 
            'playing', 
            'paused', 
            'buffering', 
            'unlocked', 
            'wet'
          ];

          if( states[variables.entity_id].attributes != undefined )
          { 
            let deviceEntities = states[variables.entity_id].attributes.entity_id;

            if( deviceEntities != undefined && deviceEntities.length >= 1 )
            { 
              let deviceOnCount = 0;

              for( var i = 0; i < deviceEntities.length; i++ )
              { 
                if( active_states.indexOf( states[deviceEntities[i]].state ) !== -1 )
                { 
                  deviceOnCount++;

                } // endif
              } // endfor

              return deviceOnCount;
            } // endif
          } // endif

          return ( active_states.indexOf( states[entity.entity_id].state ) !== -1 ) ? 1 : 0;
        ]]]
  button_animation__bounce:
    tap_action:
      action: none
      haptic: hard
      animation_card: |
        [[[
          const animation_speed_ms = 900;
          const animation = `tile_bounce ${animation_speed_ms}ms cubic-bezier( 0.22, 1, 0.36, 1 )`;
          const theCard = this.shadowRoot.getElementById( 'card' );

          theCard.style.animation = animation;

          window.setTimeout( () => { 
            theCard.style.animation = 'none';
          }, animation_speed_ms );
        ]]]
    double_tap_action:
      action: none
      haptic: selection
    hold_action:
      action: none
      haptic: selection
    extra_styles: |
      @keyframes tile_bounce {
        0% {
          transform: scale(1);
        }
        15% {
          transform: scale(0.9);
        }
        25% {
          transform: scale(1);
        }
        30% {
          transform: scale(0.98);
        }
        100% {
          transform: scale(1);
        }
      }
  button_animation__ping_danger:
    extra_styles: |
      @keyframes ping_danger {
        0% { 
          box-shadow: 0 0 0 0 rgba( var( --red-color-rgb ), 0.9 );
        }
        70% { 
          box-shadow: 0 0 0 var( --tile-card--padding ) transparent; 
        }
        100% { 
          box-shadow: 0 0 0 0 transparent;
        }
      }
  button_theme__default:
    styles:
      card:
        - '--ha-card-border-width': var( --tile-card--border-width )
        - '--ha-card-border-color': var( --tile-card--border-color )
        - '--ha-card-border-radius': var( --tile-card--border-radius )
        - '--ha-card-background': var( --tile-card--background-color )
        - '--mdc-ripple-color': var( --tile-card--ripple-color )
        - '-webkit-tap-highlight-color': var( --tile-card--tap-highlight-color )
        - padding: var( --tile-card--padding )
        - font-weight: 500
      name:
        - '--primary-text-color': var( --tile-card--name-color )
        - color: var( --primary-text-color )
        - opacity: 1
      state:
        - '--primary-text-color': var( --tile-card--state-color )
        - color: var( --primary-text-color )
        - opacity: 1
      label:
        - '--primary-text-color': var( --tile-card--label-color )
        - color: var( --primary-text-color )
        - opacity: 1
      icon:
        - '--state-light-on-color': rgb( var( --blue-color-rgb ) )
        - '--state-light-off-color': var( --tile-card--icon-color )
        - '--disabled-text-color': rgb( var( --grey-color-rgb ) )
        - color: |
            [[[ 
              return ( variables.state_on )
                ? 'var( --state-light-on-color )'
                : 'var( --state-light-off-color )';
            ]]]
        - opacity: 1
  button_theme__on_inverse:
    state:
      - value: 'on'
        styles:
          card:
            - '--ha-card-border-color': var( --tile-card--border-color--inverse )
            - '--ha-card-background': var( --tile-card--background-color--inverse )
            - '--mdc-ripple-color': var( --tile-card--ripple-color--inverse )
            - '-webkit-tap-highlight-color': var( --tile-card--tap-highlight-color--inverse )
          name:
            - '--primary-text-color': var( --tile-card--name-color--inverse )
          state:
            - '--primary-text-color': var( --tile-card--state-color--inverse )
          label:
            - '--primary-text-color': var( --tile-card--label-color--inverse )
  button__base:
    template:
      - button_data_setup
      - button_animation__bounce
      - button_theme__default
    variables:
      icon: |
        [[[ if ( ! entity ) return '';
          else return entity.icon; ]]]'
      icon_on: '[[[ return variables.icon; ]]]'
      icon_off: '[[[ return variables.icon; ]]]'
    icon: |
      [[[ if ( variables.state_on == 'on' ) return variables.icon_on;
        else return variables.icon_off; ]]]
    styles:
      grid:
        - grid-column-gap: 12px
        - grid-auto-rows: min-content
        - grid-auto-columns: min-content
        - grid-template-areas: '"i n"'
        - margin: auto
        - width: auto
  button__icon_name:
    template:
      - button__base
    styles:
      name:
        - font-weight: 700
      icon:
        - width: 24px
  laundry_card:
    template:
      - button_data_setup
      - button_animation__bounce
      - button_theme__default
    variables:
      time_remaining: |
        [[[ 
          var theEntity = variables.details;

          return states[theEntity].attributes.time_remaining;
        ]]]
    layout: icon_name
    show_label: false
    show_state: true
    state_display: |
      [[[
        const time = variables.time_remaining;

        switch( entity.state )
        { 
          case 'on':
            if( 'Off' == time || '00:00' == time )
            { 
              return 'Done';
            } else
            { 
              return `${time} remaining`;
            }
            break;

          case 'off':
            return 'Ready';
            break;
        }
      ]]]
    label: ''
    styles:
      card:
        - padding: 10px 5px
        - border-width: 1px
        - border-color: rgba( 255, 255, 255, 0.12 )
      grid:
        - grid-template-rows: repeat( 2, 50% )
        - grid-template-columns: min-content 12px 1fr
        - grid-template-areas: |
            "i . n"
            "i . s"
      name:
        - place-self: center
        - justify-self: flex-start
        - font-size: 16px
        - font-weight: 600
      state:
        - place-self: center
        - justify-self: flex-start
        - font-size: 14px
        - font-weight: 300
      img_cell:
        - align-items: start
      icon:
        - width: 100%
        - min-width: 60px
  room_tile:
    template:
      - button_data_setup
      - button_animation__bounce
      - button_theme__default
      - button_theme__on_inverse
    variables:
      data_blinds: false
      data_curtains: false
      data_door: false
      data_temperature: false
      state_on: |
        [[[ 
          return ( entity != false && entity != undefined ) 
            ? ['on'].indexOf( ! entity || entity.state ) !== -1 
            : false;
        ]]]
      badge_alert: ''
      badge_blinds: ''
      badge_curtains: ''
      badge_door: ''
      icon: |
        [[[ if ( ! entity ) return '';
          else return entity.icon; ]]]'
      icon_on: '[[[ return variables.icon; ]]]'
      icon_off: '[[[ return variables.icon; ]]]'
      text_temperature: |
        [[[ 
          const theEntity = variables.data_temperature;
          let output = '&nbsp;';

          if( theEntity !== false && theEntity !== undefined ) 
          { 
            const theState = states[theEntity].state;
            const measurement = states[theEntity].attributes.unit_of_measurement;

            output = Math.round( states[theEntity].state ).toFixed( 0 ) + measurement;

          }  // endif

          return output;
        ]]]
      tap_service: |
        [[[ 
          return variables.state_on
            ? 'light.turn_off' 
            : 'light.turn_on'
        ]]]
      tap_entity: |
        [[[ 
          return variables.state_on
            ? variables.entity_id
            : variables.data_lightOn
        ]]]
    show_icon: true
    show_label: '[[[ return ( variables.text_temperature !== "" ) ? true : false ]]]'
    show_state: false
    icon: >-
      [[[ return ( variables.state_on ) ? variables.icon_on :
      variables.icon_off; ]]]
    label: '[[[ return variables.text_temperature ]]]'
    tap_action:
      action: call-service
      service: '[[[ return variables.tap_service ]]]'
      target:
        entity_id: '[[[ return variables.tap_entity ]]]'
    double_tap_action:
      action: navigate
      navigation_path: '[[[ return variables.path ]]]'
    hold_action:
      action: navigate
      navigation_path: '[[[ return variables.path ]]]'
    custom_fields:
      badgeBar:
        card:
          type: vertical-stack
          cards:
            - type: custom:button-card
              template:
                - room_tile__badge
                - button_animation__ping_danger
              variables:
                state_on: '[[[ return variables.state_on ]]]'
                name_icon: '[[[ return variables.badge_alert ]]]'
              styles:
                card:
                  - '--ha-card-border-color': rgb( 255, 255, 255 )
                  - '--ha-card-background': rgb( var( --red-color-rgb ) )
                  - animation: ping_danger 2s infinite;
                name:
                  - color: rgb( 255, 255, 255 )
            - type: custom:button-card
              template:
                - room_tile__badge
              tap_action:
                action: call-service
                service: '[[[ return variables.tap_service ]]]'
                target:
                  entity_id: '[[[ return variables.tap_entity ]]]'
              variables:
                state_on: '[[[ return variables.state_on ]]]'
                name_icon: |
                  [[[
                    const theEntity = variables.data_door;
                    let output = '';

                    if( theEntity != false && theEntity != undefined )
                    { 
                      const theState = states[theEntity].state;

                      if( theState == 'on' )
                      { 
                        output = '<ha-icon icon="mdi:door-open"></ha-icon>';

                      } // endif
                    } // endif

                    return output;
                  ]]]
            - type: custom:button-card
              template:
                - room_tile__badge
              tap_action:
                action: call-service
                service: '[[[ return variables.tap_service ]]]'
                target:
                  entity_id: '[[[ return variables.tap_entity ]]]'
              variables:
                state_on: '[[[ return variables.state_on ]]]'
                name_icon: |
                  [[[
                    const theEntity = variables.data_blinds;
                    let output = '';

                    if( theEntity != false && theEntity != undefined )
                    { 
                      const isOpen = ['open', 'opening'].indexOf( states[theEntity].state ) !== -1;

                      if( isOpen )
                      { 
                        output = '<ha-icon icon="mdi:blinds-horizontal"></ha-icon>';

                      } // endif
                    } // endif

                    return output;
                  ]]]
            - type: custom:button-card
              template:
                - room_tile__badge
              tap_action:
                action: call-service
                service: '[[[ return variables.tap_service ]]]'
                target:
                  entity_id: '[[[ return variables.tap_entity ]]]'
              variables:
                state_on: '[[[ return variables.state_on ]]]'
                name_icon: |
                  [[[
                    const theEntity = variables.data_curtains;
                    let output = '';

                    if( theEntity != false && theEntity != undefined )
                    { 
                      const isOpen = ['open', 'opening'].indexOf( states[theEntity].state ) !== -1;

                      if( isOpen )
                      { 
                        output = '<ha-icon icon="mdi:curtains"></ha-icon>';

                      } // endif
                    } // endif

                    return output;
                  ]]]
      btnAction:
        card:
          type: custom:button-card
          tap_action:
            action: navigate
            haptic: hard
            navigation_path: '[[[ return variables.path ]]]'
          icon: mdi:dots-horizontal
          show_name: false
          styles:
            card:
              - padding: 0
              - padding-right: var( --tile-card--padding )
              - padding-bottom: var( --tile-card--padding )
              - border-top-left-radius: 0
              - border-top-right-radius: 0
              - border-bottom-left-radius: 0
              - border-color: transparent
              - margin-left: auto
              - background-color: transparent
              - box-shadow: none
              - z-index: 2
            img_cell:
              - align-items: start
              - justify-content: end
            icon:
              - padding: calc( var( --tile-card--padding ) / 3 )
              - border-width: var( --tile-card--border-width )
              - border-style: solid
              - border-color: |
                  [[[ 
                    return ( variables.state_on )
                      ? 'var( --tile-card-btn--border-color--inverse )'
                      : 'var( --tile-card-btn--border-color )';
                  ]]]
              - border-radius: 100%
              - margin: 0
              - width: 28px
              - height: 28px
              - color: |
                  [[[ 
                    return ( variables.state_on )
                      ? 'var( --tile-card-btn--icon-color--inverse )'
                      : 'var( --tile-card-btn--icon-color )';
                  ]]]
              - background-color: |
                  [[[ 
                    return ( variables.state_on )
                      ? 'var( --tile-card-btn--background-color--inverse )'
                      : 'var( --tile-card-btn--background-color )';
                  ]]]
    styles:
      card:
        - box-sizing: border-box
        - position: relative
        - padding: 0
        - margin: 0
        - overflow: visible
      grid:
        - box-sizing: border-box
        - grid-auto-rows: min-content
        - grid-template-columns: repeat( 1fr, 50% ) min-content
        - grid-template-areas: |
            "n n badgeBar"
            "l l badgeBar"
            "i btnAction badgeBar"
      name:
        - box-sizing: border-box
        - justify-self: start
        - align-self: start
        - padding-top: var( --tile-card--padding )
        - padding-bottom: calc( var( --tile-card--padding ) / 3 )
        - padding-right: >-
            calc( var( --tile-card--padding ) + ( var( --tile-card--padding ) /
            2 ) )
        - padding-left: var( --tile-card--padding )
        - font-size: clamp( 1.3rem, 1.4vw, 1.8rem )
        - font-weight: 700
      state:
        - box-sizing: border-box
        - justify-self: start
        - align-self: start
        - padding-bottom: calc( var( --tile-card--padding ) / 2 )
        - padding-left: var( --tile-card--padding )
        - font-size: clamp( 1.1rem, 1.4vw, 1.4rem )
        - font-weight: 500
      label:
        - box-sizing: border-box
        - justify-self: start
        - align-self: start
        - padding-left: var( --tile-card--padding )
        - padding-bottom: calc( var( --tile-card--padding ) / 2 )
        - font-size: clamp( 1.1rem, 1.4vw, 1.4rem )
        - font-weight: 500
      img_cell:
        - box-sizing: border-box
        - align-self: end
        - justify-self: start
        - align-items: start
        - justify-content: start
        - padding: 0
        - padding-bottom: var( --tile-card--padding )
        - padding-left: var( --tile-card--padding )
        - margin: 0
        - margin-right: auto
        - border-top-left-radius: 0
        - border-top-right-radius: 0
        - border-bottom-right-radius: 0
        - width: auto
        - background-color: transparent
      icon:
        - '--state-light-on-color': '[[[ return "var( --tile-card--icon-color--inverse )" ]]]'
        - '--state-light-off-color': '[[[ return "var( --tile-card--icon-color )" ]]]'
        - padding: 0
        - margin: 0
        - width: 48px
      custom_fields:
        btnAction:
          - '--mdc-ripple-color': transparent
          - '-webkit-tap-highlight-color': transparent
          - align-self: end
          - justify-self: end
          - align-items: start
          - justify-content: end
          - padding: 0
          - margin: 0
          - margin-left: auto
          - border-top-left-radius: 0
          - border-top-right-radius: 0
          - border-bottom-left-radius: 0
          - width: auto
          - background-color: transparent
        badgeBar:
          - '--vertical-stack-card-gap': 0
          - position: absolute
          - top: 0
          - bottom: 0
          - right: 0
          - display: flex
          - flex-direction: column
          - align-items: center
          - justify-content: flex-start
          - width: 100%
          - max-width: var( --tile-card--padding )
          - overflow: visible
          - z-index: 1
  room_tile__slim:
    template:
      - room_tile
    layout: horizontal
    show_label: false
    show_state: false
    styles:
      card:
        - padding: calc( var( --tile-card--padding ) / 2 ) var( --tile-card--padding )
      grid:
        - grid-auto-rows: min-content
        - grid-template-columns: min-content 1fr min-content
        - grid-template-areas: |
            "i n badgeBar"
      name:
        - place-self: center
        - padding-top: 0
        - padding-right: 0
        - padding-bottom: 0
        - padding-left: calc( var( --tile-card--padding ) / 2 )
        - margin: 0
        - width: 100%
        - min-height: unset
        - text-align: left
      img_cell:
        - justify-self: start
        - justify-content: center
        - left: auto
        - bottom: auto
        - justify-content: start
        - padding-left: 0
        - padding-bottom: 0
        - margin: 0
        - margin-right: 0
        - width: 36px
      icon:
        - width: 100%
      custom_fields:
        btnAction:
          - display: none
  room_tile__badge:
    template:
      - button_data_setup
    show_icon: false
    show_label: false
    show_state: false
    name: '[[[ return variables.name_icon ]]]'
    tap_action:
      action: none
    double_tap_action:
      action: none
    hold_action:
      action: none
    styles:
      card:
        - '--ha-card-border-color': |
            [[[
              return ( variables.state_on )
                ? 'var( --tile-card-badge--border-color--inverse )'
                : 'var( --tile-card-badge--border-color )';
            ]]]
        - '--ha-card-background': |
            [[[
              return ( variables.state_on )
                ? 'var( --tile-card-badge--background-color--inverse )'
                : 'var( --tile-card-badge--background-color )';
            ]]]
        - display: |
            [[[ 
              return ( variables.name_icon !== '' )
                ? 'flex' 
                : 'none'
            ]]]
        - align-items: center
        - justify-content: center
        - right: calc( var( --tile-card-badge--padding ) * -1 )
        - top: calc( var( --tile-card-badge--padding ) * -1 )
        - padding: var( --tile-card-badge--padding )
        - border-radius: 50%
        - margin: 0 0 var( --tile-card-badge--padding )
        - transition: all 0.3s ease-out
        - z-index: 1
      grid:
        - grid-template-areas: 'n'
        - grid-auto-columns: min-content
        - grid-auto-rows: min-content
      name:
        - color: |
            [[[
              return ( variables.state_on )
                ? 'var( --tile-card-badge--icon-color--inverse )'
                : 'var( --tile-card-badge--icon-color )';
            ]]]
        - margin-top: '-2.5px'
        - width: var( --tile-card-badge--size )
        - font-size: 16px
        - transition: all 0.3s ease-out
  chip__room_detail:
    template:
      - button__base
    variables:
      all_off_hide: false
      icon_color_on: var( --chip-card--icon-color )
      icon_color_off: var( --chip-card--icon-color )
      icon_state_on: '[[[ return entity.icon ]]]'
      icon_state_off: '[[[ return entity.icon ]]]'
      text_state_on: '[[[ states[variables.entity_id].state ]]]'
      text_state_off: '[[[ states[variables.entity_id].state ]]]'
    triggers_update:
      - variables.entity_id
    layout: name_icon_state2nd
    show_name: true
    show_state: |
      [[[ 
        return ( variables.text_state_on == '' && variables.text_state_off == '' )
          ? true
          : false
      ]]]
    state_display: |
      [[[
        return ( variables.state_on )
          ? variables.text_state_on
          : variables.text_state_off;
      ]]]
    icon: |
      [[[
        return ( variables.state_on )
          ? variables.icon_state_on
          : variables.icon_state_off;
      ]]]
    styles:
      card:
        - '--ha-card-border-width': var( --chip-card--border-width )
        - '--ha-card-border-color': var( --chip-card--border-color )
        - '--ha-card-background': var( --chip-card--background-color )
        - display: |
            [[[
              return ( variables.all_off_hide == true && variables.state_on == false )
                ? 'none'
                : 'flex';
            ]]]
        - align-items: flex-start
        - justify-content: center
        - padding: 6px 12px
        - border-radius: var( --tile-card--border-radius )
        - height: 100%
        - min-height: 44px
        - width: auto
        - max-width: unset
        - text-align: left
      grid:
        - grid-template-areas: |
            [[[ 
              return ( variables.text_state_on == '' && variables.text_state_off == '' )
                ? '"i n"'
                : '"i n" "i s"';
            ]]]
        - grid-auto-columns: min-content
        - grid-auto-rows: 1fr
        - grid-column-gap: 6px
      name:
        - '--primary-text-color': var( --chip-card--name-color )
        - justify-self: flex-start
        - align-self: unset
        - width: auto
        - min-width: min-content
        - color: var( --primary-text-color )
        - font-size: 13px
        - font-weight: 500
      state:
        - '--primary-text-color': var( --chip-card--name-color )
        - justify-self: flex-start
        - width: auto
        - min-width: min-content
        - color: var( --primary-text-color )
        - font-size: 12px
        - font-weight: 700
      img_cell:
        - width: 24px
      icon:
        - '--state-light-on-color': '[[[ return variables.icon_color_on; ]]]'
        - '--state-light-off-color': '[[[ return variables.icon_color_off; ]]]'
        - color: |
            [[[
              return ( variables.state_on )
                ? variables.icon_color_on
                : variables.icon_coor_off;
            ]]]
        - width: 100%
    tap_action:
      action: none
    double_tap_action:
      action: more-info
    hold_action:
      action: more-info
  chip_detail__door:
    template:
      - chip__room_detail
    variables:
      all_off_hide: false
      icon_state_on: mdi:door-open
      icon_state_off: mdi:door-closed
      icon_color_on: rgba( var( --green-color-rgb ) )
      text_state_on: Open
      text_state_off: Closed
    name: Door
  chip_detail__fan:
    template:
      - chip__room_detail
    variables:
      all_off_hide: true
      icon_color_on: rgba( var( --green-color-rgb ) )
      icon_state_on: mdi:fan
      icon_state_off: mdi:fan-off
      text_state_on: '[[[ return `${variables.state_on_count} On`; ]]]'
      text_state_off: All Off
    name: Fans
    tap_action:
      action: call-service
      service: fan.turn_off
      data:
        entity_id: '[[[ return variables.entity_id; ]]]'
  chip_detail__leak:
    template:
      - chip__room_detail
    variables:
      all_off_hide: true
      icon_color_on: rgba( var( --red-color-rgb ) )
      icon_state_on: mdi:water-alert
      icon_state_off: mdi:water-off
      text_state_on: Detected
      text_state_off: All off
    name: Water
  chip_detail__light:
    template:
      - chip__room_detail
    variables:
      all_off_hide: false
      icon_color_on: rgba( var( --yellow-color-rgb ) )
      icon_state_on: mdi:lightbulb-on
      icon_state_off: mdi:lightbulb
      text_state_on: '[[[ return `${variables.state_on_count} On`; ]]]'
      text_state_off: All Off
    name: Lights
    tap_action:
      action: toggle
  chip_detail__presense:
    template:
      - chip__room_detail
    variables:
      all_off_hide: false
      icon_state_on: mdi:motion-sensor
      icon_state_off: mdi:motion-sensor-off
      icon_color_on: rgba( var( --blue-color-rgb ) )
      text_state_on: Active
      text_state_off: Inactive
    name: Occupancy
  chip_detail__temperature:
    template:
      - chip__room_detail
    variables:
      all_off_hide: false
      state_on: 'on'
      icon_color_on: |
        [[[ 
          const theEntity = variables.entity_id;

          if( states[theEntity].state > 98 )
            return 'rgb( var( --red-color-rgb ) )';

          if( states[theEntity].state > 88 )
            return 'rgb( var( --orange-color-rgb ) )';

          if( states[theEntity].state > 78 )
            return 'rgb( var( --yellow-color-rgb ) )';

          return 'rgb( var( --blue-color-rgb ) )';
        ]]]
      text_state_on: ''
      text_state_off: ''
    layout: icon_name
    name: |
      [[[ 
        const theEntity = variables.entity_id;
        const measurement = states[theEntity].attributes.unit_of_measurement;

        return Math.round( states[theEntity].state ).toFixed( 0 ) + measurement;
      ]]]
    show_state: false
  button__close_popup:
    template:
      - button_animation__bounce
    tap_action:
      action: navigate
      navigation_path: /lovelace/home
    icon: mdi:close
    show_name: false
    styles:
      card:
        - width: 40px
        - height: 40px
        - border-radius: 100%
        - box-shadow: none
      icon:
        - width: 25px
  state_switch_tile:
    template:
      - button_data_setup
      - button_animation__bounce
      - button_theme__default
    variables:
      text_state_on: 'On'
      text_state_off: 'Off'
    layout: icon_name
    show_label: false
    show_state: true
    state_display: |
      [[[
        if( variables.state_on )
        { 
          return variables.text_state_on;

        } else if( variables.state == 'not_home' || variables.state == 'off' )
        { 
          return variables.text_state_off;

        } else
        { 
          return variables.state;

        }
      ]]]
    tap_action:
      action: none
    double_tap_action:
      action: none
    hold_action:
      action: none
    styles:
      grid:
        - grid-template-areas: |
            "i"
            "n"
            "s"
        - grid-template-columns: 100%
        - grid-auto-rows: min-content
      card:
        - padding: 15px 20px 7px 20px
      name:
        - place-self: center
        - min-height: 0
      state:
        - place-self: center
        - min-height: 0
      img_cell:
        - padding-bottom: 1vw
      icon:
        - '--state-light-on-color': rgb( var( --green-color-rgb ) )
        - '--state-light-off-color': rgb( var( --white-color-rgb ) )
  state_switch_tile__person:
    template:
      - state_switch_tile
    variables:
      img_path: '[[[ return states[entity.entity_id].attributes.entity_picture ]]]'
    icon: false
    custom_fields:
      picture: |
        [[[ 
          return ( variables.img_path ) 
            ? `<img src="${variables.img_path}" style="border-radius: 100%; width: 100%; aspect-ratio: 1;">` 
            : '';
        ]]]
    styles:
      grid:
        - grid-template-areas: |
            "picture"
            "n"
            "s"
        - grid-template-columns: 100%
        - grid-auto-rows: min-content
      img_cell:
        - display: none
      icon:
        - display: none
      custom_fields:
        picture:
          - padding-bottom: 1vw
          - filter: |
              [[[ 
                return ( variables.state_on ) 
                  ? 'grayscale( 0 )' 
                  : 'grayscale( 1 )';
              ]]]
  entity_card:
    template:
      - button_data_setup
      - button_theme__default
    variables:
      data_entity: default
      data_entity_attr: null
      data_type: default
      icon_type: default
      icon_on: '[[[ return entity.icon ]]]'
      icon_on_color: default
      icon_off: '[[[ return entity.icon ]]]'
      icon_off_color: default
      icon_unavail: '[[[ return "mdi:alert-circle-outline" ]]]'
      the_battery_level: |
        [[[
          if( variables.data_type == 'battery' )
          { 
            const dataEntity = variables.data_entity;

            if( dataEntity != 'default' && dataEntity != undefined ) 
            { 
              const dataState = ( variables.data_entity_attr !== null ) 
                ? states[dataEntity].attributes[variables.data_entity_attr]
                : states[dataEntity].state;

              if( dataState != 'unavailable' )
              { 
                let batteryLevel = Math.round( dataState / 1 );

                if( batteryLevel > 100 )
                  batteryLevel = 100;

                if( batteryLevel < 0 )
                  batteryLevel = 0;

                return batteryLevel;

              } // endif
            } // endif

            return -1;

          } // endif

          return -1;
        ]]]
    show_icon: true
    show_label: |
      [[[
        const dataEntity = variables.data_entity;
        let showLabel = false;

        if( dataEntity != 'default' && dataEntity != undefined ) 
        { 
          if( variables.data_entity_attr != false )
          { 
            showLabel = ( states[labelEntity].attributes[variables.data_entity_attr] != '' ) ? true : false;

          } else
          { 
            showLabel = ( states[dataEntity].state != '' ) ? true : false;

          } // endif
        } // endif

        return showLabel;
      ]]]
    icon: |
      [[[
        const dataEntity = variables.data_entity;
        let icon = ( variables.state_on ) ? variables.icon_on : variables.icon_off;

        if( variables.data_type == 'battery' && variables.icon_type == 'battery_level' )
        { 
          const battery_level = variables.the_battery_level;

          if( battery_level == -1 )
          { 
            icon = 'mdi:battery-unknown';

          } else if( battery_level === 0 )
          { 
            icon = 'mdi:battery-outline';

          } else if( battery_level === 100 )
          { 
            icon = 'mdi:battery';

          } else
          { 
            const levelRounded = ( Math.floor( battery_level / 10 ) * 10 );

            icon = 'mdi:battery-' + levelRounded;

          } // endif
        } // endif

        return icon;
      ]]]
    label: |
      [[[
        const dataEntity = variables.data_entity;

        if( variables.data_type == 'battery' )
        { 
          const measurement = states[dataEntity].attributes.unit_of_measurement;

          return ( variables.the_battery_level == -1 ) ? 'Battery: Unknown' : `Battery: ${variables.the_battery_level}${measurement}`;

        } else if( dataEntity !== 'default' )
        { 
          return states[dataEntity].state;

        } else
        { 
          return entity.state;

        } // endif
      ]]]
    show_state: false
    tap_action:
      action: |
        [[[
          let action = 'more-info';

          if( entity.attributes )
          { 
            if( ! entity.attributes.device_class )
            { 
              action = 'toggle';

            } else
            { 
              const toggleDevices = [
                'cover', 
                'fan', 
                'light', 
                'lock', 
                'switch'
              ];

              if( toggleDevices.indexOf( entity.attributes.device_class ) >= 0 )
                action = 'toggle';

            } // endif
          } // endif

          return action;
        ]]]
    double_tap_action:
      action: more-info
    hold_action:
      action: more-info
    styles:
      card:
        - padding: 12px
        - border-color: transparent
        - border-width: 0
        - background-color: transparent
        - '--entity--icon-color': |
            [[[
              const state = entity.state;
              let color = 'var( --grey-color-rgb )';

              if( state == 'on' )
              { 
                color = ( variables.icon_on_color !== 'default' ) ? variables.icon_on_color : 'var( --green-color-rgb )';

              } else if( state == 'off' )
              { 
                color = ( variables.icon_off_color !== 'default' ) ? variables.icon_off_color : 'var( --grey-color-rgb )';

              } // endif

              return color;
            ]]]
        - '--entity--icon-color--battery': |
            [[[
              let color = 'var( --grey-color-rgb )';

              if( variables.the_battery_level != -1 )
              { 
                const level = variables.the_battery_level;

                if( level >= 60 )
                {
                  color = 'var( --grey-color-rgb )';

                } else if( level >= 45 )
                { 
                  color = 'var( --yellow-color-rgb )';

                } else if( level >= 0 )
                {
                  color = 'var( --red-color-rgb )';

                } // endif
              } // endif

              return color;
            ]]]
        - '--custom-entity--icon-color': |
            [[[
              return ( variables.data_type == 'battery' && variables.icon_type == 'battery_level' )
                ? 'var( --entity--icon-color--battery )'
                : 'var( --entity--icon-color )';
            ]]]
      grid:
        - grid-template-columns: min-content 1fr
        - grid-auto-rows: min-content
        - grid-template-areas: '"i n" "i l"'
      img_cell:
        - '--custom-entity--icon-bg-opacity': 0.05
        - display: flex
        - align-items: center
        - justify-content: center
        - align-self: center
        - border-radius: 100%
        - margin-right: 12px
        - width: 40px
        - height: 40px
        - background-color: >-
            rgba( var( --custom-entity--icon-color ), var(
            --custom-entity--icon-bg-opacity ) )
      icon:
        - width: 20px
        - height: 20px
        - color: rgba( var( --custom-entity--icon-color ), 1.0 )
        - vertical-align: unset
      name:
        - justify-self: start
        - line-height: 20px
        - font-size: 14px
        - font-weight: 500
        - text-overflow: ellipsis
        - overflow: hidden
      label:
        - justify-self: start
        - line-height: 16px
        - font-size: 14px
        - font-weight: 400
        - text-overflow: ellipsis
        - text-transform: capitalize
        - overflow: hidden
  entity_card__leak:
    template: entity_card
    variables:
      icon_on_color: var( --red-color-rgb )
      icon_off_color: var( --blue-color-rgb )
      data_type: battery
    styles:
      card:
        - border-color: var( --divider-color )
        - border-width: 1px
      img_cell:
        - '--custom-entity--icon-bg-opacity': 0.2
  notification:
    template:
      - button_data_setup
    variables:
      key: false
      message: |
        [[[ 
          let attributes = [];
          
          if( 'attributes' in states['sensor.template_notifications'] )
            attributes = states['sensor.template_notifications'].attributes;

            return ( variables.key in attributes ) ? attributes[ variables.key ] : '';
        ]]]
      color: var( --grey-color-rgb )
      boolean: false
      state_on: |
        [[[
            const booleanOn = states[variables.boolean].state == 'on';

            return ( booleanOn && variables.message != '' ) ? true : false;
        ]]]
    layout: icon_name
    triggers_update:
      - '[[[ return variables.boolean ]]]'
    show_state: false
    show_label: false
    name: '[[[ return variables.message; ]]]'
    icon: mdi:information-slab-circle-outline
    hold_action:
      action: navigate
      navigation_path: /lovelace/page-helpers
    custom_fields:
      btnDismiss:
        card:
          type: custom:button-card
          tap_action:
            action: call-service
            service: input_boolean.toggle
            target:
              entity_id: '[[[ return variables.boolean ]]]'
          double_tap_action:
            action: none
          hold_action:
            action: none
          icon: mdi:close
          show_name: false
          styles:
            card:
              - padding: 0
              - padding-right: 12px
              - padding-left: 6px
              - border-width: 0
              - border-radius: 0
              - width: 36px
              - height: 100%
              - background-color: transparent
              - box-shadow: none
            icon:
              - padding: 0;
              - width: 20px
              - max-width: unset
              - height: 20px
              - color: rgb( var( --white-color-rgb ) )
              - font-size: 16px
    styles:
      card:
        - '--custom-notification--theme-color': '[[[ return variables.color; ]]]'
        - display: |
            [[[
              return ( variables.state_on )
                ? 'flex' 
                : 'none';
            ]]]
        - padding: 12px
        - padding-right: 0
        - border-width: 0
        - border-color: '[[[ return variables.color; ]]]'
        - margin-bottom: 2vw
        - min-height: 60px
        - background-color: rgba( var( --custom-notification--theme-color ), 0.25 )
        - cursor: default
      grid:
        - grid-auto-rows: min-content
        - grid-template-columns: 1fr min-content
        - grid-template-areas: '"n btnDismiss"'
      name:
        - justify-self: center
        - align-self: center
        - font-size: 13px
        - color: rgb( var( --primary-text ) )
        - height: 100%
        - width: 100%
        - font-size: 18px
        - font-weight: 300
        - text-align: left
        - white-space: unset
        - overflow: visible
      img_cell:
        - display: none
      icon:
        - display: none
      custom_fields:
        btnDismiss:
          - height: 100%
    card_mod:
      style: |
        button-card { height: 100%;}
  button__bdr4_desk_control:
    template:
      - button_data_setup
    variables:
      entity_height: sensor.desk_bedroom_4_desk_height
      height_min: 0
      height_max: 100
    triggers_update:
      - variables.entity_height
    show_icon: true
    styles:
      card:
        - align-items: center
        - justify-content: center
        - height: 66px
        - font-size: 14px
      icon:
        - width: 25px
        - height: auto;
        - aspect-ratio: 1
        - padding: 0
        - color: |
            [[[ 
              const currentHeight = parseFloat( states[variables.entity_height].state, 10 );
              const aboveMin = currentHeight > variables.height_min;
              const belowMax = currentHeight <= variables.height_max;

              return ( aboveMin && belowMax ) 
                ? 'var( --blue-color )'
                : 'var( --grey-color )';
            ]]]
      name:
        - margin-bottom: 5px
    tap_action:
      action: call-service
      service: button.press
      data:
        entity_id: '[[[ return variables.entity_id; ]]]'
  sidebar_content:
    show_state: false
    show_icon: false
    tap_action:
      action: navigate
      navigation_path: '#details-sidebar'
    double_tap_action:
      action: none
    hold_action:
      action: none
    name: |
      [[[
        if (entity) {
          let attributes = '';
          for (const [key, value] of Object.entries(entity.attributes)) {
            value != false ? attributes += `<p class="${key}">${value}</p>` : null;
          }
          return attributes;
        }
      ]]]
    styles:
      card:
        - '--ha-card-border-color': transparent
        - '--ha-card-border-width': 0
        - '--ha-card-border-radius': 0
        - '--ha-card-background': transparent
        - padding: 0
      name:
        - display: flex
        - flex-direction: column
        - align-items: flex-start
        - gap: 2vw
        - padding: 0
        - width: 100%
        - text-align: left
        - white-space: normal
    extra_styles: |
      p { 
        margin: 0;
        color: var( --sidebar--text-color );
        font-size: clamp( 1.5rem, 2.25vw, 2.5rem );
        line-height: 1.2;
        font-weight: 300;
        letter-spacing: 0.06vw;
      }

      p.time, 
      p.date, 
      p.greeting { 
        color: var( --sidebar--text-color--priority );
        font-size: clamp( 2rem, 3.25vw, 3rem );
      }

      p.time {
        margin-left: -0.3vw;
        font-size: clamp( 5rem, 9vw, 10rem );
        font-weight: 200;
        letter-spacing: -0.05vw;
      }

      p.time .time-colon {
        position: relative;
        top: -.09em;
      }


      @media screen and (max-width: 1200px) {
        p { font-size: clamp( 1rem, 2.75vw, 3rem );}

        p.date, 
        p.greeting { font-size: clamp( 1.5rem, 3.25vw, 3rem );}
      }


      @media screen and (max-width: 992px) {
        #container #name { 
          padding-top: 20px !important;
          padding-bottom: 20px !important;
        }

        p { 
          font-size: clamp( 1.5rem, 2.5vw, 3rem );
          line-height: 1.2em;
        }

        p.time, 
        p.date, 
        p.greeting { display: none !important;}
      }


      @media screen and (max-width: 576px) {
        p { font-size: clamp( 2.25rem, 2.25vw, 3rem );}
      }
