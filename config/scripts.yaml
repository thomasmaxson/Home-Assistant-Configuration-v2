select_resident_tab:
  alias: Select Resident Tab
  sequence:
  - action: input_select.select_option
    target: {}
    data:
      option: Tom
  - action: browser_mod.navigate
    target: {}
    data:
      path: '#Tom'
  description: From the resident dashboard page, select value and show resident content
  icon: mdi:account-group
amazon_echo_announcement:
  alias: Announce via Amazon Echo Devices
  fields:
    message:
      selector:
        text:
      name: Message
      description: The message that you want to be announced on each device.
      example: This is a test.
      required: true
  sequence:
  - variables:
      echo_kitchen_volume: '{{ state_attr( ''media_player.echo_kitchen'', ''volume_level''
        ) | float }}'
      echo_dining_room_volume: '{{ state_attr( ''media_player.echo_dot_dining_room'',
        ''volume_level'' ) | float }}'
      echo_bathroom_1_volume: '{{ state_attr( ''media_player.echo_pop_main_bathroom'',
        ''volume_level'' ) | float }}'
      echo_bedroom_1_volume: '{{ state_attr( ''media_player.echo_dot_bedroom_1'',
        ''volume_level'' ) | float }}'
      echo_bedroom_2_volume: '{{ state_attr( ''media_player.echo_dot_bedroom_2'',
        ''volume_level'' ) | float }}'
      echo_bedroom_3_volume: '{{ state_attr( ''media_player.echo_dot_bedroom_3'',
        ''volume_level'' ) | float }}'
      echo_bedroom_4_volume: '{{ state_attr( ''media_player.echo_dot_bedroom_4'',
        ''volume_level'' ) | float }}'
    alias: Store Variables
  - if:
    - alias: Ensure Household Announcements are Allowed
      condition: state
      entity_id: input_boolean.household_notify
      state: 'on'
    then:
    - parallel:
      - alias: Amazon Echo, Kitchen
        if:
        - alias: Ensure Kitchen Announcements are Allowed
          condition: state
          entity_id: input_boolean.household_notify_kitchen
          state: 'on'
        then:
        - alias: Set Volume for Announcement
          action: media_player.volume_set
          data:
            volume_level: 0.5
          target:
            entity_id: media_player.echo_kitchen
        - alias: Announce the Message
          action: notify.alexa_media_echo_kitchen
          data:
            data:
              type: announce
            message: '{{ message }}'
        - delay:
            hours: 0
            minutes: 0
            seconds: 8
            milliseconds: 0
        - alias: Reset Volume on Device
          action: media_player.volume_set
          data:
            volume_level: '{{ echo_kitchen_volume }}'
          target:
            entity_id: media_player.echo_kitchen
      - alias: Amazon Echo, Dining Room
        if:
        - alias: Ensure Dining Room Announcements are Allowed
          condition: state
          entity_id: input_boolean.household_notify_dining_room
          state: 'on'
        then:
        - alias: Set Volume for Announcement
          action: media_player.volume_set
          data:
            volume_level: 0.3
          target:
            entity_id: media_player.echo_dot_dining_room
        - alias: Announce the Message
          action: notify.alexa_media_echo_dot_dining_room
          data:
            data:
              type: announce
            message: '{{ message }}'
        - delay:
            hours: 0
            minutes: 0
            seconds: 8
            milliseconds: 0
        - alias: Reset Volume on Device
          action: media_player.volume_set
          data:
            volume_level: '{{ echo_dining_room_volume }}'
          target:
            entity_id: media_player.echo_dot_dining_room
      - alias: Amazon Echo, Main Bathroom
        if:
        - alias: Ensure Kitchen Announcements are Allowed
          condition: state
          entity_id: input_boolean.household_notify_bathroom_1
          state: 'on'
        then:
        - alias: Set Volume for Announcement
          action: media_player.volume_set
          data:
            volume_level: 0.3
          target:
            entity_id: media_player.echo_pop_main_bathroom
        - alias: Announce the Message
          action: notify.alexa_media_echo_pop_main_bathroom
          data:
            data:
              type: announce
            message: '{{ message }}'
        - delay:
            hours: 0
            minutes: 0
            seconds: 8
            milliseconds: 0
        - alias: Reset Volume on Device
          action: media_player.volume_set
          data:
            volume_level: '{{ echo_bathroom_1_volume }}'
          target:
            entity_id: media_player.echo_pop_main_bathroom
      - alias: Amazon Echo, Bedroom 1
        if:
        - alias: Ensure Kitchen Announcements are Allowed
          condition: state
          entity_id: input_boolean.household_notify_bedroom_1
          state: 'on'
        then:
        - alias: Set Volume for Announcement
          action: media_player.volume_set
          data:
            volume_level: 0.3
          target:
            entity_id: media_player.echo_dot_bedroom_1
        - alias: Announce the Message
          action: notify.alexa_media_echo_dot_bedroom_1
          data:
            data:
              type: announce
            message: '{{ message }}'
        - delay:
            hours: 0
            minutes: 0
            seconds: 8
            milliseconds: 0
        - alias: Reset Volume on Device
          action: media_player.volume_set
          data:
            volume_level: '{{ echo_bedroom_1_volume }}'
          target:
            entity_id: media_player.echo_dot_bedroom_1
      - alias: Amazon Echo, Bedroom 2
        if:
        - alias: Ensure Kitchen Announcements are Allowed
          condition: state
          entity_id: input_boolean.household_notify_bedroom_2
          state: 'on'
        then:
        - alias: Set Volume for Announcement
          action: media_player.volume_set
          data:
            volume_level: 0.3
          target:
            entity_id: media_player.echo_dot_bedroom_2
        - alias: Announce the Message
          action: notify.alexa_media_echo_dot_bedroom_2
          data:
            data:
              type: announce
            message: '{{ message }}'
        - delay:
            hours: 0
            minutes: 0
            seconds: 8
            milliseconds: 0
        - alias: Reset Volume on Device
          action: media_player.volume_set
          data:
            volume_level: '{{ echo_bedroom_2_volume }}'
          target:
            entity_id: media_player.echo_dot_bedroom_2
      - alias: Amazon Echo, Bedroom 3
        if:
        - alias: Ensure Kitchen Announcements are Allowed
          condition: state
          entity_id: input_boolean.household_notify_bedroom_3
          state: 'on'
        then:
        - alias: Set Volume for Announcement
          action: media_player.volume_set
          data:
            volume_level: 0.3
          target:
            entity_id: media_player.echo_dot_bedroom_3
        - alias: Announce the Message
          action: notify.alexa_media_echo_dot_bedroom_3
          data:
            data:
              type: announce
            message: '{{ message }}'
        - delay:
            hours: 0
            minutes: 0
            seconds: 8
            milliseconds: 0
        - alias: Reset Volume on Device
          action: media_player.volume_set
          data:
            volume_level: '{{ echo_bedroom_3_volume }}'
          target:
            entity_id: media_player.echo_dot_bedroom_3
      - alias: Amazon Echo, Bedroom 4
        if:
        - alias: Ensure Kitchen Announcements are Allowed
          condition: state
          entity_id: input_boolean.household_notify_bedroom_4
          state: 'on'
        then:
        - alias: Set Volume for Announcement
          action: media_player.volume_set
          data:
            volume_level: 0.3
          target:
            entity_id: media_player.echo_dot_bedroom_4
        - alias: Announce the Message
          action: notify.alexa_media_echo_dot_bedroom_4
          data:
            data:
              type: announce
            message: '{{ message }}'
        - delay:
            hours: 0
            minutes: 0
            seconds: 8
            milliseconds: 0
        - alias: Reset Volume on Device
          action: media_player.volume_set
          data:
            volume_level: '{{ echo_bedroom_4_volume }}'
          target:
            entity_id: media_player.echo_dot_bedroom_4
  description: ''
  icon: mdi:speaker-wireless
  mode: queued
  max: 10
push_notification_to_ios_devices:
  alias: Push Notification to iOS Devices
  variables:
    passed_title: '{{ title | default(''Home Assistant'') }}'
    passed_subtitle: '{{ subtitle | default(false) }}'
    passed_message: '{{ message | default(false) }}'
    passed_link: '{{ notification_link | default(''/lovelace/home'') }}'
    passed_actions: '{{ notification_actions | default(''none'') }}'
  sequence:
  - variables:
      helper:
        jessica:
          device: notify.mobile_app_jess_iphone
          person: person.jessica
          allow: input_boolean.app_notify_jess
          activity: input_boolean.app_notify_jess_alert_activity
          activity_door_ext: input_boolean.app_notify_jess_alert_activity_door_exterior
          activity_door_int: input_boolean.app_notify_jess_alert_activity_door_interior
          activity_location: input_boolean.app_notify_jess_alert_activity_person_location
          schedule: input_boolean.app_notify_jess_alert_schedule
          info: input_boolean.app_notify_jess_alert_info
          warning: input_boolean.app_notify_jess_alert_warning
          critical: input_boolean.app_notify_jess_alert_critical
        thomas:
          device: notify.mobile_app_tom_iphone
          person: person.thomas
          allow: input_boolean.app_notify_tom
          activity: input_boolean.app_notify_tom_alert_activity
          activity_door_ext: input_boolean.app_notify_tom_alert_activity_door_exterior
          activity_door_int: input_boolean.app_notify_tom_alert_activity_door_interior
          activity_location: input_boolean.app_notify_tom_alert_activity_person_location
          schedule: input_boolean.app_notify_tom_alert_schedule
          info: input_boolean.app_notify_tom_alert_info
          warning: input_boolean.app_notify_tom_alert_warning
          critical: input_boolean.app_notify_tom_alert_critical
  - condition: state
    entity_id: input_boolean.app_notify
    state: 'on'
  - repeat:
      for_each: '{{ send_to }}'
      sequence:
      - choose:
        - conditions:
          - condition: and
            conditions:
            - condition: template
              value_template: '{{ notification_type == ''type_critical'' }}'
            - condition: template
              value_template: '{{ is_state( helper[ repeat.item ][ ''allow'' ], ''on''
                ) }}'
            - condition: template
              value_template: '{{ is_state( helper[ repeat.item ][ ''critical'' ],
                ''on'' ) }}'
          sequence:
          - action: '{{ helper[ repeat.item ][ ''device'' ] }}'
            metadata: {}
            data:
              title: '{{ passed_title }}'
              message: '{{ passed_message }}'
              data:
                channel: '{{ notification_type }}'
                subtitle: '{{ passed_subtitle }}'
                subject: '{{ passed_subtitle }}'
                url: '{{ passed_link }}'
                clickAction: '{{ passed_link }}'
                sticky: 'false'
                actions: '{{ passed_actions }}'
                push:
                  interruption-level: '{{ interruption_level }}'
                  sound:
                    name: Update.caf
                    critical: 1
                    volume: 1
        - conditions:
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.snooze_notify_household_activity
              state: 'off'
            - condition: template
              value_template: '{{ is_state( helper[ repeat.item ][ ''allow'' ], ''on''
                ) }}'
            - condition: or
              conditions:
              - alias: 'Activity Type: Exterior Doors'
                condition: and
                conditions:
                - condition: template
                  value_template: '{{ notification_type == ''type_activity_door_exterior''
                    }}'
                - condition: template
                  value_template: '{{ is_state( helper[ repeat.item ][ ''activity''
                    ], ''on'' ) }}'
                - condition: template
                  value_template: '{{ is_state( helper[ repeat.item ][ ''activity_door_ext''
                    ], ''on'' ) }}'
              - alias: 'Activity Type: Interior Doors'
                condition: and
                conditions:
                - condition: template
                  value_template: '{{ notification_type == ''type_activity_door_interior''
                    }}'
                - condition: template
                  value_template: '{{ is_state( helper[ repeat.item ][ ''activity''
                    ], ''on'' ) }}'
                - condition: template
                  value_template: '{{ is_state( helper[ repeat.item ][ ''activity_door_int''
                    ], ''on'' ) }}'
                - condition: or
                  conditions:
                  - condition: state
                    entity_id: input_boolean.guests_home
                    state: 'on'
                  - condition: not
                    conditions:
                    - condition: template
                      value_template: '{{ states( helper[ repeat.item ][ ''person''
                        ] ) == ''home'' }}'
              - alias: 'Activity Type: Location'
                condition: and
                conditions:
                - condition: template
                  value_template: '{{ notification_type == ''type_activity_location''
                    }}'
                - condition: template
                  value_template: '{{ is_state( helper[ repeat.item ][ ''activity''
                    ], ''on'' ) }}'
                - condition: template
                  value_template: '{{ is_state( helper[ repeat.item ][ ''activity_location''
                    ], ''on'' ) }}'
              - alias: 'Activity Type: Schedule'
                condition: and
                conditions:
                - condition: template
                  value_template: '{{ notification_type == ''type_schedule'' }}'
                - condition: template
                  value_template: '{{ is_state( helper[ repeat.item ][ ''schedule''
                    ], ''on'' ) }}'
              - alias: 'Activity Type: Info'
                condition: and
                conditions:
                - condition: template
                  value_template: '{{ notification_type == ''type_info'' }}'
                - condition: template
                  value_template: '{{ is_state( helper[ repeat.item ][ ''info'' ],
                    ''on'' ) }}'
              - alias: 'Activity Type: Warning'
                condition: and
                conditions:
                - condition: template
                  value_template: '{{ notification_type == ''type_warning'' }}'
                - condition: template
                  value_template: '{{ is_state( helper[ repeat.item ][ ''warning''
                    ], ''on'' ) }}'
          sequence:
          - action: '{{ helper[ repeat.item ][ ''device'' ] }}'
            metadata: {}
            data:
              title: '{{ passed_title }}'
              message: '{{ passed_message }}'
              data:
                channel: '{{ notification_type }}'
                subtitle: '{{ passed_subtitle }}'
                subject: '{{ passed_subtitle }}'
                url: '{{ passed_link }}'
                clickAction: '{{ passed_link }}'
                sticky: 'false'
                actions: '{{ passed_actions }}'
                push:
                  interruption-level: '{{ interruption_level }}'
  fields:
    send_to:
      selector:
        select:
          multiple: true
          options:
          - label: Jessica
            value: jessica
          - label: Thomas
            value: thomas
      name: Send To
      description: Who should the notification be sent to.
      required: true
      default: all
      example: All
    notification_type:
      selector:
        select:
          mode: dropdown
          multiple: false
          options:
          - label: Activity, Exterior Door
            value: type_activity_door_exterior
          - label: Activity, Interior Door
            value: type_activity_door_interior
          - label: Activity, Location
            value: type_activity_location
          - label: Schedule
            value: type_schedule
          - label: Info
            value: type_info
          - label: Warning
            value: type_warning
          - label: Critical
            value: type_critical
      name: Notification Type
      description: The type of notification message. Helps with filtered notification
        permissions.
      required: true
      default: type_info
      example: Activity, Door
    interruption_level:
      name: Interruption Level
      description: Type of notification interruption to perform on the device.
      required: true
      default: active
      selector:
        select:
          mode: dropdown
          multiple: false
          options:
          - label: Silent (Quiet notifications without waking screen)
            value: passive
          - label: Default
            value: active
          - label: Important (Overrides Focus)
            value: time-sensitive
          - label: Critical (Overrides Focus and mute settings)
            value: critical
    title:
      name: Title
      description: The title of the notification.
      required: false
      example: Home Assistant
      selector:
        text:
    subtitle:
      name: Subtitle
      description: The subtitle of the notification.
      required: false
      selector:
        text:
    message:
      name: Message
      description: The content of the notification.
      example: This is a test.
      required: true
      selector:
        text:
    notification_link:
      name: Link
      description: Link to navigate to upon clicking the notification. (i.e. - /lovelace/home)
      selector:
        text:
    notification_actions:
      name: Actions
      description: Actionable items for notification.
      required: false
      selector:
        object: {}
  description: ''
  icon: mdi:speaker-wireless
  mode: queued
  max: 10
lock_front_door:
  alias: Lock Front Door
  sequence:
  - action: lock.lock
    metadata: {}
    data: {}
    target:
      entity_id: lock.front_door
  description: ''
unlock_front_door:
  alias: Unlock Front Door
  sequence:
  - action: lock.unlock
    target:
      entity_id:
      - lock.front_door
    data: {}
  description: ''
open_garage_door:
  alias: Open Garage Door
  sequence:
  - action: cover.open_cover
    metadata: {}
    data: {}
    target:
      entity_id: cover.garage_door
  description: ''
close_garage_door:
  alias: Close Garage Door
  sequence:
  - action: cover.close_cover
    target:
      entity_id:
      - cover.garage_door
    data: {}
  description: ''
turn_off_all_lights:
  alias: Turn Off All Lights
  sequence:
  - action: light.turn_off
    metadata: {}
    data: {}
    target:
      entity_id:
      - light.all_lights_interior
      - light.backyard_string_lights
  description: ''
