- id: '1632277288633'
  alias: 'Set Default: Theme on Load'
  description: ''
  triggers:
  - trigger: homeassistant
    event: start
  conditions: []
  actions:
  - data:
      name: casamaxson
    action: frontend.set_theme
  mode: single
- id: '1651337763691'
  alias: Remove Snapshots, Older than 7 Days
  description: ''
  triggers:
  - trigger: time
    at: 02:30:00
  conditions: []
  actions:
  - data:
      folder: /config/www/snapshots/
      time: 604800
    action: delete.files_in_folder
  mode: single
- id: '1721692858596'
  alias: Reload Alexa Media Player after HA starts
  description: Reload of one device is enough to start integration
  triggers:
  - trigger: homeassistant
    event: start
  conditions: []
  actions:
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - alias: Reload Alexa Media Player integration - Kitchen
    data: {}
    enabled: true
    target:
      entity_id: media_player.echo_kitchen
    action: homeassistant.reload_config_entry
  mode: single
- id: '1726446073490'
  alias: 3) Run at Bedtime
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.status_automations_bedtime
    to: Now
  - trigger: time
    at: 00:00:00
  - trigger: time
    at: 01:30:00
  - trigger: time
    at: 03:00:00
  - trigger: time
    at: 04:30:00
  - trigger: state
    entity_id:
    - input_button.trigger_bedtime_automations_run
  conditions:
  - condition: state
    entity_id: input_boolean.bedtime_automations_run
    state: 'on'
  actions:
  - action: input_boolean.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.sunset_automations_active
  - action: cover.set_cover_tilt_position
    target:
      entity_id:
      - cover.blinds_kitchen
      - cover.blinds_bedroom_2
      - cover.blinds_bedroom_4
    data:
      tilt_position: 100
  - if:
    - condition: state
      entity_id: binary_sensor.presence_living_room
      state: 'off'
    then:
    - action: light.turn_off
      metadata: {}
      data:
        transition: 300
      target:
        entity_id:
        - light.foyer_exterior_entryway
        - light.backyard_string_lights
        - light.living_room_corner_lamp
        - light.living_room_couch_lamp
        - light.foyer_ceiling_ledge
        - light.cabinet_upper_lights
  - if:
    - condition: state
      entity_id: input_boolean.guests_home
      state: 'on'
    then:
    - action: light.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: light.front_yard_garden_lights
    alias: If Guests are Home, Turn off Front Garden Lights
  mode: queued
  max: 10
- id: '1726488231167'
  alias: 2) Run at Sunset
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.status_automations_sunset
    to: Now
  - trigger: state
    entity_id:
    - input_button.trigger_sunset_automations_run
  conditions:
  - condition: state
    entity_id: input_boolean.sunset_automations_run
    state: 'on'
  actions:
  - action: input_boolean.turn_on
    target:
      entity_id:
      - input_boolean.sunset_automations_active
    data: {}
    alias: Flag ACTIVATE
  - action: light.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: light.front_yard_garden_lights
    alias: Front Garden Lights Turn ON
  - alias: Exterior Garage Lights Fade ON
    action: light.turn_on
    metadata: {}
    data:
      transition: 300
      brightness_pct: 100
    target:
      entity_id:
      - light.garage_exterior
  - alias: Blinds CLOSE
    action: cover.set_cover_tilt_position
    target:
      entity_id:
      - cover.blinds_kitchen
      - cover.blinds_bedroom_2
    data:
      tilt_position: 100
  - alias: If Residents OR Gouda is HOME OR Guests are VISITING
    if:
    - condition: or
      conditions:
      - condition: state
        entity_id: group.residents
        state: home
      - condition: state
        entity_id: input_boolean.status_dog_gouda
        state: 'on'
      - condition: state
        entity_id: input_boolean.guests_home
        state: 'on'
    then:
    - alias: Fade ON Foyer Upper Ledge
      action: light.turn_on
      metadata: {}
      data:
        transition: 300
        brightness_pct: 40
      target:
        entity_id:
        - light.foyer_ceiling_ledge
    - alias: If Residents are HOME OR Guests are VISITING
      if:
      - condition: or
        conditions:
        - condition: state
          entity_id: group.residents
          state: home
        - condition: state
          entity_id: input_boolean.guests_home
          state: 'on'
      then:
      - alias: Turn ON Exterior
        action: light.turn_on
        metadata: {}
        data: {}
        target:
          entity_id:
          - light.backyard_string_lights
      - alias: Fade IN Exterior
        action: light.turn_on
        metadata: {}
        data:
          transition: 300
          brightness_pct: 100
        target:
          entity_id:
          - light.foyer_exterior_entryway
      - alias: Maybe Fade IN Interior
        if:
        - condition: state
          entity_id: binary_sensor.presence_living_room
          state: 'on'
        then:
        - action: light.turn_on
          metadata: {}
          data:
            transition: 300
            brightness_pct: 40
          target:
            entity_id: light.living_room_corner_lamp
      - if:
        - condition: and
          conditions:
          - condition: not
            conditions:
            - condition: state
              entity_id: light.christmas_tree
              state: unavailable
          - condition: not
            conditions:
            - condition: state
              entity_id: light.christmas_tree
              state: unknown
        then:
        - action: light.turn_on
          metadata: {}
          data: {}
          target:
            entity_id: light.christmas_tree
        alias: Christmas Tree Turn ON
    - alias: If Guests are VISITING
      if:
      - condition: state
        entity_id: input_boolean.guests_home
        state: 'on'
      then:
      - alias: Fade IN Interior
        action: light.turn_on
        metadata: {}
        data:
          transition: 150
          brightness_pct: 10
        target:
          entity_id: light.foyer_under_table
  mode: queued
  max: 10
- id: '1726489353796'
  alias: 4) Run at Midnight
  description: ''
  triggers:
  - trigger: time
    at: 00:00:00
  - trigger: time
    at: 01:30:00
  - trigger: time
    at: 03:00:00
  - trigger: time
    at: 04:30:00
  - trigger: state
    entity_id:
    - input_button.trigger_midnight_automations_run
  conditions:
  - condition: state
    entity_id: input_boolean.midnight_automations_run
    state: 'on'
  actions:
  - alias: Garage Lights Turn OFF
    if:
    - condition: state
      entity_id: binary_sensor.presence_garage
      state: 'off'
    then:
    - action: light.turn_off
      metadata: {}
      data: {}
      target:
        entity_id:
        - light.garage_ceiling
        - light.garage_door_light
  - if:
    - condition: and
      conditions:
      - condition: not
        conditions:
        - condition: state
          entity_id: light.christmas_tree
          state: unavailable
      - condition: not
        conditions:
        - condition: state
          entity_id: light.christmas_tree
          state: unknown
    then:
    - action: light.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: light.christmas_tree
    alias: Christmas Tree Turn OFF
  mode: queued
  max: 10
- id: '1726492043983'
  alias: Manage Johan Tablet Charging Cycle
  description: ''
  triggers:
  - trigger: time_pattern
    minutes: '00'
  - trigger: time_pattern
    minutes: '30'
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.fire_tablet_battery
        below: 20
      sequence:
      - action: light.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: light.tablet_plug
      alias: Charger Turn ON (Below 20%)
    - conditions:
      - condition: numeric_state
        entity_id: sensor.fire_tablet_battery
        above: 80
      sequence:
      - action: light.turn_off
        target:
          entity_id:
          - light.tablet_plug
        data: {}
      alias: Charger Turn OFF (Above 80%)
    alias: Manage Tablet Charging State
  mode: single
- id: '1726535060323'
  alias: Living Room
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.door_living
    from: 'off'
    to: 'on'
    id: Door Did OPEN
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - trigger: state
    entity_id:
    - binary_sensor.door_living
    from: 'on'
    to: 'off'
    id: Door Did CLOSE
  - trigger: state
    entity_id:
    - binary_sensor.door_living
    to: 'off'
    id: Door Has Been CLOSED
    for:
      hours: 0
      minutes: 20
      seconds: 0
  conditions: []
  actions:
  - alias: Door OPENS, CLOSES, or has been CLOSED
    choose:
    - conditions:
      - condition: trigger
        id:
        - Door Did OPEN
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - jessica
          - thomas
          notification_type: type_activity_door_exterior
          interruption_level: active
          message: The Living Room sliding door was opened.
          notification_actions:
          - action: OPEN_APP_UNIFI_PROTECT
            title: Open Camera App
            url: unifi-protect://
            icon: sfsymbols:video
          - action: SNOOZE_HOUSEHOLD_ACTIVITY
            title: Snooze
            icon: sfsymbols:clock
      - if:
        - condition: state
          entity_id: input_boolean.living_room_automation_door_night_lights
          state: 'on'
        - condition: sun
          before: sunrise
          after: sunset
        - condition: state
          entity_id: input_boolean.sunset_automations_active
          state: 'off'
        then:
        - action: light.turn_on
          metadata: {}
          data: {}
          target:
            entity_id: light.backyard_string_lights
        alias: If Allowed Run Automations
      alias: When Door is OPENED
    - conditions:
      - condition: trigger
        id:
        - Door Did CLOSE
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - jessica
          - thomas
          notification_type: type_activity_door_exterior
          interruption_level: active
          message: The Living Room sliding door was closed.
          notification_actions:
          - action: LIGHTS_OFF_BACKYARD
            title: Turn Off Lights
            icon: sfsymbols:light.ribbon
          - action: OPEN_APP_UNIFI_PROTECT
            title: Open Camera App
            url: unifi-protect://
            icon: sfsymbols:video
          - action: SNOOZE_HOUSEHOLD_ACTIVITY
            title: Snooze
            icon: sfsymbols:clock
      alias: When Door is CLOSED
    - conditions:
      - condition: trigger
        id:
        - Door Has Been CLOSED
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.living_room_automation_door_night_lights
          state: 'on'
        - condition: sun
          before: sunrise
          after: sunset
        - condition: state
          entity_id: input_boolean.sunset_automations_active
          state: 'off'
        then:
        - action: light.turn_off
          target:
            entity_id:
            - light.backyard_string_lights
          data: {}
      alias: When Door Has Been CLOSED
  mode: single
- id: '1726535481170'
  alias: Garage
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.door_garage_interior
    from: 'off'
    to: 'on'
    id: Interior Door did OPEN
    trigger: state
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - entity_id:
    - binary_sensor.door_garage_interior
    from: 'on'
    to: 'off'
    id: Interior Door did CLOSE
    trigger: state
  - entity_id:
    - binary_sensor.door_garage_interior
    to: 'off'
    id: Interior Door has been CLOSED
    for:
      hours: 0
      minutes: 5
      seconds: 0
    trigger: state
  - minutes: '00'
    id: 0th minute of the hour
    trigger: time_pattern
  - minutes: '30'
    id: 30th minute of the hour
    trigger: time_pattern
  - entity_id:
    - fan.custom_garage_fan
    from: 'off'
    to: 'on'
    for:
      hours: 1
      minutes: 30
      seconds: 0
    id: Garage Fan Left ON
    trigger: state
  conditions: []
  actions:
  - alias: Room Activity Actions
    choose:
    - conditions:
      - condition: trigger
        id:
        - Interior Door did OPEN
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - jessica
          - thomas
          notification_type: type_activity_door_exterior
          interruption_level: active
          message: The Garage interior door was opened.
          notification_actions:
          - action: OPEN_APP_UNIFI_PROTECT
            title: Open Camera App
            url: unifi-protect://
            icon: sfsymbols:video
          - action: SNOOZE_HOUSEHOLD_ACTIVITY
            title: Snooze
            icon: sfsymbols:clock
      - alias: If Allowed Run Automations
        if:
        - condition: state
          entity_id: cover.garage_door
          state: closed
        then:
        - action: light.turn_on
          metadata: {}
          data: {}
          target:
            entity_id:
            - light.garage_ceiling
            - light.garage_door_light
      alias: When Interior Door is OPENED
    - conditions:
      - condition: trigger
        id:
        - Interior Door did CLOSE
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - jessica
          - thomas
          notification_type: type_activity_door_exterior
          interruption_level: active
          message: The Garage interior door was closed.
          notification_actions:
          - action: OPEN_APP_UNIFI_PROTECT
            title: Open Camera App
            url: unifi-protect://
            icon: sfsymbols:video
          - action: SNOOZE_HOUSEHOLD_ACTIVITY
            title: Snooze
            icon: sfsymbols:clock
      - alias: If Allowed Run Automations
        if:
        - condition: and
          conditions:
          - condition: state
            entity_id: cover.garage_door
            state: closed
          - condition: state
            entity_id: binary_sensor.presence_garage
            state: 'off'
        then:
        - action: light.turn_off
          metadata: {}
          data: {}
          target:
            entity_id:
            - light.garage_ceiling
            - light.garage_door_light
      alias: When Interior Door is CLOSED
    - conditions:
      - condition: trigger
        id:
        - Interior Door has been CLOSED
      sequence:
      - alias: If Allowed Run Automations
        if:
        - condition: and
          conditions:
          - condition: state
            entity_id: cover.garage_door
            state: closed
          - condition: state
            entity_id: binary_sensor.presence_garage
            state: 'off'
        then:
        - action: light.turn_off
          metadata: {}
          data: {}
          target:
            entity_id:
            - light.garage_ceiling
            - light.garage_door_light
      alias: When Interior Door Has Been CLOSED
    - conditions:
      - condition: trigger
        id:
        - 0th minute of the hour
        - 30th minute of the hour
      sequence:
      - if:
        - condition: sun
          after: sunset
          before: sunrise
        - condition: state
          entity_id: cover.garage_door
          state: open
        then:
        - alias: If Allowed Send Notification
          if:
          - condition: state
            entity_id: input_boolean.snooze_notify_household_activity
            state: 'off'
          then:
          - action: script.push_notification_to_ios_devices
            metadata: {}
            data:
              send_to:
              - jessica
              - thomas
              notification_type: type_warning
              interruption_level: active
              message: Oops! The Garage door was left open.
              notification_actions:
              - action: CLOSE_GARAGE_DOOR
                title: Close Garage Door
                icon: sfsymbols:door.garage.closed
              - action: SNOOZE_TODAY_GARAGE_DOOR
                title: Snooze
                icon: sfsymbols:clock
      alias: When Cover Door Has Been OPEN
    - conditions:
      - condition: trigger
        id:
        - Garage Fan Left ON
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - jessica
          - thomas
          notification_type: type_warning
          interruption_level: active
          message: The Garage fan was left on.
          notification_actions:
          - action: FAN_OFF_GARAGE
            title: Turn Off
            icon: sfsymbols:fanblades.slash.fan
      alias: When Garage Fan Left ON
  mode: queued
  max: 10
- id: '1726536282569'
  alias: Recording Mode, Exterior Enable/Disable
  description: ''
  triggers:
  - entity_id:
    - input_boolean.enable_exterior_camera_recording
    from: 'off'
    to: 'on'
    id: Recording ENABLED
    trigger: state
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - entity_id:
    - input_boolean.enable_exterior_camera_recording
    from: 'on'
    to: 'off'
    id: Recording DISABLED
    trigger: state
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Recording ENABLED
      sequence:
      - action: select.select_option
        metadata: {}
        data:
          option: Always
        target:
          entity_id:
          - select.camera_ext_backyard_northeast_recording_mode
          - select.camera_ext_backyard_southeast_recording_mode
          - select.camera_ext_doorbell_recording_mode
          - select.camera_ext_front_yard_northeast_recording_mode
          - select.camera_ext_front_yard_southeast_recording_mode
          - select.camera_ext_side_yard_north_east_recording_mode
          - select.camera_ext_side_yard_north_west_recording_mode
          - select.camera_ext_side_yard_south_east_recording_mode
      alias: Recording ENABLE
    - conditions:
      - condition: trigger
        id:
        - Recording DISABLED
      sequence:
      - action: select.select_option
        metadata: {}
        data:
          option: Never
        target:
          entity_id:
          - select.camera_ext_backyard_northeast_recording_mode
          - select.camera_ext_backyard_southeast_recording_mode
          - select.camera_ext_doorbell_recording_mode
          - select.camera_ext_front_yard_northeast_recording_mode
          - select.camera_ext_front_yard_southeast_recording_mode
          - select.camera_ext_side_yard_north_east_recording_mode
          - select.camera_ext_side_yard_north_west_recording_mode
          - select.camera_ext_side_yard_south_east_recording_mode
      alias: Recording DISABLE
  mode: single
- id: '1726536945550'
  alias: Recording Mode, Motion Enable/Disable
  description: ''
  triggers:
  - entity_id:
    - input_boolean.enable_motion_camera_recording
    from: 'off'
    to: 'on'
    id: Recording ENABLED
    trigger: state
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - entity_id:
    - input_boolean.enable_motion_camera_recording
    from: 'on'
    to: 'off'
    id: Recording DISABLED
    trigger: state
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Recording ENABLED
      sequence:
      - action: select.select_option
        metadata: {}
        data:
          option: Always
        target:
          entity_id: select.camera_ext_garage_recording_mode
      alias: Recording ENABLE
    - conditions:
      - condition: trigger
        id:
        - Recording DISABLED
      sequence:
      - action: select.select_option
        metadata: {}
        data:
          option: Detections
        target:
          entity_id: select.camera_ext_garage_recording_mode
      alias: Recording DISABLE
  mode: single
- id: '1726537184366'
  alias: Recording Mode, Interior Enable/Disable
  description: ''
  triggers:
  - entity_id:
    - input_boolean.enable_interior_camera_recording
    from: 'off'
    to: 'on'
    id: Recording ENABLED
    trigger: state
  - entity_id:
    - input_boolean.enable_interior_camera_recording
    from: 'on'
    to: 'off'
    id: Recording DISABLED
    trigger: state
    for:
      hours: 0
      minutes: 0
      seconds: 0
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Recording ENABLED
      sequence:
      - action: select.select_option
        metadata: {}
        data:
          option: Always
        target:
          entity_id:
          - select.camera_int_foyer_entry_recording_mode
          - select.camera_int_dining_room_recording_mode
          - select.camera_int_kitchen_recording_mode
          - select.camera_int_living_room_recording_mode
          - select.camera_int_bdr1_recording_mode
          - select.camera_int_bdr3_recording_mode
          - select.camera_int_bdr4_recording_mode
      alias: Recording ENABLE
    - conditions:
      - condition: trigger
        id:
        - Recording DISABLED
      sequence:
      - action: select.select_option
        metadata: {}
        data:
          option: Never
        target:
          entity_id:
          - select.camera_int_foyer_entry_recording_mode
          - select.camera_int_dining_room_recording_mode
          - select.camera_int_kitchen_recording_mode
          - select.camera_int_living_room_recording_mode
          - select.camera_int_bdr1_recording_mode
          - select.camera_int_bdr3_recording_mode
          - select.camera_int_bdr4_recording_mode
      alias: Recording DISABLE
  mode: single
- id: '1726537434214'
  alias: Privacy Mode, Interior Enable/Disable
  description: ''
  triggers:
  - entity_id:
    - input_boolean.camera_int_privacy_mode
    from: 'off'
    to: 'on'
    id: Privacy ENABLED
    trigger: state
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - entity_id:
    - input_boolean.camera_int_privacy_mode
    from: 'on'
    to: 'off'
    id: Privacy DISABLED
    trigger: state
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Privacy ENABLED
      sequence:
      - action: switch.turn_on
        target:
          entity_id:
          - switch.camera_int_bdr1_privacy_mode
          - switch.camera_int_bdr3_privacy_mode
          - switch.camera_int_bdr4_privacy_mode
        data: {}
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - action: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.enable_interior_camera_recording
      alias: Recording ENABLE
    - conditions:
      - condition: trigger
        id:
        - Privacy DISABLED
      sequence:
      - action: switch.turn_off
        target:
          entity_id:
          - switch.camera_int_bdr1_privacy_mode
          - switch.camera_int_bdr3_privacy_mode
          - switch.camera_int_bdr4_privacy_mode
        data: {}
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.enable_interior_camera_recording
      alias: Recording DISABLE
  mode: single
- id: '1726537916764'
  alias: Resident Enters/Leaves Home or Neighborhood
  description: ''
  triggers:
  - trigger: zone
    entity_id: person.jessica
    zone: zone.home
    event: leave
    id: Home LEFT by Jessica
  - trigger: zone
    entity_id: person.jessica
    zone: zone.home
    event: enter
    id: Home ENTERED by Jessica
  - trigger: zone
    entity_id: person.jessica
    zone: zone.regency_lakes
    event: enter
    id: Regency Lakes ENTERED by Jessica
  - trigger: zone
    entity_id: person.thomas
    zone: zone.home
    event: leave
    id: Home LEFT by Thomas
  - trigger: zone
    entity_id: person.thomas
    zone: zone.home
    event: enter
    id: Home ENTERED by Thomas
  - trigger: zone
    entity_id: person.thomas
    zone: zone.regency_lakes
    event: enter
    id: Regency Lakes ENTERED by Thomas
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - alias: Thomas LEAVES
          condition: and
          conditions:
          - condition: trigger
            id:
            - Home LEFT by Thomas
          - condition: not
            conditions:
            - condition: state
              entity_id: person.jessica
              state: home
        - alias: Jessica LEAVES
          condition: and
          conditions:
          - condition: trigger
            id:
            - Home LEFT by Jessica
          - condition: not
            conditions:
            - condition: state
              entity_id: person.thomas
              state: home
      sequence:
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id:
          - input_boolean.enable_interior_camera_recording
          - input_boolean.enable_motion_camera_recording
      - action: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.camera_int_privacy_mode
      alias: Person LEAVES
    - conditions:
      - condition: or
        conditions:
        - condition: and
          conditions:
          - condition: trigger
            id:
            - Home ENTERED by Jessica
            - Regency Lakes ENTERED by Jessica
          - condition: not
            conditions:
            - condition: state
              entity_id: person.thomas
              state: home
          alias: Jessica ENTERS
        - alias: Thomas ENTERS
          condition: and
          conditions:
          - condition: trigger
            id:
            - Home ENTERED by Thomas
            - Regency Lakes ENTERED by Thomas
          - condition: not
            conditions:
            - condition: state
              entity_id: person.jessica
              state: home
      sequence:
      - action: input_boolean.turn_off
        target:
          entity_id:
          - input_boolean.enable_interior_camera_recording
          - input_boolean.enable_motion_camera_recording
        data: {}
      - action: input_boolean.turn_on
        target:
          entity_id:
          - input_boolean.camera_int_privacy_mode
        data: {}
      alias: Person ENTERS
  mode: single
- id: '1726566073863'
  alias: Garage Door Opens/Closes
  description: ''
  triggers:
  - entity_id:
    - cover.garage_door
    to: opening
    trigger: state
    id: Garage Door is OPENING
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - entity_id:
    - cover.garage_door
    to: closed
    trigger: state
    id: Garage Door is CLOSED
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - entity_id:
    - cover.garage_door
    to: closed
    trigger: state
    id: Garage Door is CLOSED, Delayed
    for:
      hours: 0
      minutes: 2
      seconds: 0
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Garage Door is OPENING
      sequence:
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.enable_motion_camera_recording
    - conditions:
      - condition: trigger
        id:
        - Garage Door is CLOSED, Delayed
      sequence:
      - action: input_boolean.turn_off
        target:
          entity_id:
          - input_boolean.enable_motion_camera_recording
        data: {}
  mode: single
- id: '1726566319798'
  alias: Laundry Room
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.door_laundry
    from: 'off'
    to: 'on'
    id: Door did OPEN
    trigger: state
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - entity_id:
    - binary_sensor.door_laundry
    to: 'on'
    id: Door has been OPEN for 2 min
    for:
      hours: 0
      minutes: 2
      seconds: 0
    trigger: state
  - entity_id:
    - binary_sensor.door_laundry
    to: 'on'
    id: Door has been OPEN for 10 min
    for:
      hours: 0
      minutes: 10
      seconds: 0
    trigger: state
  - entity_id:
    - binary_sensor.door_laundry
    from: 'on'
    to: 'off'
    id: Door did CLOSE
    for:
      hours: 0
      minutes: 0
      seconds: 10
    trigger: state
  - entity_id:
    - binary_sensor.motion_laundry_room
    from: 'off'
    to: 'on'
    id: Presence was DETECTED
    trigger: state
  - entity_id:
    - binary_sensor.motion_laundry_room
    from: 'on'
    to: 'off'
    id: Presence was CLEARED
    trigger: state
  conditions: []
  actions:
  - alias: Room Activity Actions
    choose:
    - conditions:
      - condition: trigger
        id:
        - Door did OPEN
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - jessica
          - thomas
          notification_type: type_activity_door_interior
          interruption_level: active
          message: The Laundry Room door was opened.
          notification_actions:
          - action: OPEN_APP_UNIFI_PROTECT
            title: Open Camera App
            url: unifi-protect://
            icon: sfsymbols:video
          - action: SNOOZE_HOUSEHOLD_ACTIVITY
            title: Snooze
            icon: sfsymbols:clock
      - alias: If Allowed Run Automations
        if:
        - condition: state
          entity_id: input_boolean.laundry_room_automation_allow_occupancy
          state: 'on'
        then:
        - action: light.turn_on
          metadata: {}
          data:
            brightness_pct: 100
          target:
            entity_id: light.laundry_ceiling_light
      alias: When Door is OPENED
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - Door has been OPEN for 2 min
        - condition: state
          entity_id: input_boolean.laundry_room_automation_allow_occupancy
          state: 'on'
        - condition: state
          entity_id: binary_sensor.door_garage_interior
          state: 'off'
      sequence:
      - action: light.turn_on
        target:
          entity_id:
          - light.laundry_ceiling_light
        data: {}
      alias: When Door Has Been OPEN for 2 min
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - Door has been OPEN for 10 min
        - condition: state
          entity_id: input_boolean.laundry_room_automation_allow_occupancy
          state: 'on'
        - condition: state
          entity_id: binary_sensor.door_garage_interior
          state: 'off'
      sequence:
      - action: light.turn_off
        target:
          entity_id:
          - light.laundry_ceiling_light
        data: {}
      alias: When Door Has Been OPEN for 10 min
    - conditions:
      - condition: trigger
        id:
        - Door did CLOSE
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - jessica
          - thomas
          notification_type: type_activity_door_interior
          interruption_level: active
          message: The Laundry Room door was closed.
          notification_actions:
          - action: OPEN_APP_UNIFI_PROTECT
            title: Open Camera App
            url: unifi-protect://
            icon: sfsymbols:video
          - action: SNOOZE_HOUSEHOLD_ACTIVITY
            title: Snooze
            icon: sfsymbols:clock
      - if:
        - condition: state
          entity_id: input_boolean.laundry_room_automation_allow_occupancy
          state: 'on'
        - condition: state
          entity_id: binary_sensor.door_garage_interior
          state: 'off'
        then:
        - action: light.turn_off
          metadata: {}
          data: {}
          target:
            entity_id: light.laundry_ceiling_light
      alias: When Door is CLOSED
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - Presence was DETECTED
        - condition: state
          entity_id: input_boolean.laundry_room_automation_allow_occupancy
          state: 'on'
        - condition: or
          conditions:
          - condition: state
            entity_id: binary_sensor.door_laundry
            state: 'on'
          - condition: state
            entity_id: binary_sensor.door_garage_interior
            state: 'on'
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          brightness_pct: 100
        target:
          entity_id: light.laundry_ceiling_light
      alias: When Motion DETECTED
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - Presence was CLEARED
        - condition: state
          entity_id: input_boolean.laundry_room_automation_allow_occupancy
          state: 'on'
        - condition: state
          entity_id: binary_sensor.door_garage_interior
          state: 'off'
      sequence:
      - action: light.turn_off
        target:
          entity_id:
          - light.laundry_ceiling_light
        data: {}
      alias: When Motion CLEARED
  mode: queued
  max: 10
- id: '1726959593051'
  alias: 1) Run at Sunrise
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.status_automations_sunrise
    to: Now
  - entity_id:
    - input_button.trigger_sunrise_automations_run
    trigger: state
  conditions:
  - condition: state
    entity_id: input_boolean.sunrise_automations_run
    state: 'on'
  actions:
  - parallel:
    - alias: Lights Turn OFF
      action: light.turn_off
      data: {}
      target:
        entity_id:
        - light.garage_exterior
        - light.backyard_string_lights
        - light.foyer_exterior_entryway
        - light.foyer_ceiling_ledge
        - light.foyer_under_table
        - light.cabinet_upper_lights
        - light.front_yard_garden_lights
    - alias: If Residents are HOME or Guests are HOME
      if:
      - condition: state
        entity_id: sensor.any_resident_home
        state: Home
        alias: If Any Residents are Home
      then:
      - alias: OPEN Kitchen Blinds
        action: cover.open_cover_tilt
        target:
          entity_id:
          - cover.blinds_kitchen
        data: {}
      - alias: OPEN Bedroom 4 Blinds
        if:
        - condition: and
          conditions:
          - condition: state
            entity_id: input_boolean.bedroom_4_automation_allow_occupancy
            state: 'on'
          - condition: state
            entity_id: binary_sensor.door_bedroom_4
            state: 'on'
        then:
        - action: cover.open_cover_tilt
          target:
            entity_id:
            - cover.blinds_bedroom_4
          data: {}
    - alias: If Residents are HOME and Guests are NOT HOME
      if:
      - condition: and
        conditions:
        - alias: If Residents are HOME and Guests are NOT HOME
          condition: and
          conditions:
          - condition: state
            entity_id: group.residents
            state: home
            alias: If Residents are Home
          - condition: state
            entity_id: input_boolean.guests_home
            state: 'off'
            alias: If Guests are Not Home
        - condition: state
          entity_id: input_boolean.bedroom_2_automation_allow_occupancy
          state: 'on'
      then:
      - alias: OPEN Bedroom 2 Blinds
        action: cover.open_cover_tilt
        data: {}
        target:
          entity_id: cover.blinds_bedroom_2
    - alias: Flag ACTIVATE
      action: input_boolean.turn_on
      data: {}
      target:
        entity_id: input_boolean.sunrise_automations_run
  mode: queued
  max: 10
- id: '1727015013289'
  alias: Garage, Door - Exterior
  description: Control garage door via a Aqara Mini Switch remote.
  use_blueprint:
    path: maxson/remote_aqara_mini_switch.yaml
    input:
      remote: 47d5b025f28a07acda4690b87b00c9ed
      single_press_action:
      - action: cover.open_cover
        metadata: {}
        data: {}
        target:
          entity_id: cover.garage_door
      double_press_action:
      - action: cover.close_cover
        target:
          entity_id:
          - cover.garage_door
        data: {}
      auto_mode: queued
      long_press_action:
      - action: cover.toggle_cover_tilt
        target:
          entity_id: cover.blinds_kitchen
        data: {}
- id: '1727113582845'
  alias: Bedroom 1, Light - Primary
  description: Control primary lights in the main bedroom via a IKEA STRYBAR 4 button
    remote.
  use_blueprint:
    path: maxson/remote_ikea_styrbar_4_button.yaml
    input:
      remote: 6b9849701fc9f47c707d23e72e72716a
      light: light.bedroom_1_group_occupancy_lights
      brightness_step: 10
      auto_mode: queued
      force_brightness: false
- id: '1727115559199'
  alias: Bedroom 4, Light - Primary
  description: Control primary lights in Tom's office via a IKEA TRADFRI 5 button
    remote.
  use_blueprint:
    path: maxson/remote_ikea_tradfri_5_button.yaml
    input:
      remote: 61a2efe93ec921eb2ccfbd6f166e2aef
      light: light.bedroom_4_group_occupancy_lights
      brightness_step: 10
      config_mode: single
- id: '1727117077347'
  alias: Living Room, Light - Primary
  description: Control primary lights in the living room via a IKEA TRADFRI 2 button
    remote.
  use_blueprint:
    path: maxson/remote_ikea_tradfri_2_button.yaml
    input:
      remote: 773fcd7dc85227c001175b0744486dfa
      light: light.living_room_corner_lamp
      brightness_step: 10
      auto_mode: queued
      brightness: 40
      force_brightness: true
- id: '1727117139279'
  alias: Garage, Wall Fan
  description: Control the fan in the garage via a IKEA TRADFRI 2 button remote.
  use_blueprint:
    path: maxson/remote_ikea_tradfri_2_button.yaml
    input:
      light: light.garage_fan
      remote: 5c4c46dcb1d52a61015e2f96a4b93f48
      brightness_step: 10
      force_brightness: true
      brightness: 100
      auto_mode: queued
- id: '1727129555803'
  alias: Bedroom 1, Closet Hallway
  description: ''
  triggers:
  - entity_id:
    - light.closet_hallway_ceiling_light
    from: 'off'
    to: 'on'
    trigger: state
    for:
      hours: 0
      minutes: 3
      seconds: 0
  conditions: []
  actions:
  - action: light.turn_on
    metadata: {}
    data:
      brightness_pct: 60
    target:
      entity_id: light.closet_hallway_ceiling_light
  mode: single
- id: '1727129683083'
  alias: Bedroom 4, Desk Lamp
  description: ''
  triggers:
  - entity_id:
    - light.bedroom_4_desk_lamp
    from: 'off'
    to: 'on'
    trigger: state
    for:
      hours: 0
      minutes: 0
      seconds: 0
  conditions: []
  actions:
  - action: light.turn_on
    metadata: {}
    data:
      brightness_pct: 40
    target:
      entity_id: light.bedroom_4_desk_lamp
  mode: single
- id: '1727129921085'
  alias: Bedroom 4, Lightstrip
  description: ''
  triggers:
  - entity_id:
    - light.bedroom_4_lightstrip
    from: 'off'
    to: 'on'
    trigger: state
    for:
      hours: 0
      minutes: 0
      seconds: 0
  conditions: []
  actions:
  - action: light.turn_on
    metadata: {}
    data:
      brightness_pct: 40
    target:
      entity_id: light.bedroom_4_lightstrip
  mode: single
- id: '1727279383231'
  alias: Reset Garage GFCI Outlet
  description: ''
  triggers:
  - entity_id:
    - light.garage_fan
    to: unavailable
    for:
      hours: 0
      minutes: 10
      seconds: 0
    trigger: state
  conditions: []
  actions:
  - repeat:
      sequence:
      - action: script.amazon_echo_announcement
        metadata: {}
        data:
          message: Warning. The garage GFCI outlet needs to be reset.
          send_to:
          - dining_room
          - bedroom_1
          - bedroom_2
          - bedroom_3
          - bedroom_4
          - kitchen
          - bathroom_1
      - delay:
          hours: 1
          minutes: 0
          seconds: 0
          milliseconds: 0
      until:
      - condition: not
        conditions:
        - condition: state
          entity_id: light.garage_fan
          state: unavailable
  mode: queued
  max: 10
- id: '1727361036902'
  alias: Foyer
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.door_front_primary
    from: 'off'
    to: 'on'
    id: Primary Door Did OPEN
    trigger: state
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - entity_id:
    - binary_sensor.door_front_primary
    from: 'on'
    to: 'off'
    id: Primary Door Did CLOSE
    trigger: state
  - entity_id:
    - binary_sensor.door_front_primary
    to: 'off'
    id: Primary Door Has Been CLOSED
    for:
      hours: 0
      minutes: 10
      seconds: 0
    from: 'on'
    trigger: state
  - entity_id:
    - binary_sensor.door_front_secondary
    from: 'off'
    to: 'on'
    id: Secondary Door Did OPEN
    trigger: state
  - entity_id:
    - binary_sensor.door_front_secondary
    from: 'on'
    to: 'off'
    id: Secondary Door Did CLOSE
    trigger: state
  - minutes: '00'
    id: Door Lock has been UNLOCKED - On the hour
    trigger: time_pattern
  - minutes: '30'
    id: Door Lock has been UNLOCKED - 30 min past the hour
    trigger: time_pattern
  conditions: []
  actions:
  - alias: Room Activity Actions
    choose:
    - conditions:
      - condition: trigger
        id:
        - Primary Door Did OPEN
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - jessica
          - thomas
          notification_type: type_activity_door_exterior
          message: The primary front door was opened.
          notification_actions:
          - action: OPEN_APP_UNIFI_PROTECT
            title: Open Camera App
            url: unifi-protect://
            icon: sfsymbols:video
          - action: SNOOZE_HOUSEHOLD_ACTIVITY
            title: Snooze
            icon: sfsymbols:clock
          interruption_level: active
      - if:
        - condition: state
          entity_id: input_boolean.foyer_automation_door_night_lights
          state: 'on'
        - condition: sun
          before: sunrise
          after: sunset
        - condition: state
          entity_id: input_boolean.sunset_automations_active
          state: 'off'
        then:
        - action: light.turn_on
          metadata: {}
          data: {}
          target:
            entity_id: light.foyer_exterior_entryway
        alias: If Allowed Run Automations
      alias: When Primary Door is OPENED
    - conditions:
      - condition: trigger
        id:
        - Primary Door Did CLOSE
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - jessica
          - thomas
          message: The primary front door was closed.
          notification_type: type_activity_door_exterior
          interruption_level: active
          notification_actions:
          - action: OPEN_APP_UNIFI_PROTECT
            title: Open Camera App
            url: unifi-protect://
            icon: sfsymbols:video
          - action: SNOOZE_HOUSEHOLD_ACTIVITY
            title: Snooze
            icon: sfsymbols:clock
      alias: When Primary Door is CLOSED
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - Primary Door Has Been CLOSED
        - condition: state
          entity_id: input_boolean.foyer_automation_door_night_lights
          state: 'on'
        - condition: sun
          before: sunrise
          after: sunset
        - condition: state
          entity_id: input_boolean.sunset_automations_active
          state: 'off'
      sequence:
      - action: light.turn_off
        data: {}
        target:
          entity_id: light.foyer_exterior_entryway
      alias: When Primary Door Has Been CLOSED
    - conditions:
      - condition: trigger
        id:
        - Secondary Door Did OPEN
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - jessica
          - thomas
          message: The secondary front door was opened.
          notification_type: type_activity_door_exterior
          notification_actions:
          - action: OPEN_APP_UNIFI_PROTECT
            title: Open Camera App
            url: unifi-protect://
            icon: sfsymbols:video
          - action: SNOOZE_HOUSEHOLD_ACTIVITY
            title: Snooze
            icon: sfsymbols:clock
          interruption_level: active
      alias: When Secondary Door is OPENED
    - conditions:
      - condition: trigger
        id:
        - Secondary Door Did CLOSE
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - jessica
          - thomas
          message: The secondary front door was closed.
          notification_type: type_activity_door_exterior
          notification_actions:
          - action: OPEN_APP_UNIFI_PROTECT
            title: Open Camera App
            url: unifi-protect://
            icon: sfsymbols:video
          - action: SNOOZE_HOUSEHOLD_ACTIVITY
            title: Snooze
            icon: sfsymbols:clock
          interruption_level: active
      alias: When Secondary Door is CLOSED
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - Door Lock has been UNLOCKED - On the hour
          - Door Lock has been UNLOCKED - 30 min past the hour
        - condition: state
          entity_id: lock.front_door
          state: unlocked
        - condition: state
          entity_id: input_boolean.snooze_notify_front_door_unlocked
          state: 'off'
        - condition: and
          conditions:
          - condition: sun
            after: sunset
          - condition: time
            before: 00:00:00
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - jessica
          - thomas
          notification_type: type_warning
          interruption_level: active
          subtitle: Warning
          message: The front door is unlocked.
          notification_actions:
          - action: LOCK_FRONT_DOOR
            title: Lock Front Door
            icon: sfsymbols:lock
          - action: SNOOZE_TODAY_FRONT_DOOR
            title: Snooze
            icon: sfsymbols:clock
      alias: When Front Door Was Left UNLOCKED
  mode: queued
  max: 10
- id: '1727460698990'
  alias: Bedroom 2, Door Open/Close
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.door_bedroom_2
    from: 'off'
    to: 'on'
    id: Door Did OPEN
    trigger: state
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - entity_id:
    - binary_sensor.door_bedroom_2
    from: 'on'
    to: 'off'
    id: Door Did CLOSE
    trigger: state
  conditions: []
  actions:
  - alias: Room Activity Actions
    choose:
    - conditions:
      - condition: trigger
        id:
        - Door Did OPEN
        enabled: true
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - jessica
          - thomas
          message: The Guest Bedroom door was opened.
          notification_type: type_activity_door_interior
          interruption_level: active
          notification_actions:
          - action: OPEN_APP_UNIFI_PROTECT
            title: Open Camera App
            url: unifi-protect://
            icon: sfsymbols:video
          - action: SNOOZE_HOUSEHOLD_ACTIVITY
            title: Snooze
            icon: sfsymbols:clock
      - alias: If Allowed Run Automations
        if:
        - condition: state
          entity_id: input_boolean.bedroom_2_automation_allow_occupancy
          state: 'on'
        then:
        - alias: Turn ON, Immediately
          action: light.turn_on
          metadata: {}
          data: {}
          target:
            entity_id: light.bedroom_2_group_occupancy_lights
      alias: When Door is OPENED
    - conditions:
      - condition: trigger
        id:
        - Door Did CLOSE
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - jessica
          - thomas
          message: The Guest Bedroom door was closed.
          notification_type: type_activity_door_interior
          interruption_level: active
          notification_actions:
          - action: OPEN_APP_UNIFI_PROTECT
            title: Open Camera App
            url: unifi-protect://
            icon: sfsymbols:video
          - action: SNOOZE_HOUSEHOLD_ACTIVITY
            title: Snooze
            icon: sfsymbols:clock
      - alias: If Allowed Run Automations
        if:
        - condition: state
          entity_id: input_boolean.bedroom_2_automation_allow_occupancy
          state: 'on'
        then:
        - alias: Turn OFF, Immediately
          action: light.turn_off
          data: {}
          target:
            entity_id: light.bedroom_2_group_lights_all
        enabled: true
      alias: When Door is CLOSED
  mode: restart
  max: 10
- id: '1727465525056'
  alias: Bedroom 1, Door Open/Close
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.door_bedroom_1
    from: 'off'
    to: 'on'
    id: Door Did OPEN
    trigger: state
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - entity_id:
    - binary_sensor.door_bedroom_1
    from: 'on'
    to: 'off'
    id: Door Did CLOSE
    trigger: state
  conditions: []
  actions:
  - alias: Room Activity Actions
    choose:
    - conditions:
      - condition: trigger
        id:
        - Door Did OPEN
        enabled: true
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - jessica
          - thomas
          message: The Main Bedroom door was opened.
          notification_type: type_activity_door_interior
          interruption_level: active
          notification_actions:
          - action: OPEN_APP_UNIFI_PROTECT
            title: Open Camera App
            url: unifi-protect://
            icon: sfsymbols:video
          - action: SNOOZE_HOUSEHOLD_ACTIVITY
            title: Snooze
            icon: sfsymbols:clock
      - alias: If Allowed Run Automations
        if:
        - condition: state
          entity_id: input_boolean.bedroom_1_automation_allow_occupancy
          state: 'on'
        then:
        - action: light.turn_on
          metadata: {}
          data: {}
          target:
            entity_id: light.bedroom_1_group_occupancy_lights
          alias: Turn ON, Immediately
      alias: When Door is OPENED
    - conditions:
      - condition: trigger
        id:
        - Door Did CLOSE
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - jessica
          - thomas
          message: The Main Bedroom door was closed.
          notification_type: type_activity_door_interior
          interruption_level: active
          notification_actions:
          - action: OPEN_APP_UNIFI_PROTECT
            title: Open Camera App
            url: unifi-protect://
            icon: sfsymbols:video
          - action: SNOOZE_HOUSEHOLD_ACTIVITY
            title: Snooze
            icon: sfsymbols:clock
      - alias: If Allowed Run Automations
        if:
        - condition: state
          entity_id: input_boolean.bedroom_1_automation_allow_occupancy
          state: 'on'
        then:
        - action: light.turn_off
          target:
            entity_id:
            - light.bedroom_1_group_lights_all
          data: {}
          alias: Turn OFF, Immediately
        enabled: true
      alias: When Door is CLOSED
  mode: queued
  max: 10
- id: '1727466621446'
  alias: Temperature Detection, Refrigerator
  description: ''
  triggers:
  - entity_id:
    - sensor.temperature_refrigerator
    trigger: numeric_state
    id: Refrigerator Temperature too HIGH
    for:
      hours: 0
      minutes: 30
      seconds: 0
    above: 50
  conditions: []
  actions:
  - parallel:
    - action: script.push_notification_to_ios_devices
      metadata: {}
      data:
        send_to:
        - jessica
        - thomas
        subtitle: Warning
        interruption_level: critical
        notification_type: type_critical
        message: In the Kitchen, the refrigerator is at {{ trigger.to_state.state
          | round }}°, which is above the {{ trigger.above | round }}° maximum temperature
          allowed.
    - action: script.amazon_echo_announcement
      alias: Send Notification to Alexa
      data:
        message: Warning! In the Kitchen, the refrigerator is at {{ trigger.to_state.state
          | round }}°, which is above the {{ trigger.above | round }}° maximum temperature
          allowed.
        send_to:
        - dining_room
        - bedroom_1
        - bedroom_2
        - bedroom_3
        - bedroom_4
        - kitchen
        - bathroom_1
    - action: persistent_notification.create
      metadata: {}
      data:
        title: Warning
        message: In the Kitchen, the refrigerator is at {{ trigger.to_state.state
          | round }}°, which is above the {{ trigger.above | round }}° maximum temperature
          allowed.
  mode: queued
  max: 10
- id: '1727539745399'
  alias: iOS Notification Events
  description: ''
  triggers:
  - alias: iOS Event, COMPLETE_BRUSH_TEETH_JESSICA
    event_type: ios.notification_action_fired
    event_data:
      actionName: COMPLETE_BRUSH_TEETH_JESSICA
    id: Event, COMPLETE_BRUSH_TEETH_JESSICA
    trigger: event
  - alias: iOS Event, COMPLETE_BRUSH_TEETH_THOMAS
    event_type: ios.notification_action_fired
    event_data:
      actionName: COMPLETE_BRUSH_TEETH_THOMAS
    id: Event, COMPLETE_BRUSH_TEETH_THOMAS
    trigger: event
  - alias: iOS Event, COMPLETE_MEDICINE_GOUDA
    event_type: ios.notification_action_fired
    event_data:
      actionName: COMPLETE_MEDICINE_GOUDA
    id: Event, COMPLETE_MEDICINE_GOUDA
    trigger: event
  - alias: iOS Event, COMPLETE_RECYCLE_BRING_IN
    event_type: ios.notification_action_fired
    event_data:
      actionName: COMPLETE_RECYCLE_BRING_IN
    id: Event, COMPLETE_RECYCLE_BRING_IN
    trigger: event
  - alias: iOS Event, COMPLETE_RECYCLE_TAKE_OUT
    event_type: ios.notification_action_fired
    event_data:
      actionName: COMPLETE_RECYCLE_TAKE_OUT
    id: Event, COMPLETE_RECYCLE_TAKE_OUT
    trigger: event
  - alias: iOS Event, COMPLETE_WASTE_BRING_IN
    event_type: ios.notification_action_fired
    event_data:
      actionName: COMPLETE_WASTE_BRING_IN
    id: Event, COMPLETE_WASTE_BRING_IN
    trigger: event
  - alias: iOS Event, COMPLETE_WASTE_TAKE_OUT
    event_type: ios.notification_action_fired
    event_data:
      actionName: COMPLETE_WASTE_TAKE_OUT
    id: Event, COMPLETE_WASTE_TAKE_OUT
    trigger: event
  - alias: iOS Event, CLOSE_GARAGE_DOOR
    event_type: ios.notification_action_fired
    event_data:
      actionName: CLOSE_GARAGE_DOOR
    id: Event, CLOSE_GARAGE_DOOR
    trigger: event
  - alias: iOS Event, FAN_OFF_GARAGE
    event_type: ios.notification_action_fired
    event_data:
      actionName: FAN_OFF_GARAGE
    id: Event, FAN_OFF_GARAGE
    trigger: event
  - alias: iOS Event, LIGHTS_OFF_BACKYARD
    event_type: ios.notification_action_fired
    event_data:
      actionName: LIGHTS_OFF_BACKYARD
    id: Event, LIGHTS_OFF_BACKYARD
    trigger: event
  - alias: iOS Event, LOCK_FRONT_DOOR
    event_type: ios.notification_action_fired
    event_data:
      actionName: LOCK_FRONT_DOOR
    id: Event, LOCK_FRONT_DOOR
    trigger: event
  - alias: iOS Event, SNOOZE_BRUSH_TEETH_JESSICA
    event_type: ios.notification_action_fired
    event_data:
      actionName: SNOOZE_BRUSH_TEETH_JESSICA
    id: Event, SNOOZE_BRUSH_TEETH_JESSICA
    trigger: event
  - alias: iOS Event, SNOOZE_BRUSH_TEETH_THOMAS
    event_type: ios.notification_action_fired
    event_data:
      actionName: SNOOZE_BRUSH_TEETH_THOMAS
    id: Event, SNOOZE_BRUSH_TEETH_THOMAS
    trigger: event
  - alias: iOS Event, SNOOZE_HOUSEHOLD_ACTIVITY
    event_type: ios.notification_action_fired
    event_data:
      actionName: SNOOZE_HOUSEHOLD_ACTIVITY
    id: Event, SNOOZE_HOUSEHOLD_ACTIVITY
    trigger: event
  - alias: iOS Event, SNOOZE_TODAY_GARAGE_DOOR
    event_type: ios.notification_action_fired
    event_data:
      actionName: SNOOZE_TODAY_GARAGE_DOOR
    id: Event, SNOOZE_TODAY_GARAGE_DOOR
    trigger: event
  - alias: iOS Event, SNOOZE_TODAY_FRONT_DOOR
    event_type: ios.notification_action_fired
    event_data:
      actionName: SNOOZE_TODAY_FRONT_DOOR
    id: Event, SNOOZE_TODAY_FRONT_DOOR
    trigger: event
  - alias: iOS Event, SNOOZE_RECYCLE_BRING_IN
    event_type: ios.notification_action_fired
    event_data:
      actionName: SNOOZE_RECYCLE_BRING_IN
    id: Event, SNOOZE_RECYCLE_BRING_IN
    trigger: event
  - alias: iOS Event, SNOOZE_RECYCLE_TAKE_OUT
    event_type: ios.notification_action_fired
    event_data:
      actionName: SNOOZE_RECYCLE_TAKE_OUT
    id: Event, SNOOZE_RECYCLE_TAKE_OUT
    trigger: event
  - alias: iOS Event, SNOOZE_WASTE_BRING_IN
    event_type: ios.notification_action_fired
    event_data:
      actionName: SNOOZE_WASTE_BRING_IN
    id: Event, SNOOZE_WASTE_BRING_IN
    trigger: event
  - alias: iOS Event, SNOOZE_WASTE_TAKE_OUT
    event_type: ios.notification_action_fired
    event_data:
      actionName: SNOOZE_WASTE_TAKE_OUT
    id: Event, SNOOZE_WASTE_TAKE_OUT
    trigger: event
  - alias: iOS Event, SNOOZE_MEDICINE_GOUDA
    event_type: ios.notification_action_fired
    event_data:
      actionName: SNOOZE_MEDICINE_GOUDA
    id: Event, SNOOZE_MEDICINE_GOUDA
    trigger: event
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Event, COMPLETE_BRUSH_TEETH_JESSICA
      sequence:
      - action: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.reminder_toothbrush_complete_jessica
    - conditions:
      - condition: trigger
        id:
        - Event, COMPLETE_BRUSH_TEETH_THOMAS
      sequence:
      - action: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.reminder_toothbrush_complete_thomas
    - conditions:
      - condition: trigger
        id:
        - Event, COMPLETE_MEDICINE_GOUDA
      sequence:
      - action: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.reminder_medicine_complete_gouda
    - conditions:
      - condition: trigger
        id:
        - Event, COMPLETE_RECYCLE_TAKE_OUT
      sequence:
      - action: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.reminder_waste_take_out_recycle
    - conditions:
      - condition: trigger
        id:
        - Event, COMPLETE_RECYCLE_BRING_IN
      sequence:
      - action: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.reminder_waste_bring_in_recycle
    - conditions:
      - condition: trigger
        id:
        - Event, COMPLETE_WASTE_TAKE_OUT
      sequence:
      - action: input_boolean.turn_off
        target:
          entity_id:
          - input_boolean.reminder_waste_take_out_solid
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Event, COMPLETE_WASTE_BRING_IN
      sequence:
      - action: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.reminder_waste_bring_in_solid
    - conditions:
      - condition: trigger
        id:
        - Event, CLOSE_GARAGE_DOOR
      sequence:
      - action: cover.close_cover
        metadata: {}
        data: {}
        target:
          entity_id: cover.garage_door
    - conditions:
      - condition: trigger
        id:
        - Event, FAN_OFF_GARAGE
      sequence:
      - action: fan.turn_off
        target:
          entity_id: fan.custom_garage_fan
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Event, LIGHTS_OFF_BACKYARD
      sequence:
      - action: light.turn_off
        target:
          entity_id: light.backyard_string_lights
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Event, LOCK_FRONT_DOOR
      sequence:
      - action: lock.lock
        target:
          entity_id: lock.front_door
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Event, SNOOZE_BRUSH_TEETH_JESSICA
      sequence:
      - action: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.reminder_toothbrush_snoozed_jessica
    - conditions:
      - condition: trigger
        id:
        - Event, SNOOZE_BRUSH_TEETH_THOMAS
      sequence:
      - action: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.reminder_toothbrush_snoozed_thomas
    - conditions:
      - condition: trigger
        id:
        - Event, SNOOZE_TODAY_FRONT_DOOR
      sequence:
      - action: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.snooze_notify_front_door_unlocked
    - conditions:
      - condition: trigger
        id:
        - Event, SNOOZE_HOUSEHOLD_ACTIVITY
      sequence:
      - action: input_boolean.turn_on
        target:
          entity_id: input_boolean.snooze_notify_household_activity
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Event, SNOOZE_TODAY_GARAGE_DOOR
      sequence:
      - action: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.snooze_notify_garage_open
    - conditions:
      - condition: trigger
        id:
        - Event, SNOOZE_RECYCLE_BRING_IN
      sequence:
      - action: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.snooze_recycle_reminder_bring_in
    - conditions:
      - condition: trigger
        id:
        - Event, SNOOZE_RECYCLE_TAKE_OUT
      sequence:
      - action: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.snooze_recycle_reminder_take_out
    - conditions:
      - condition: trigger
        id:
        - Event, SNOOZE_WASTE_TAKE_OUT
      sequence:
      - action: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.snooze_waste_reminder_take_out
    - conditions:
      - condition: trigger
        id:
        - Event, SNOOZE_WASTE_BRING_IN
      sequence:
      - action: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.snooze_waste_reminder_bring_in
    - conditions:
      - condition: trigger
        id:
        - Event, SNOOZE_MEDICINE_GOUDA
      sequence:
      - action: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.reminder_medicine_snoozed_gouda
  mode: single
- id: '1727551693610'
  alias: Waste, Solid
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - schedule.waste_take_out_solid
    from: 'off'
    to: 'on'
    id: Take Out Schedule Turned ON
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - trigger: state
    entity_id:
    - schedule.waste_bring_in_solid
    from: 'off'
    to: 'on'
    id: Bring In Schedule Turned ON
  - trigger: time_pattern
    minutes: '00'
    id: On 00:00 of every hour
  - trigger: time_pattern
    minutes: '30'
    id: On 00:30 of every hour
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Take Out Schedule Turned ON
      sequence:
      - metadata: {}
        data: {}
        target:
          entity_id:
          - input_boolean.reminder_waste_take_out_solid
        action: input_boolean.turn_on
      alias: 'TAKE OUT: Turn Flag ON'
    - conditions:
      - condition: and
        conditions:
        - condition: state
          entity_id: group.residents
          state: home
        - condition: trigger
          id:
          - On 00:00 of every hour
          - On 00:30 of every hour
        - condition: time
          after: '20:00:00'
          before: '23:59:59'
        - condition: state
          entity_id: sensor.days_until_waste_day_solid
          state: Tomorrow
        - condition: state
          entity_id: input_boolean.snooze_waste_reminder_take_out
          state: 'off'
        - condition: state
          entity_id: input_boolean.reminder_waste_take_out_solid
          state: 'on'
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - jessica
          - thomas
          notification_type: type_warning
          interruption_level: time-sensitive
          subtitle: Reminder
          message: Take the garbage out to the curb.
          notification_actions:
          - action: COMPLETE_WASTE_TAKE_OUT
            title: Done
            icon: sfsymbols:checkmark.circle
          - action: SNOOZE_WASTE_TAKE_OUT
            title: Snooze
            icon: sfsymbols:clock
      - if:
        - condition: time
          after: '21:30:00'
          before: '22:59:59'
        then:
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            send_to:
            - dining_room
            - bathroom_1
            - bedroom_1
            - bedroom_2
            - bedroom_3
            - bedroom_4
            - kitchen
            message: Trash pickup is tomorrow. Don't forget to take the trash can
              out to the curb.
      alias: 'TAKE OUT: When Unfinished Send Notification and Maybe an Announcement'
    - conditions:
      - condition: trigger
        id:
        - Bring In Schedule Turned ON
      sequence:
      - metadata: {}
        data: {}
        target:
          entity_id:
          - input_boolean.reminder_waste_bring_in_solid
        action: input_boolean.turn_on
      alias: 'BRING IN: Turn Flag ON'
    - conditions:
      - condition: and
        conditions:
        - condition: state
          entity_id: group.residents
          state: home
        - condition: trigger
          id:
          - On 00:00 of every hour
          - On 00:30 of every hour
        - condition: time
          after: '16:00:00'
          before: '19:59:59'
        - condition: or
          conditions:
          - condition: state
            entity_id: sensor.days_until_waste_day_solid
            state: Now
          - condition: state
            entity_id: sensor.days_until_waste_day_solid
            state: Today
        - condition: state
          entity_id: input_boolean.snooze_waste_reminder_bring_in
          state: 'off'
        - condition: state
          entity_id: input_boolean.reminder_waste_bring_in_solid
          state: 'on'
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - jessica
          - thomas
          notification_type: type_warning
          interruption_level: time-sensitive
          subtitle: Reminder
          message: Bring in the garbage cans.
          notification_actions:
          - action: COMPLETE_WASTE_BRING_IN
            title: Done
            icon: sfsymbols:checkmark.circle
          - action: SNOOZE_WASTE_BRING_IN
            title: Snooze
            icon: sfsymbols:clock
      alias: 'BRING IN: When Unfinished Send Notification'
  mode: single
- id: '1727554558172'
  alias: Waste, Recycle
  description: ''
  triggers:
  - entity_id:
    - schedule.waste_take_out_recycle
    from: 'off'
    to: 'on'
    id: Take Out Schedule Turned ON
    trigger: state
    enabled: false
  - entity_id:
    - schedule.waste_bring_in_recycle
    from: 'off'
    to: 'on'
    id: Bring In Schedule Turned ON
    trigger: state
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - minutes: '00'
    id: On 00:00 of every hour
    trigger: time_pattern
  - minutes: '30'
    id: On 00:30 of every hour
    trigger: time_pattern
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Take Out Schedule Turned ON
      sequence:
      - metadata: {}
        data: {}
        target:
          entity_id:
          - input_boolean.reminder_waste_take_out_recycle
        action: input_boolean.turn_on
      alias: 'TAKE OUT: Turn Flag ON'
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - On 00:00 of every hour
          - On 00:30 of every hour
        - condition: time
          after: '20:00:00'
          before: '23:59:59'
        - condition: state
          entity_id: sensor.days_until_waste_day_recycle
          state: Tomorrow
        - condition: state
          entity_id: input_boolean.snooze_waste_reminder_take_out
          state: 'off'
        - condition: state
          entity_id: input_boolean.reminder_waste_take_out_recycle
          state: 'on'
        enabled: false
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - jessica
          - thomas
          notification_type: type_warning
          interruption_level: time-sensitive
          subtitle: Reminder
          message: Take the recycling out to the curb.
          notification_actions:
          - action: COMPLETE_RECYCLE_TAKE_OUT
            title: Done
            icon: sfsymbols:checkmark.circle
          - action: SNOOZE_RECYCLE_TAKE_OUT
            title: Snooze
            icon: sfsymbols:clock
        enabled: false
      alias: 'TAKE OUT: When Unfinished Send Notification - DISABLED'
    - conditions:
      - condition: trigger
        id:
        - Bring In Schedule Turned ON
      sequence:
      - metadata: {}
        data: {}
        target:
          entity_id:
          - input_boolean.reminder_waste_bring_in_recycle
        action: input_boolean.turn_on
      alias: 'BRING IN: Turn Flag ON'
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - On 00:00 of every hour
          - On 00:30 of every hour
        - condition: time
          after: '16:00:00'
          before: '19:59:59'
        - condition: or
          conditions:
          - condition: state
            entity_id: sensor.days_until_waste_day_recycle
            state: Now
          - condition: state
            entity_id: sensor.days_until_waste_day_recycle
            state: Today
        - condition: state
          entity_id: input_boolean.snooze_waste_reminder_bring_in
          state: 'off'
        - condition: state
          entity_id: input_boolean.reminder_waste_bring_in_recycle
          state: 'on'
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - jessica
          - thomas
          notification_type: type_warning
          interruption_level: time-sensitive
          subtitle: Reminder
          message: Take the recycling to the drop-off center.
          notification_actions:
          - action: COMPLETE_RECYCLE_BRING_IN
            title: Done
            icon: sfsymbols:checkmark.circle
          - action: SNOOZE_RECYCLE_BRING_IN
            title: Snooze
            icon: sfsymbols:clock
      alias: 'BRING IN: When Unfinished Send Notification'
  mode: single
- id: '1727572209216'
  alias: Battery Low Level Detection
  description: ''
  use_blueprint:
    path: maxson/battery_level.yaml
    input:
      exclude:
      - sensor.vibration_battery_kitchen_island
      - sensor.blinds_kitchen_battery
      - sensor.blinds_bedroom_2_battery
      - sensor.blinds_bedroom_4_battery
      - sensor.bedroom_1_large_window_left_battery
      - sensor.bedroom_1_large_window_right_battery
      - sensor.toothbrush_j_battery
      - sensor.toothbrush_t_battery
      - sensor.toms_iphone_battery_level
      - sensor.toms_iphone_watch_battery
      - sensor.jess_iphone_battery_level
      - sensor.jess_iphone_watch_battery
      - sensor.leo_personal_iphone_battery_level
      - sensor.leo_business_battery_level
      - sensor.tatis_iphone_battery_level
      - sensor.fire_tablet_battery
      - sensor.tablet_johan_browser_battery
      - sensor.chrome_desktop_work_tom_browser_battery
      - sensor.chrome_laptop_personal_tom_browser_battery
      bullet: –
      actions:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - thomas
          notification_type: type_warning
          interruption_level: active
          subtitle: Warning
          message: 'Replace the following batteries soon: {{sensors}}'
      threshold: 35
      time: '12:00:00'
      message: '[% bullet %] [% sensor %] ([% state %]%)'
- id: '1727609900602'
  alias: Dishwasher
  description: ''
  triggers:
  - entity_id:
    - sensor.plug_dishwasher_power
    above: 1
    id: Dishwasher Powered ON
    trigger: numeric_state
  - entity_id:
    - sensor.plug_dishwasher_power
    id: Dishwasher Powered OFF
    below: 1
    for:
      hours: 0
      minutes: 10
      seconds: 0
    trigger: numeric_state
  - entity_id:
    - binary_sensor.door_dishwasher
    from: 'off'
    to: 'on'
    id: Dishwasher Door Did OPEN
    trigger: state
  - entity_id:
    - input_boolean.reminder_dishwasher_complete
    from: 'on'
    to: 'off'
    id: Dishwasher Reminder Was DISMISSED
    trigger: state
  - entity_id:
    - input_select.status_dishwasher_options
    to: Complete
    id: Dishwasher Reminder is COMPLETE
    trigger: state
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Dishwasher Powered ON
      sequence:
      - if:
        - condition: not
          conditions:
          - condition: state
            entity_id: input_select.status_dishwasher_options
            state: Running
        then:
        - action: input_select.select_option
          metadata: {}
          data:
            option: Running
          target:
            entity_id: input_select.status_dishwasher_options
    - conditions:
      - condition: trigger
        id:
        - Dishwasher Powered OFF
      sequence:
      - if:
        - condition: state
          entity_id: input_select.status_dishwasher_options
          state: Running
        then:
        - action: input_select.select_option
          metadata: {}
          data:
            option: Complete
          target:
            entity_id: input_select.status_dishwasher_options
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id:
          - Dishwasher Door Did OPEN
        - condition: trigger
          id:
          - Dishwasher Reminder Was DISMISSED
      sequence:
      - action: input_select.select_option
        metadata: {}
        data:
          option: Idle
        target:
          entity_id: input_select.status_dishwasher_options
      - action: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.reminder_dishwasher_complete
    - conditions:
      - condition: trigger
        id:
        - Dishwasher Reminder is COMPLETE
      sequence:
      - action: input_boolean.turn_on
        target:
          entity_id:
          - input_boolean.reminder_dishwasher_complete
        data: {}
      - if:
        - condition: time
          after: 07:00:00
          before: '23:00:00'
        then:
        - repeat:
            sequence:
            - action: script.amazon_echo_announcement
              metadata: {}
              data:
                message: Your dishes are clean and are ready to be put away.
                send_to:
                - dining_room
                - bedroom_1
                - bedroom_2
                - bedroom_3
                - bedroom_4
                - kitchen
                - bathroom_1
            - delay:
                hours: 0
                minutes: 20
                seconds: 0
                milliseconds: 0
            while:
            - condition: state
              entity_id: input_boolean.reminder_dishwasher_complete
              state: 'on'
              for:
                hours: 0
                minutes: 0
                seconds: 0
          enabled: true
        else:
        - action: input_boolean.turn_off
          metadata: {}
          data: {}
          target:
            entity_id: input_boolean.reminder_dishwasher_complete
  mode: queued
  max: 10
- id: '1727611735991'
  alias: Run at 1:00am
  description: ''
  triggers:
  - at: 01:00:00
    trigger: time
  - entity_id:
    - input_button.trigger_midnight_automations_run
    enabled: false
    trigger: state
  conditions: []
  actions:
  - action: input_boolean.turn_on
    target:
      entity_id:
      - input_boolean.sidebar_display_recycle_reminder
      - input_boolean.sidebar_display_waste_reminder
    data: {}
  - action: input_boolean.turn_off
    target:
      entity_id:
      - input_boolean.reminder_toothbrush_complete_jessica
      - input_boolean.reminder_toothbrush_complete_thomas
      - input_boolean.reminder_medicine_complete_gouda
      - input_boolean.reminder_waste_take_out_bulk
      - input_boolean.reminder_waste_bring_in_recycle
      - input_boolean.reminder_waste_take_out_recycle
      - input_boolean.reminder_waste_bring_in_solid
      - input_boolean.reminder_waste_take_out_solid
      - input_boolean.snooze_notify_doorbell_motion
      - input_boolean.snooze_notify_front_door_unlocked
      - input_boolean.snooze_notify_garage_open
      - input_boolean.snooze_notify_household_activity
      - input_boolean.snooze_recycle_reminder_bring_in
      - input_boolean.snooze_recycle_reminder_take_out
      - input_boolean.snooze_waste_reminder_bring_in
      - input_boolean.snooze_waste_reminder_take_out
      - input_boolean.reminder_toothbrush_snoozed_jessica
      - input_boolean.reminder_toothbrush_snoozed_thomas
      - input_boolean.reminder_medicine_morning_snoozed_jessica
      - input_boolean.reminder_medicine_morning_snoozed_thomas
      - input_boolean.reminder_medicine_afternoon_snoozed_jessica
      - input_boolean.reminder_medicine_afternoon_snoozed_thomas
      - input_boolean.reminder_medicine_evening_snoozed_jessica
      - input_boolean.reminder_medicine_evening_snoozed_thomas
      - input_boolean.reminder_medicine_snoozed_gouda
    data: {}
  mode: single
- id: '1727612005386'
  alias: Run at 1:00pm
  description: ''
  triggers:
  - at: '13:00:00'
    trigger: time
  conditions: []
  actions:
  - action: input_boolean.turn_off
    target:
      entity_id:
      - input_boolean.reminder_toothbrush_snoozed_jessica
      - input_boolean.reminder_toothbrush_snoozed_thomas
      - input_boolean.reminder_toothbrush_complete_jessica
      - input_boolean.reminder_toothbrush_complete_thomas
    data: {}
  mode: single
- id: '1727635161006'
  alias: Person Arrives Home Late
  description: ''
  triggers:
  - entity_id: person.thomas
    zone: zone.regency_lakes
    event: enter
    id: Enter Neighborhood - Tom
    trigger: zone
  - entity_id: person.jessica
    zone: zone.regency_lakes
    event: enter
    id: Enter Neighborhood - Jessica
    trigger: zone
  conditions: []
  actions:
  - if:
    - condition: sun
      before: sunrise
      after: sunset
    - condition: or
      conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - Enter Neighborhood - Tom
        - condition: not
          conditions:
          - condition: state
            entity_id: person.jessica
            state: home
      - condition: and
        conditions:
        - condition: trigger
          id:
          - Enter Neighborhood - Jessica
        - condition: not
          conditions:
          - condition: state
            entity_id: person.thomas
            state: home
    then:
    - if:
      - condition: state
        entity_id: light.bedroom_1_group_occupancy_lights
        state: 'off'
      then:
      - action: light.turn_on
        metadata: {}
        data:
          brightness_pct: 40
        target:
          entity_id:
          - light.bedroom_1_group_occupancy_lights
    - if:
      - condition: state
        entity_id: light.foyer_ceiling_ledge
        state: 'off'
      then:
      - action: light.turn_on
        metadata: {}
        data:
          brightness_pct: 40
        target:
          entity_id: light.foyer_ceiling_ledge
  mode: single
- id: '1728051627180'
  alias: Kitchen
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - light.kitchen_ceiling_lights
    to: 'on'
    id: Lights Turned ON
    from: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Lights Turned ON
      sequence:
      - if:
        - condition: time
          after: '23:00:00'
          before: 07:00:00
        then:
        - action: light.turn_on
          metadata: {}
          data:
            brightness_pct: 30
          target:
            entity_id: light.kitchen_ceiling_lights
        else:
        - action: light.turn_on
          metadata: {}
          data:
            brightness_pct: 100
          target:
            entity_id: light.kitchen_ceiling_lights
  mode: queued
  max: 10
- id: '1728167906970'
  alias: Brush Teeth - Tom
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.toothbrush_t_state
    to: running
    id: Tooth Brush is RUNNING
  - minutes: '00'
    id: On 00:00 of every hour
    trigger: time_pattern
  - minutes: '30'
    id: On 00:30 of every hour
    trigger: time_pattern
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Tooth Brush is RUNNING
      sequence:
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.reminder_toothbrush_complete_thomas
    - conditions:
      - condition: and
        conditions:
        - condition: state
          entity_id: person.thomas
          state: home
        - condition: trigger
          id:
          - On 00:00 of every hour
          - On 00:30 of every hour
        - condition: state
          entity_id: schedule.reminder_toothbrush_thomas
          state: 'on'
        - condition: state
          entity_id: input_boolean.reminder_toothbrush_complete_thomas
          state: 'off'
        - condition: state
          entity_id: input_boolean.reminder_toothbrush_snoozed_thomas
          state: 'off'
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - thomas
          notification_type: type_schedule
          interruption_level: time-sensitive
          message: Don't forget to brush your teeth.
          subtitle: Reminder
          notification_link: /lovelace/page-residents
          notification_actions:
          - action: COMPLETE_BRUSH_TEETH_THOMAS
            title: Done
            icon: sfsymbols:checkmark.circle
          - action: SNOOZE_BRUSH_TEETH_THOMAS
            title: Snooze
            icon: sfsymbols:clock
  mode: single
- id: '1728176822808'
  alias: Brush Teeth - Jessica
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - sensor.toothbrush_j_state
    to: Running
    id: Tooth Brush is RUNNING
  - minutes: '00'
    id: On 00:00 of every hour
    trigger: time_pattern
  - minutes: '30'
    id: On 00:30 of every hour
    trigger: time_pattern
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Tooth Brush is RUNNING
      sequence:
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.reminder_toothbrush_complete_jessica
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - On 00:00 of every hour
          - On 00:30 of every hour
        - condition: state
          entity_id: schedule.reminder_toothbrush_jessica
          state: 'on'
        - condition: state
          entity_id: input_boolean.reminder_toothbrush_complete_jessica
          state: 'off'
        - condition: state
          entity_id: input_boolean.reminder_toothbrush_snoozed_jessica
          state: 'off'
      sequence:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - jessica
          notification_type: type_schedule
          interruption_level: time-sensitive
          message: Don't forget to brush your teeth.
          subtitle: Reminder
          notification_link: /lovelace/page-residents
          notification_actions:
          - action: COMPLETE_BRUSH_TEETH_JESSICA
            title: Done
            icon: sfsymbols:checkmark.circle
          - action: SNOOZE_BRUSH_TEETH_JESSICA
            title: Snooze
            icon: sfsymbols:clock
  mode: single
- id: '1728177018037'
  alias: Medication - Gouda
  description: ''
  triggers:
  - minutes: '00'
    id: On 00:00 of every hour
    trigger: time_pattern
  - minutes: '30'
    id: On 00:30 of every hour
    trigger: time_pattern
  conditions:
  - condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.status_dog_gouda
      state: 'on'
    - condition: state
      entity_id: schedule.reminder_medicine_gouda
      state: 'on'
    - condition: state
      entity_id: input_boolean.reminder_medicine_complete_gouda
      state: 'off'
    - condition: state
      entity_id: input_boolean.reminder_medicine_snoozed_gouda
      state: 'off'
  actions:
  - action: script.push_notification_to_ios_devices
    metadata: {}
    data:
      send_to:
      - thomas
      - jessica
      notification_type: type_schedule
      interruption_level: time-sensitive
      message: Give Gouda her medicine.
      subtitle: Reminder
      notification_link: /lovelace/page-residents
      notification_actions:
      - action: COMPLETE_MEDICINE_GOUDA
        title: Done
        icon: sfsymbols:pill.fill
      - action: SNOOZE_MEDICINE_GOUDA
        title: Snooze
        icon: sfsymbols:clock
  mode: single
- id: '1729641293123'
  alias: Bedroom 4, Blinds Open/Close
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.door_bedroom_4
    from: 'off'
    to: 'on'
    id: Door did OPEN
    for:
      hours: 0
      minutes: 0
      seconds: 30
  - trigger: state
    entity_id:
    - binary_sensor.door_bedroom_4
    from: 'on'
    to: 'off'
    id: Door did CLOSE
    for:
      hours: 0
      minutes: 1
      seconds: 0
  conditions:
  - condition: state
    entity_id: input_boolean.bedroom_4_automation_allow_occupancy
    state: 'on'
  actions:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - Door did OPEN
        - condition: time
          after: 00:00:00
          before: '15:59:59'
      sequence:
      - action: cover.open_cover_tilt
        target:
          entity_id:
          - cover.blinds_bedroom_4
        data: {}
      alias: OPEN Blinds
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - Door did CLOSE
        - condition: time
          after: '16:00:00'
          before: '23:59:59'
      sequence:
      - action: cover.set_cover_tilt_position
        target:
          entity_id:
          - cover.blinds_bedroom_4
        data:
          tilt_position: 100
      alias: CLOSE Blinds
  mode: single
- id: '1729642126008'
  alias: Bedroom 1, Closet Doors Open/Close
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.door_closet_hallway_his
    from: 'off'
    to: 'on'
    id: His Closet Door Did OPEN
    trigger: state
  - entity_id:
    - binary_sensor.door_closet_hallway_his
    from: 'on'
    to: 'off'
    id: His Closet Door Did CLOSE
    trigger: state
  - entity_id:
    - binary_sensor.door_closet_hallway_his
    from: 'off'
    to: 'on'
    id: His Closet Door Left OPEN
    for:
      hours: 0
      minutes: 10
      seconds: 0
    trigger: state
  - entity_id:
    - binary_sensor.door_closet_hallway_hers
    from: 'off'
    to: 'on'
    id: Her Closet Door Did OPEN
    trigger: state
  - entity_id:
    - binary_sensor.door_closet_hallway_hers
    from: 'on'
    to: 'off'
    id: Her Closet Door Did CLOSE
    trigger: state
  - entity_id:
    - binary_sensor.door_closet_hallway_hers
    from: 'off'
    to: 'on'
    id: Her Closet Door Left OPEN
    for:
      hours: 0
      minutes: 10
      seconds: 0
    trigger: state
  conditions: []
  actions:
  - alias: Room Activity Actions
    choose:
    - conditions:
      - condition: trigger
        id:
        - His Closet Door Did OPEN
        enabled: true
      sequence:
      - action: light.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: light.closet_hallway_light_his
      alias: When His Closet Door was OPENED
    - conditions:
      - condition: trigger
        id:
        - His Closet Door Did CLOSE
        enabled: true
      sequence:
      - action: light.turn_off
        target:
          entity_id:
          - light.closet_hallway_light_his
        data: {}
      alias: When His Closet Door was CLOSED
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - His Closet Door Left OPEN
          enabled: true
        - condition: state
          entity_id: input_boolean.bedroom_1_closet_automation_allow_doors
          state: 'on'
      sequence:
      - action: light.turn_off
        data: {}
        target:
          entity_id: light.closet_hallway_light_his
      alias: When His Closet Door was left OPEN
    - conditions:
      - condition: trigger
        id:
        - Her Closet Door Did OPEN
        enabled: true
      sequence:
      - action: light.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: light.closet_hallway_light_hers
      alias: When Her Closet Door was OPENED
    - conditions:
      - condition: trigger
        id:
        - Her Closet Door Did CLOSE
        enabled: true
      sequence:
      - action: light.turn_off
        data: {}
        target:
          entity_id: light.closet_hallway_light_hers
      alias: When Her Closet Door was CLOSED
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - Her Closet Door Left OPEN
          enabled: true
        - condition: state
          entity_id: input_boolean.bedroom_1_closet_automation_allow_doors
          state: 'on'
      sequence:
      - action: light.turn_off
        data: {}
        target:
          entity_id: light.closet_hallway_light_hers
      alias: When Her Closet Door was left OPEN
  mode: queued
  max: 10
- id: '1730055755910'
  alias: Bedroom 4, Room Occupancy
  description: ''
  use_blueprint:
    path: maxson/room_management_via_occupancy.yaml
    input:
      sensor_door: binary_sensor.door_bedroom_4
      sensor_occupancy: binary_sensor.bedroom_4_group_all_occupancy
      enable_door_action:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - thomas
          - jessica
          notification_type: type_activity_door_interior
          interruption_level: active
          message: Tom's Office door was opened.
          notification_actions:
            notification_actions:
            - action: OPEN_APP_UNIFI_PROTECT
              title: Open Camera App
              url: unifi-protect://
              icon: sfsymbols:video
            - action: SNOOZE_HOUSEHOLD_ACTIVITY
              title: Snooze
              icon: sfsymbols:clock
      - if:
        - condition: state
          entity_id: input_boolean.bedroom_4_automation_allow_occupancy
          state: 'on'
        then:
        - action: light.turn_on
          metadata: {}
          data: {}
          target:
            entity_id: light.bedroom_4_group_occupancy_lights
      disable_door_action:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - thomas
          - jessica
          notification_type: type_activity_door_interior
          interruption_level: active
          message: Tom's Office door was closed.
          notification_actions:
            notification_actions:
            - action: OPEN_APP_UNIFI_PROTECT
              title: Open Camera App
              url: unifi-protect://
              icon: sfsymbols:video
            - action: SNOOZE_HOUSEHOLD_ACTIVITY
              title: Snooze
              icon: sfsymbols:clock
      enable_occupancy_action_now:
      - if:
        - condition: state
          entity_id: input_boolean.bedroom_4_automation_allow_occupancy
          state: 'on'
        then:
        - action: light.turn_on
          metadata: {}
          data: {}
          target:
            entity_id: light.bedroom_4_group_occupancy_lights
      disable_occupancy_action_now:
      - if:
        - condition: state
          entity_id: input_boolean.bedroom_4_automation_allow_occupancy
          state: 'on'
        then:
        - action: light.turn_off
          metadata: {}
          data: {}
          target:
            entity_id: light.bedroom_4_group_lights_all
      enable_action_wait_duration: 30
      enable_occupancy_action_wait:
      - if:
        - condition: state
          entity_id: input_boolean.bedroom_4_automation_allow_occupancy
          state: 'on'
        then:
        - action: fan.turn_on
          metadata: {}
          data: {}
          target:
            entity_id: fan.ceiling_bedroom_4
      disable_action_wait_duration: 300
      disable_occupancy_action_wait:
      - if:
        - condition: state
          entity_id: input_boolean.bedroom_4_automation_allow_occupancy
          state: 'on'
        then:
        - action: fan.turn_off
          metadata: {}
          data: {}
          target:
            entity_id: fan.ceiling_bedroom_4
      idle_timer: timer.bedroom_4_automation_last_motion_idle_reset
- id: '1730055951025'
  alias: Bedroom 3, Room Occupancy
  description: ''
  use_blueprint:
    path: maxson/room_management_via_occupancy.yaml
    input:
      sensor_door: binary_sensor.door_bedroom_3
      sensor_occupancy: binary_sensor.bedroom_3_group_all_occupancy
      enable_door_action:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - thomas
          - jessica
          notification_type: type_activity_door_interior
          interruption_level: active
          message: Jess' Office door was opened.
          notification_actions:
            notification_actions:
            - action: OPEN_APP_UNIFI_PROTECT
              title: Open Camera App
              url: unifi-protect://
              icon: sfsymbols:video
            - action: SNOOZE_HOUSEHOLD_ACTIVITY
              title: Snooze
              icon: sfsymbols:clock
      - if:
        - condition: state
          entity_id: input_boolean.bedroom_3_automation_allow_occupancy
          state: 'on'
        then:
        - action: light.turn_on
          metadata: {}
          data: {}
          target:
            entity_id: light.bedroom_3_group_occupancy_lights
      disable_door_action:
      - action: script.push_notification_to_ios_devices
        metadata: {}
        data:
          send_to:
          - thomas
          - jessica
          notification_type: type_activity_door_interior
          interruption_level: active
          message: Jess' Office door was closed.
          notification_actions:
            notification_actions:
            - action: OPEN_APP_UNIFI_PROTECT
              title: Open Camera App
              url: unifi-protect://
              icon: sfsymbols:video
            - action: SNOOZE_HOUSEHOLD_ACTIVITY
              title: Snooze
              icon: sfsymbols:clock
      enable_occupancy_action_now:
      - if:
        - condition: state
          entity_id: input_boolean.bedroom_3_automation_allow_occupancy
          state: 'on'
        then:
        - action: light.turn_on
          metadata: {}
          data: {}
          target:
            entity_id: light.bedroom_3_group_occupancy_lights
      disable_occupancy_action_now:
      - if:
        - condition: state
          entity_id: input_boolean.bedroom_3_automation_allow_occupancy
          state: 'on'
        then:
        - action: light.turn_off
          metadata: {}
          data: {}
          target:
            entity_id: light.bedroom_3_group_lights_all
      enable_action_wait_duration: 30
      enable_occupancy_action_wait:
      - if:
        - condition: state
          entity_id: input_boolean.bedroom_3_automation_allow_occupancy
          state: 'on'
        then:
        - action: fan.turn_on
          metadata: {}
          data: {}
          target:
            entity_id: fan.ceiling_bedroom_3
      disable_action_wait_duration: 300
      disable_occupancy_action_wait:
      - if:
        - condition: state
          entity_id: input_boolean.bedroom_3_automation_allow_occupancy
          state: 'on'
        then:
        - action: fan.turn_off
          metadata: {}
          data: {}
          target:
            entity_id: fan.ceiling_bedroom_3
      idle_timer: timer.bedroom_3_automation_last_motion_idle_reset
- id: '1730985202477'
  alias: Foyer, Light
  description: Control primary lights in the foyer via a Sonoff Wireless remote.
  use_blueprint:
    path: maxson/remote_sonoff_wireless_switch.yaml
    input:
      remote: 537092e8ca96f79dc0619e52a47edc58
      single_press_action:
      - if:
        - condition: state
          entity_id: light.foyer_ceiling_ledge
          state: 'off'
        then:
        - action: light.turn_on
          metadata: {}
          data:
            brightness_pct: 40
          target:
            entity_id: light.foyer_ceiling_ledge
        else:
        - action: light.turn_off
          metadata: {}
          data: {}
          target:
            entity_id: light.foyer_ceiling_ledge
      double_press_action:
      - if:
        - condition: state
          entity_id: light.foyer_under_table
          state: 'off'
        then:
        - action: light.turn_on
          metadata: {}
          data:
            brightness_pct: 10
          target:
            entity_id: light.foyer_under_table
        else:
        - action: light.turn_off
          metadata: {}
          data: {}
          target:
            entity_id: light.foyer_under_table
- id: '1733502747120'
  alias: Doorbell Fingerprint Reader
  description: ''
  triggers:
  - trigger: webhook
    allowed_methods:
    - POST
    local_only: true
    webhook_id: -Zxu9cLLq7RYsaa30McPUeveU
  conditions: []
  actions:
  - action: lock.unlock
    metadata: {}
    data: {}
    target:
      entity_id: lock.front_door
  mode: single
- id: '1733743526425'
  alias: Doorbell Pressed, Flash Lights
  description: ''
  use_blueprint:
    path: maxson/flash_lights.yaml
    input:
      entities_list:
      - light.foyer_ceiling_ledge
      - light.foyer_under_table
      - light.kitchen_cabinet_upper_range
      - light.kitchen_cabinet_upper_coffee_bar
      trigger_entities:
      - binary_sensor.camera_ext_doorbell_doorbell
      disable_automation:
      - input_boolean.toggle_lights_when_doorbell_pressed_automation_allow
- id: '1737039379849'
  alias: Bedroom 3, Fan
  description: Control the ceiling fan in Jess' office via the Lutron 3BRL fan remote.
  use_blueprint:
    path: maxson/remote_lutron_pico_3_button_rl.yaml
    input:
      remote: c86536d4eb18d6eaf1ddb6d7e63bb379
      button_on_single:
      - action: fan.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: fan.custom_ceiling_bedroom_3
      button_raise_single:
      - choose:
        - conditions:
          - condition: state
            entity_id: fan.custom_ceiling_bedroom_3
            state: 'off'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 33.333333333333336
            target:
              entity_id: fan.custom_ceiling_bedroom_3
          alias: Ceiling Fan, Off to Low
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_3'', ''percentage''
              ) | float <= 33.333333333333336 }}'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 66.6666666667
            target:
              entity_id: fan.custom_ceiling_bedroom_3
          alias: Ceiling Fan, Low to Medium
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_3'', ''percentage''
              ) | float <= 66.6666666667 }}'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 100
            target:
              entity_id: fan.custom_ceiling_bedroom_3
          alias: Ceiling Fan, Medium to High
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_3'', ''percentage''
              ) | float <= 100 }}'
          sequence:
          - action: fan.turn_off
            target:
              entity_id: fan.custom_ceiling_bedroom_3
            data: {}
          alias: Ceiling Fan, High to Off
      button_preset_single:
      - if:
        - condition: state
          entity_id: input_boolean.bedroom_3_automation_allow_occupancy
          state: 'on'
        then:
        - action: input_boolean.turn_off
          metadata: {}
          data: {}
          target:
            entity_id: input_boolean.bedroom_3_automation_allow_occupancy
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            send_to:
            - bedroom_3
            message: Occupancy automations for this room are disabled.
        else:
        - action: input_boolean.turn_on
          metadata: {}
          data: {}
          target:
            entity_id: input_boolean.bedroom_3_automation_allow_occupancy
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            send_to:
            - bedroom_3
            message: Occupancy automations for this room are active.
      button_lower_single:
      - choose:
        - conditions:
          - condition: state
            entity_id: fan.custom_ceiling_bedroom_3
            state: 'off'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 100
            target:
              entity_id: fan.custom_ceiling_bedroom_3
          alias: Ceiling Fan, Off to High
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_3'', ''percentage''
              ) | float <= 33.333333333333336 }}'
          sequence:
          - action: fan.turn_off
            target:
              entity_id: fan.custom_ceiling_bedroom_3
            data: {}
          alias: Ceiling Fan, Low to Off
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_3'', ''percentage''
              ) | float <= 66.6666666667 }}'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 33.333333333333336
            target:
              entity_id: fan.custom_ceiling_bedroom_3
          alias: Ceiling Fan, Medium to Low
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_3'', ''percentage''
              ) | float <= 100 }}'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 66.6666666667
            target:
              entity_id: fan.custom_ceiling_bedroom_3
          alias: Ceiling Fan, High to Medium
      button_off_single:
      - action: fan.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: fan.custom_ceiling_bedroom_3
- id: '1737052831738'
  alias: Bedroom 4, Fan
  description: Control the ceiling fan in Tom's office via the Lutron 3BRL fan remote.
  use_blueprint:
    path: maxson/remote_lutron_pico_3_button_rl.yaml
    input:
      remote: 547912e5c1b5de70af4e7159db0b75cb
      button_on_single:
      - action: fan.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: fan.custom_ceiling_bedroom_4
      button_raise_single:
      - choose:
        - conditions:
          - condition: state
            entity_id: fan.custom_ceiling_bedroom_4
            state: 'off'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 33.333333333333336
            target:
              entity_id: fan.custom_ceiling_bedroom_4
          alias: Ceiling Fan, Off to Low
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_4'', ''percentage''
              ) | float <= 33.333333333333336 }}'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 66.6666666667
            target:
              entity_id: fan.custom_ceiling_bedroom_4
          alias: Ceiling Fan, Low to Medium
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_4'', ''percentage''
              ) | float <= 66.6666666667 }}'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 100
            target:
              entity_id: fan.custom_ceiling_bedroom_4
          alias: Ceiling Fan, Medium to High
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_4'', ''percentage''
              ) | float <= 100 }}'
          sequence:
          - action: fan.turn_off
            target:
              entity_id: fan.custom_ceiling_bedroom_4
            data: {}
          alias: Ceiling Fan, High to Off
      button_preset_single:
      - if:
        - condition: state
          entity_id: input_boolean.bedroom_4_automation_allow_occupancy
          state: 'on'
        then:
        - action: input_boolean.turn_off
          metadata: {}
          data: {}
          target:
            entity_id: input_boolean.bedroom_4_automation_allow_occupancy
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            send_to:
            - bedroom_4
            message: Occupancy automations for this room are disabled.
        else:
        - action: input_boolean.turn_on
          metadata: {}
          data: {}
          target:
            entity_id: input_boolean.bedroom_4_automation_allow_occupancy
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            send_to:
            - bedroom_4
            message: Occupancy automations for this room are active.
      button_lower_single:
      - choose:
        - conditions:
          - condition: state
            entity_id: fan.custom_ceiling_bedroom_4
            state: 'off'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 100
            target:
              entity_id: fan.custom_ceiling_bedroom_4
          alias: Ceiling Fan, Off to High
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_4'', ''percentage''
              ) | float <= 33.333333333333336 }}'
          sequence:
          - action: fan.turn_off
            target:
              entity_id: fan.custom_ceiling_bedroom_4
            data: {}
          alias: Ceiling Fan, Low to Off
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_4'', ''percentage''
              ) | float <= 66.6666666667 }}'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 33.333333333333336
            target:
              entity_id: fan.custom_ceiling_bedroom_4
          alias: Ceiling Fan, Medium to Low
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_4'', ''percentage''
              ) | float <= 100 }}'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 66.6666666667
            target:
              entity_id: fan.custom_ceiling_bedroom_4
          alias: Ceiling Fan, High to Medium
      button_off_single:
      - action: fan.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: fan.custom_ceiling_bedroom_4
      button_on_double:
      - action: light.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: light.ceiling_fan_bedroom_4
      button_off_double:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: light.ceiling_fan_bedroom_4
- id: '1737055241030'
  alias: Bedroom 2, Fan
  description: Control the ceiling fan in the guest bedroom via the Lutron 3BRL fan
    remote.
  use_blueprint:
    path: maxson/remote_lutron_pico_3_button_rl.yaml
    input:
      remote: a27d9dc278719e77bd1086e297be14fa
      button_on_single:
      - action: fan.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: fan.custom_ceiling_bedroom_2
      button_raise_single:
      - choose:
        - conditions:
          - condition: state
            entity_id: fan.custom_ceiling_bedroom_2
            state: 'off'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 33.333333333333336
            target:
              entity_id: fan.custom_ceiling_bedroom_2
          alias: Ceiling Fan, Off to Low
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_2'', ''percentage''
              ) | float <= 33.333333333333336 }}'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 66.6666666667
            target:
              entity_id: fan.custom_ceiling_bedroom_2
          alias: Ceiling Fan, Low to Medium
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_2'', ''percentage''
              ) | float <= 66.6666666667 }}'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 100
            target:
              entity_id: fan.custom_ceiling_bedroom_2
          alias: Ceiling Fan, Medium to High
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_2'', ''percentage''
              ) | float <= 100 }}'
          sequence:
          - action: fan.turn_off
            target:
              entity_id: fan.custom_ceiling_bedroom_2
            data: {}
          alias: Ceiling Fan, High to Off
      button_preset_single:
      - if:
        - condition: state
          entity_id: input_boolean.bedroom_2_automation_allow_occupancy
          state: 'on'
        then:
        - action: input_boolean.turn_off
          metadata: {}
          data: {}
          target:
            entity_id: input_boolean.bedroom_2_automation_allow_occupancy
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            send_to:
            - bedroom_2
            message: Occupancy automations for this room are disabled.
        else:
        - action: input_boolean.turn_on
          metadata: {}
          data: {}
          target:
            entity_id: input_boolean.bedroom_2_automation_allow_occupancy
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            send_to:
            - bedroom_2
            message: Occupancy automations for this room are active.
      button_lower_single:
      - choose:
        - conditions:
          - condition: state
            entity_id: fan.custom_ceiling_bedroom_2
            state: 'off'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 100
            target:
              entity_id: fan.custom_ceiling_bedroom_2
          alias: Ceiling Fan, Off to High
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_2'', ''percentage''
              ) | float <= 33.333333333333336 }}'
          sequence:
          - action: fan.turn_off
            target:
              entity_id: fan.custom_ceiling_bedroom_2
            data: {}
          alias: Ceiling Fan, Low to Off
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_2'', ''percentage''
              ) | float <= 66.6666666667 }}'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 33.333333333333336
            target:
              entity_id: fan.custom_ceiling_bedroom_2
          alias: Ceiling Fan, Medium to Low
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_2'', ''percentage''
              ) | float <= 100 }}'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 66.6666666667
            target:
              entity_id: fan.custom_ceiling_bedroom_2
          alias: Ceiling Fan, High to Medium
      button_off_single:
      - action: fan.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: fan.custom_ceiling_bedroom_2
      button_on_double:
      - action: light.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: light.ceiling_fan_bedroom_2
      button_off_double:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: light.ceiling_fan_bedroom_2
      button_on_hold:
      - action: cover.open_cover_tilt
        metadata: {}
        data: {}
        target:
          entity_id: cover.blinds_bedroom_2
      button_off_hold:
      - action: cover.set_cover_tilt_position
        metadata: {}
        data:
          tilt_position: 100
        target:
          entity_id: cover.blinds_bedroom_2
- id: '1737055349278'
  alias: Bedroom 1, Fan
  description: Control the ceiling fan the Main Bedroom via the Lutron 3BRL fan remote.
  use_blueprint:
    path: maxson/remote_lutron_pico_3_button_rl.yaml
    input:
      remote: 42cf4e5eb7543eaffd4a0a285cefd6a9
      button_on_single:
      - action: fan.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: fan.custom_ceiling_bedroom_1
      button_raise_single:
      - choose:
        - conditions:
          - condition: state
            entity_id: fan.custom_ceiling_bedroom_1
            state: 'off'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 33.333333333333336
            target:
              entity_id: fan.custom_ceiling_bedroom_1
          alias: Ceiling Fan, Off to Low
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_1'', ''percentage''
              ) | float <= 33.333333333333336 }}'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 66.6666666667
            target:
              entity_id: fan.custom_ceiling_bedroom_1
          alias: Ceiling Fan, Low to Medium
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_1'', ''percentage''
              ) | float <= 66.6666666667 }}'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 100
            target:
              entity_id: fan.custom_ceiling_bedroom_1
          alias: Ceiling Fan, Medium to High
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_1'', ''percentage''
              ) | float <= 100 }}'
          sequence:
          - action: fan.turn_off
            target:
              entity_id: fan.custom_ceiling_bedroom_1
            data: {}
          alias: Ceiling Fan, High to Off
      button_preset_single:
      - if:
        - condition: state
          entity_id: input_boolean.bedroom_1_automation_allow_occupancy
          state: 'on'
        then:
        - action: input_boolean.turn_off
          metadata: {}
          data: {}
          target:
            entity_id: input_boolean.bedroom_1_automation_allow_occupancy
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            send_to:
            - bedroom_1
            message: Occupancy automations for this room are disabled.
        else:
        - action: input_boolean.turn_on
          metadata: {}
          data: {}
          target:
            entity_id: input_boolean.bedroom_1_automation_allow_occupancy
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            send_to:
            - bedroom_1
            message: Occupancy automations for this room are active.
      button_lower_single:
      - choose:
        - conditions:
          - condition: state
            entity_id: fan.custom_ceiling_bedroom_1
            state: 'off'
          sequence:
          - action: fan.turn_on
            metadata: {}
            data:
              percentage: 100
            target:
              entity_id: fan.custom_ceiling_bedroom_1
          alias: Ceiling Fan, Off to High
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_1'', ''percentage''
              ) | float <= 33.333333333333336 }}'
          sequence:
          - action: fan.turn_off
            target:
              entity_id: fan.custom_ceiling_bedroom_1
            data: {}
          alias: Ceiling Fan, Low to Off
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_1'', ''percentage''
              ) | float <= 66.6666666667 }}'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 33.333333333333336
            target:
              entity_id: fan.custom_ceiling_bedroom_1
          alias: Ceiling Fan, Medium to Low
        - conditions:
          - condition: template
            value_template: '{{ state_attr( ''fan.custom_ceiling_bedroom_1'', ''percentage''
              ) | float <= 100 }}'
          sequence:
          - action: fan.set_percentage
            metadata: {}
            data:
              percentage: 66.6666666667
            target:
              entity_id: fan.custom_ceiling_bedroom_1
          alias: Ceiling Fan, High to Medium
      button_off_single:
      - action: fan.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: fan.custom_ceiling_bedroom_1
      button_on_double:
      - action: light.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: light.ceiling_fan_bedroom_1
      button_off_double:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: light.ceiling_fan_bedroom_1
- id: '1737061838951'
  alias: Bedroom 3, Light - Ceiling Fan
  description: Control the ceiling fan light in the Jess' office via a Lutron paddle
    remote.
  use_blueprint:
    path: maxson/remote_lutron_pico_paddle.yaml
    input:
      remote: afe69d52a42055addce27abac118675a
      button_on_single:
      - action: light.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: light.ceiling_fan_bedroom_3
      button_off_single:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: light.ceiling_fan_bedroom_3
- id: '1737061883401'
  alias: Bedroom 2, Light - Primary
  description: Control the ceiling fan light in the guest bedroom via a Lutron paddle
    remote.
  use_blueprint:
    path: maxson/remote_lutron_pico_paddle.yaml
    input:
      remote: d2694481a3b250b9ed95e4645eb6e40b
      button_on_single:
      - action: light.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: light.bedroom_2_group_occupancy_lights
      button_off_single:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: light.bedroom_2_group_occupancy_lights
      button_on_hold:
      - action: cover.open_cover_tilt
        metadata: {}
        data: {}
        target:
          entity_id: cover.blinds_bedroom_2
      button_off_hold:
      - action: cover.set_cover_tilt_position
        metadata: {}
        data:
          tilt_position: 100
        target:
          entity_id: cover.blinds_bedroom_2
      duration_hold: 2000
- id: '1737061982300'
  alias: Bedroom 1, Light - Ceiling Fan
  description: Control the ceiling fan light in the main bedroom via a Lutron paddle
    remote.
  use_blueprint:
    path: maxson/remote_lutron_pico_paddle.yaml
    input:
      remote: da8f06c90863b596980eda95dd6754ae
      button_on_single:
      - action: light.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: light.ceiling_fan_bedroom_1
      button_off_single:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: light.ceiling_fan_bedroom_1
- id: '1737062260641'
  alias: Bedroom 4, Light - Primary
  description: Control primary lights in Tom's office via a Lutron paddle remote.
  use_blueprint:
    path: maxson/remote_lutron_pico_paddle.yaml
    input:
      remote: b3de283035b788f368ee8333e37de457
      button_on_single:
      - action: light.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: light.bedroom_4_group_occupancy_lights
      button_off_single:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: light.bedroom_4_group_occupancy_lights
      button_on_hold:
      - action: cover.open_cover_tilt
        metadata: {}
        data: {}
        target:
          entity_id: cover.blinds_bedroom_4
      button_off_hold:
      - action: cover.set_cover_tilt_position
        metadata: {}
        data:
          tilt_position: 100
        target:
          entity_id: cover.blinds_bedroom_4
      duration_hold: 2000
- id: '1737121078064'
  alias: Bedroom 1, Light - Primary
  description: Control primary lights in the main bedroom via a Lutron paddle remote.
  use_blueprint:
    path: maxson/remote_lutron_pico_paddle.yaml
    input:
      remote: a7fd95bd8b97ebc8067e659bb3aa7009
      button_on_single:
      - action: light.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: light.bedroom_1_group_occupancy_lights
      button_off_single:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: light.bedroom_1_group_occupancy_lights
      button_on_hold:
      - action: cover.open_cover
        metadata: {}
        data: {}
        target:
          entity_id: cover.curtains_large_window_bedroom_1
      button_off_hold:
      - action: cover.close_cover
        metadata: {}
        data: {}
        target:
          entity_id: cover.curtains_large_window_bedroom_1
      duration_hold: 2000
- id: '1737126794238'
  alias: Living Room, Light - Primary
  description: Control the primary lights in the living room via the Lutron 3BRL light
    remote.
  use_blueprint:
    path: maxson/remote_lutron_pico_3_button_rl.yaml
    input:
      remote: 52953df2b0850134e6d998ac302e9f8b
      button_on_single:
      - action: light.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: light.living_room_corner_lamp
      button_raise_single:
      - action: light.turn_on
        metadata: {}
        data:
          brightness_step_pct: 10
        target:
          entity_id: light.living_room_corner_lamp
      button_preset_single:
      - action: light.toggle
        metadata: {}
        data: {}
        target:
          entity_id: light.living_room_corner_lamp
      button_lower_single:
      - action: light.turn_on
        metadata: {}
        data:
          brightness_step_pct: -10
        target:
          entity_id: light.living_room_corner_lamp
      button_off_single:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: light.living_room_corner_lamp
      button_on_double:
      - action: light.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: light.dining_room_chandelier
      button_preset_double:
      - action: light.toggle
        metadata: {}
        data: {}
        target:
          entity_id: light.dining_room_chandelier
      button_off_double:
      - action: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: light.dining_room_chandelier
- id: '1737478714640'
  alias: Tumble Dryer
  description: ''
  use_blueprint:
    path: maxson/appliance_ge_smarthq.yaml
    input:
      appliance_state: sensor.laundry_dryer_machine_state
      appliance_door: binary_sensor.laundry_dryer_door
      appliance_complete_flag: input_boolean.reminder_laundry_complete_dryer
      action_single_start:
      - action: input_text.set_value
        metadata: {}
        data:
          value: '{{ states( ''sensor.laundry_dryer_time_remaining'' ) }}'
        target:
          entity_id: input_text.laundry_dryer_original_duration
      action_single_finish:
      - action: input_text.set_value
        metadata: {}
        data:
          value: ''
        target:
          entity_id: input_text.laundry_dryer_original_duration
      action_repeat_finish:
      - if:
        - condition: time
          after: 07:00:00
          before: '23:00:00'
        then:
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            message: Your dried clothes are ready to be folded.
            send_to:
            - dining_room
            - bathroom_1
            - bedroom_1
            - bedroom_2
            - bedroom_3
            - bedroom_4
            - kitchen
      duration_repeat_finish: 20
- id: '1737482236130'
  alias: Washing Machine
  description: ''
  use_blueprint:
    path: maxson/appliance_ge_smarthq.yaml
    input:
      appliance_state: sensor.laundry_washer_machine_state
      appliance_door: binary_sensor.laundry_washer_door
      appliance_complete_flag: input_boolean.reminder_laundry_complete_washer
      action_single_start:
      - action: input_text.set_value
        metadata: {}
        data:
          value: '{{ states( ''sensor.laundry_washing_time_remaining'' ) }}'
        target:
          entity_id: input_text.laundry_washer_original_duration
      action_single_finish:
      - action: input_text.set_value
        metadata: {}
        data:
          value: ''
        target:
          entity_id: input_text.laundry_washer_original_duration
      action_repeat_finish:
      - if:
        - condition: time
          after: 07:00:00
          before: '23:00:00'
        then:
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            message: Your washed clothes are ready to be dried.
            send_to:
            - dining_room
            - bathroom_1
            - bedroom_1
            - bedroom_2
            - bedroom_3
            - bedroom_4
            - kitchen
      duration_repeat_finish: 20
- id: '1737489771512'
  alias: Water Leak, Air Conditioner
  description: ''
  use_blueprint:
    path: maxson/leak_detection.yaml
    input:
      device: 9105473c4abc54acb9272f702eac9ddd
      action_alert:
      - parallel:
        - action: script.push_notification_to_ios_devices
          metadata: {}
          data:
            send_to:
            - jessica
            - thomas
            notification_type: type_critical
            interruption_level: critical
            subtitle: Warning
            message: Water has been detected in the Foyer in the bottom of the air
              conditioner intake.
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            message: Warning! Water has been detected in the Foyer in the bottom of
              the air conditioner intake.
            send_to:
            - dining_room
            - bedroom_1
            - bedroom_2
            - bedroom_3
            - bedroom_4
            - kitchen
            - bathroom_1
          alias: Send Notification to Alexa
        - alias: Create Persistent Notification
          action: persistent_notification.create
          metadata: {}
          data:
            title: Warning
            message: Water has been detected in the Foyer in the bottom of the air
              conditioner intake.
- id: '1737490562691'
  alias: Water Leak, Washing Machine
  description: ''
  use_blueprint:
    path: maxson/leak_detection.yaml
    input:
      device: 83875f47d69895f805ffee3784ffdded
      action_alert:
      - parallel:
        - action: script.push_notification_to_ios_devices
          metadata: {}
          data:
            send_to:
            - jessica
            - thomas
            notification_type: type_critical
            interruption_level: critical
            subtitle: Warning
            message: Water has been detected in the Laundry Room under the washing
              machine.
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            message: Warning! Water has been detected in the Laundry Room under the
              washing machine.
            send_to:
            - dining_room
            - bedroom_1
            - bedroom_2
            - bedroom_3
            - bedroom_4
            - kitchen
            - bathroom_1
          alias: Send Notification to Alexa
        - alias: Create Persistent Notification
          action: persistent_notification.create
          metadata: {}
          data:
            title: Warning
            message: Water has been detected in the Laundry Room under the washing
              machine.
- id: '1737491282677'
  alias: Water Leak, Sink - Kitchen
  description: ''
  use_blueprint:
    path: maxson/leak_detection.yaml
    input:
      device: 6bd2c853acb282d85e9968c62bb29aaa
      action_alert:
      - parallel:
        - action: script.push_notification_to_ios_devices
          metadata: {}
          data:
            send_to:
            - jessica
            - thomas
            notification_type: type_critical
            interruption_level: critical
            subtitle: Warning
            message: Water has been detected under the Kitchen sink.
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            message: Warning! Water has been detected under the Kitchen sink.
            send_to:
            - dining_room
            - bedroom_1
            - bedroom_2
            - bedroom_3
            - bedroom_4
            - kitchen
            - bathroom_1
          alias: Send Notification to Alexa
        - alias: Create Persistent Notification
          action: persistent_notification.create
          metadata: {}
          data:
            title: Warning
            message: Water has been detected under the Kitchen sink.
- id: '1737491470347'
  alias: Water Leak, Sink - Main Bathroom (Right Side)
  description: ''
  use_blueprint:
    path: maxson/leak_detection.yaml
    input:
      device: f0706e0f97f9cc10b194cecc9edd13d3
      action_alert:
      - parallel:
        - action: script.push_notification_to_ios_devices
          metadata: {}
          data:
            send_to:
            - jessica
            - thomas
            notification_type: type_critical
            interruption_level: critical
            subtitle: Warning
            message: Water has been detected in the Main Bathroom under his sink.
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            message: Warning! Water has been detected in the Main Bathroom under his
              sink.
            send_to:
            - dining_room
            - bedroom_1
            - bedroom_2
            - bedroom_3
            - bedroom_4
            - kitchen
            - bathroom_1
          alias: Send Notification to Alexa
        - alias: Create Persistent Notification
          action: persistent_notification.create
          metadata: {}
          data:
            title: Warning
            message: Water has been detected in the Main Bathroom under his sink.
- id: '1737514851791'
  alias: Water Leak, Sink - Main Bathroom (Left Side)
  description: ''
  use_blueprint:
    path: maxson/leak_detection.yaml
    input:
      device: 5417f745a698208c494dfda0747d01bc
      action_alert:
      - parallel:
        - action: script.push_notification_to_ios_devices
          metadata: {}
          data:
            send_to:
            - jessica
            - thomas
            notification_type: type_critical
            interruption_level: critical
            subtitle: Warning
            message: Water has been detected in the Main Bathroom under her sink.
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            message: Warning! Water has been detected in the Main Bathroom under her
              sink.
            send_to:
            - dining_room
            - bedroom_1
            - bedroom_2
            - bedroom_3
            - bedroom_4
            - kitchen
            - bathroom_1
          alias: Send Notification to Alexa
        - alias: Create Persistent Notification
          action: persistent_notification.create
          metadata: {}
          data:
            title: Warning
            message: Water has been detected in the Main Bathroom under her sink.
- id: '1737515000373'
  alias: Water Leak, Toilet - Main Bathroom
  description: ''
  use_blueprint:
    path: maxson/leak_detection.yaml
    input:
      device: 09f89e0d53eea01f3b331123d2d301cb
      action_alert:
      - parallel:
        - action: script.push_notification_to_ios_devices
          metadata: {}
          data:
            send_to:
            - jessica
            - thomas
            notification_type: type_critical
            interruption_level: critical
            subtitle: Warning
            message: Water has been detected in the Main Bathroom behind the toilet.
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            message: Warning! Water has been detected in the Main Bathroom behind
              the toilet.
            send_to:
            - dining_room
            - bedroom_1
            - bedroom_2
            - bedroom_3
            - bedroom_4
            - kitchen
            - bathroom_1
          alias: Send Notification to Alexa
        - alias: Create Persistent Notification
          action: persistent_notification.create
          metadata: {}
          data:
            title: Warning
            message: Water has been detected in the Main Bathroom behind the toilet.
- id: '1737516775334'
  alias: Water Leak, Sink - Guest Bathroom
  description: ''
  use_blueprint:
    path: maxson/leak_detection.yaml
    input:
      device: 7a9df4008e35b6407605dd95b9861fdb
      action_alert:
      - parallel:
        - action: script.push_notification_to_ios_devices
          metadata: {}
          data:
            send_to:
            - jessica
            - thomas
            notification_type: type_critical
            interruption_level: critical
            subtitle: Warning
            message: Water has been detected in the Guest Bathroom under the sink.
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            message: Warning! Water has been detected in the Guest Bathroom under
              the sink.
            send_to:
            - dining_room
            - bedroom_1
            - bedroom_2
            - bedroom_3
            - bedroom_4
            - kitchen
            - bathroom_1
          alias: Send Notification to Alexa
        - alias: Create Persistent Notification
          action: persistent_notification.create
          metadata: {}
          data:
            title: Warning
            message: Water has been detected in the Guest Bathroom under the sink.
- id: '1737516896883'
  alias: Water Leak, Toilet - Guest Bathroom
  description: ''
  use_blueprint:
    path: maxson/leak_detection.yaml
    input:
      device: e0841d5a6df0fd6591a82c3d2f54c648
      action_alert:
      - parallel:
        - action: script.push_notification_to_ios_devices
          metadata: {}
          data:
            send_to:
            - jessica
            - thomas
            notification_type: type_critical
            interruption_level: critical
            subtitle: Warning
            message: Water has been detected in the Guest Bathroom behind the toilet.
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            message: Warning! Water has been detected in the Guest Bathroom behind
              the toilet.
            send_to:
            - dining_room
            - bedroom_1
            - bedroom_2
            - bedroom_3
            - bedroom_4
            - kitchen
            - bathroom_1
          alias: Send Notification to Alexa
        - alias: Create Persistent Notification
          action: persistent_notification.create
          metadata: {}
          data:
            title: Warning
            message: Water has been detected in the Guest Bathroom behind the toilet.
- id: '1737516955801'
  alias: Water Leak, Toilet - Guest Bathroom
  description: ''
  use_blueprint:
    path: maxson/leak_detection.yaml
    input:
      device: 0358df5dd4d6317165009562dff8c8c1
      action_alert:
      - parallel:
        - action: script.push_notification_to_ios_devices
          metadata: {}
          data:
            send_to:
            - jessica
            - thomas
            notification_type: type_critical
            interruption_level: critical
            subtitle: Warning
            message: Water has been detected in the Half Bathroom behind the toilet.
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            message: Warning! Water has been detected in the Half Bathroom behind
              the toilet.
            send_to:
            - dining_room
            - bedroom_1
            - bedroom_2
            - bedroom_3
            - bedroom_4
            - kitchen
            - bathroom_1
          alias: Send Notification to Alexa
        - alias: Create Persistent Notification
          action: persistent_notification.create
          metadata: {}
          data:
            title: Warning
            message: Water has been detected in the Half Bathroom behind the toilet.
- id: '1737517559530'
  alias: Water Leak, Sink - Half Bathroom
  description: ''
  use_blueprint:
    path: maxson/leak_detection.yaml
    input:
      device: 940b6fbbc3f55027431599fa5fe79e09
      action_alert:
      - parallel:
        - action: script.push_notification_to_ios_devices
          metadata: {}
          data:
            send_to:
            - jessica
            - thomas
            notification_type: type_critical
            interruption_level: critical
            subtitle: Warning
            message: Water has been detected in the Half Bathroom under the sink.
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            message: Warning! Water has been detected in the Half Bathroom under the
              sink.
            send_to:
            - dining_room
            - bedroom_1
            - bedroom_2
            - bedroom_3
            - bedroom_4
            - kitchen
            - bathroom_1
          alias: Send Notification to Alexa
        - alias: Create Persistent Notification
          action: persistent_notification.create
          metadata: {}
          data:
            title: Warning
            message: Water has been detected in the Half Bathroom under the sink.
- id: '1737518000977'
  alias: Water Leak, Dishwasher
  description: ''
  use_blueprint:
    path: maxson/leak_detection.yaml
    input:
      device: f861e9ce3413e989a3b43bd0ad9c885d
      action_alert:
      - parallel:
        - action: script.push_notification_to_ios_devices
          metadata: {}
          data:
            send_to:
            - jessica
            - thomas
            notification_type: type_critical
            interruption_level: critical
            subtitle: Warning
            message: Water has been detected in the kitchen under the dishwasher.
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            message: Warning! Water has been detected in the kitchen under the dishwasher.
            send_to:
            - dining_room
            - bedroom_1
            - bedroom_2
            - bedroom_3
            - bedroom_4
            - kitchen
            - bathroom_1
          alias: Send Notification to Alexa
        - alias: Create Persistent Notification
          action: persistent_notification.create
          metadata: {}
          data:
            title: Warning
            message: Water has been detected in the kitchen under the dishwasher.
- id: '1737518200810'
  alias: Water Leak, Wine Cooler
  description: ''
  use_blueprint:
    path: maxson/leak_detection.yaml
    input:
      device: 100d2b250232ab143f458bfa8894e786
      action_alert:
      - parallel:
        - action: script.push_notification_to_ios_devices
          metadata: {}
          data:
            send_to:
            - jessica
            - thomas
            notification_type: type_critical
            interruption_level: critical
            subtitle: Warning
            message: Water has been detected in the Bar under the wine cooler.
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            message: Warning! Water has been detected in the Bar under the wine cooler.
            send_to:
            - dining_room
            - bedroom_1
            - bedroom_2
            - bedroom_3
            - bedroom_4
            - kitchen
            - bathroom_1
          alias: Send Notification to Alexa
        - alias: Create Persistent Notification
          action: persistent_notification.create
          metadata: {}
          data:
            title: Warning
            message: Water has been detected in the Bar under the wine cooler.
- id: '1737936432191'
  alias: Temperature Detection, Freezer
  description: ''
  triggers:
  - entity_id:
    - sensor.temperature_freezer
    trigger: numeric_state
    id: Freezer Temperature too HIGH
    for:
      hours: 0
      minutes: 30
      seconds: 0
    above: 32
    enabled: true
  conditions: []
  actions:
  - parallel:
    - action: script.push_notification_to_ios_devices
      metadata: {}
      data:
        send_to:
        - jessica
        - thomas
        subtitle: Warning
        interruption_level: critical
        notification_type: type_critical
        message: In the Kitchen, the freezer is at {{ trigger.to_state.state | round
          }}°, which is above the {{ trigger.above | round }}° maximum temperature
          allowed.
    - action: script.amazon_echo_announcement
      alias: Send Notification to Alexa
      data:
        message: Warning! In the Kitchen, the freezer is at {{ trigger.to_state.state
          | round }}°, which is above the {{ trigger.above | round }}° maximum temperature
          allowed.
        send_to:
        - dining_room
        - bedroom_1
        - bedroom_2
        - bedroom_3
        - bedroom_4
        - kitchen
        - bathroom_1
    - action: persistent_notification.create
      metadata: {}
      data:
        title: Warning
        message: In the Kitchen, the freezer is at {{ trigger.to_state.state | round
          }}°, which is above the {{ trigger.above | round }}° maximum temperature
          allowed.
  mode: queued
  max: 10
- id: '1737936448576'
  alias: Temperature Detection, Wine Cooler
  description: ''
  triggers:
  - entity_id:
    - sensor.temperature_wine_cooler_bottom
    trigger: numeric_state
    id: Wine Cooler (Bottom) Temperature too HIGH
    for:
      hours: 0
      minutes: 30
      seconds: 0
    above: 65
    enabled: true
  - entity_id:
    - sensor.temperature_wine_cooler_top
    trigger: numeric_state
    id: Wine Cooler (Top) Temperature too HIGH
    for:
      hours: 0
      minutes: 30
      seconds: 0
    above: 75
    enabled: true
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Wine Cooler (Top) Temperature too HIGH
      sequence:
      - parallel:
        - action: script.push_notification_to_ios_devices
          metadata: {}
          data:
            send_to:
            - jessica
            - thomas
            subtitle: Warning
            interruption_level: critical
            notification_type: type_critical
            message: In the Bar, the top wine cooler is at {{ trigger.to_state.state
              | round }}°, which is above the {{ trigger.above | round }}° maximum
              temperature allowed.
        - action: script.amazon_echo_announcement
          alias: Send Notification to Alexa
          data:
            message: Warning! In the Bar, the top wine cooler is at {{ trigger.to_state.state
              | round }}°, which is above the {{ trigger.above | round }}° maximum
              temperature allowed.
            send_to:
            - dining_room
            - bedroom_1
            - bedroom_2
            - bedroom_3
            - bedroom_4
            - kitchen
            - bathroom_1
        - action: persistent_notification.create
          metadata: {}
          data:
            title: Warning
            message: In the Bar, the top wine cooler is at {{ trigger.to_state.state
              | round }}°, which is above the {{ trigger.above | round }}° maximum
              temperature allowed.
    - conditions:
      - condition: trigger
        id:
        - Wine Cooler (Bottom) Temperature too HIGH
      sequence:
      - parallel:
        - action: script.push_notification_to_ios_devices
          metadata: {}
          data:
            send_to:
            - jessica
            - thomas
            subtitle: Warning
            interruption_level: critical
            notification_type: type_critical
            message: In the Bar, the bottom wine cooler is at {{ trigger.to_state.state
              | round }}°, which is above the {{ trigger.above | round }}° maximum
              temperature allowed.
        - action: script.amazon_echo_announcement
          alias: Send Notification to Alexa
          data:
            message: Warning! In the Bar, the bottom wine cooler is at {{ trigger.to_state.state
              | round }}°, which is above the {{ trigger.above | round }}° maximum
              temperature allowed.
            send_to:
            - dining_room
            - bedroom_1
            - bedroom_2
            - bedroom_3
            - bedroom_4
            - kitchen
            - bathroom_1
        - action: persistent_notification.create
          metadata: {}
          data:
            title: Warning
            message: In the Bar, the bottom wine cooler is at {{ trigger.to_state.state
              | round }}°, which is above the {{ trigger.above | round }}° maximum
              temperature allowed.
  mode: queued
  max: 10
- id: '1739016919584'
  alias: Bedroom 4, Fan Speed Change
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - fan.custom_ceiling_bedroom_4
    attribute: preset_mode
    to: 'off'
    id: To Off
    enabled: true
  - trigger: state
    entity_id:
    - fan.custom_ceiling_bedroom_4
    attribute: preset_mode
    to: low
    id: To Low Speed
    enabled: true
  - trigger: state
    entity_id:
    - fan.custom_ceiling_bedroom_4
    attribute: preset_mode
    id: To Medium Speed
    to: medium
    enabled: true
  - trigger: state
    entity_id:
    - fan.custom_ceiling_bedroom_4
    attribute: preset_mode
    id: To High Speed
    enabled: true
    to: high
  conditions:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ trigger.from_state.state != "Unknown" }}'
    - condition: template
      value_template: '{{ trigger.from_state.state != "Unavailable" }}'
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - To Off
      sequence:
      - action: script.update_inovelli_light_switch_led_s
        metadata: {}
        data:
          led: All
          color: Red
          effect: Solid
          duration: 1 Second
          brightness_level: 10
          entity_ids:
          - light.ceiling_fan_switch_bedroom_4
    - conditions:
      - condition: trigger
        id:
        - To Low Speed
      sequence:
      - parallel:
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 1
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 50
            entity_ids:
            - light.ceiling_fan_switch_bedroom_4
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 2
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 50
            entity_ids:
            - light.ceiling_fan_switch_bedroom_4
    - conditions:
      - condition: trigger
        id:
        - To Medium Speed
      sequence:
      - parallel:
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 1
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 75
            entity_ids:
            - light.ceiling_fan_switch_bedroom_4
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 2
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 75
            entity_ids:
            - light.ceiling_fan_switch_bedroom_4
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 3
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 75
            entity_ids:
            - light.ceiling_fan_switch_bedroom_4
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 4
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 75
            entity_ids:
            - light.ceiling_fan_switch_bedroom_4
    - conditions:
      - condition: trigger
        id:
        - To High Speed
      sequence:
      - action: script.update_inovelli_light_switch_led_s
        metadata: {}
        data:
          led: All
          color: Green
          effect: Solid
          duration: 1 Second
          brightness_level: 100
          entity_ids:
          - light.ceiling_fan_switch_bedroom_4
  mode: single
- id: '1739023889971'
  alias: Bedroom 1, Fan Speed Change
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - fan.custom_ceiling_bedroom_1
    attribute: preset_mode
    to: 'off'
    id: To Off
    enabled: true
  - trigger: state
    entity_id:
    - fan.custom_ceiling_bedroom_1
    attribute: preset_mode
    to: low
    id: To Low Speed
    enabled: true
  - trigger: state
    entity_id:
    - fan.custom_ceiling_bedroom_1
    attribute: preset_mode
    id: To Medium Speed
    to: medium
    enabled: true
  - trigger: state
    entity_id:
    - fan.custom_ceiling_bedroom_1
    attribute: preset_mode
    id: To High Speed
    enabled: true
    to: high
  conditions:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ trigger.from_state.state != "Unknown" }}'
    - condition: template
      value_template: '{{ trigger.from_state.state != "Unavailable" }}'
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - To Off
      sequence:
      - action: script.update_inovelli_light_switch_led_s
        metadata: {}
        data:
          led: All
          color: Red
          effect: Solid
          duration: 1 Second
          brightness_level: 10
          entity_ids:
          - light.ceiling_fan_switch_bedroom_1
    - conditions:
      - condition: trigger
        id:
        - To Low Speed
      sequence:
      - parallel:
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 1
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 50
            entity_ids:
            - light.ceiling_fan_switch_bedroom_1
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 2
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 50
            entity_ids:
            - light.ceiling_fan_switch_bedroom_1
    - conditions:
      - condition: trigger
        id:
        - To Medium Speed
      sequence:
      - parallel:
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 1
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 75
            entity_ids:
            - light.ceiling_fan_switch_bedroom_1
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 2
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 75
            entity_ids:
            - light.ceiling_fan_switch_bedroom_1
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 3
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 75
            entity_ids:
            - light.ceiling_fan_switch_bedroom_1
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 4
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 75
            entity_ids:
            - light.ceiling_fan_switch_bedroom_1
    - conditions:
      - condition: trigger
        id:
        - To High Speed
      sequence:
      - action: script.update_inovelli_light_switch_led_s
        metadata: {}
        data:
          led: All
          color: Green
          effect: Solid
          duration: 1 Second
          brightness_level: 100
          entity_ids:
          - light.ceiling_fan_switch_bedroom_1
  mode: single
- id: '1739023971487'
  alias: Bedroom 2, Fan Speed Change
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - fan.custom_ceiling_bedroom_2
    attribute: preset_mode
    to: 'off'
    id: To Off
    enabled: true
  - trigger: state
    entity_id:
    - fan.custom_ceiling_bedroom_2
    attribute: preset_mode
    to: low
    id: To Low Speed
    enabled: true
  - trigger: state
    entity_id:
    - fan.custom_ceiling_bedroom_2
    attribute: preset_mode
    id: To Medium Speed
    to: medium
    enabled: true
  - trigger: state
    entity_id:
    - fan.custom_ceiling_bedroom_2
    attribute: preset_mode
    id: To High Speed
    enabled: true
    to: high
  conditions:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ trigger.from_state.state != "Unknown" }}'
    - condition: template
      value_template: '{{ trigger.from_state.state != "Unavailable" }}'
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - To Off
      sequence:
      - action: script.update_inovelli_light_switch_led_s
        metadata: {}
        data:
          led: All
          color: Red
          effect: Solid
          duration: 1 Second
          brightness_level: 10
          entity_ids:
          - light.ceiling_fan_switch_bedroom_2
    - conditions:
      - condition: trigger
        id:
        - To Low Speed
      sequence:
      - parallel:
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 1
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 50
            entity_ids:
            - light.ceiling_fan_switch_bedroom_2
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 2
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 50
            entity_ids:
            - light.ceiling_fan_switch_bedroom_2
    - conditions:
      - condition: trigger
        id:
        - To Medium Speed
      sequence:
      - parallel:
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 1
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 75
            entity_ids:
            - light.ceiling_fan_switch_bedroom_2
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 2
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 75
            entity_ids:
            - light.ceiling_fan_switch_bedroom_2
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 3
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 75
            entity_ids:
            - light.ceiling_fan_switch_bedroom_2
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 4
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 75
            entity_ids:
            - light.ceiling_fan_switch_bedroom_2
    - conditions:
      - condition: trigger
        id:
        - To High Speed
      sequence:
      - action: script.update_inovelli_light_switch_led_s
        metadata: {}
        data:
          led: All
          color: Green
          effect: Solid
          duration: 1 Second
          brightness_level: 100
          entity_ids:
          - light.ceiling_fan_switch_bedroom_2
  mode: single
- id: '1739024076869'
  alias: Bedroom 3, Fan Speed Change
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - fan.custom_ceiling_bedroom_3
    attribute: preset_mode
    to: 'off'
    id: To Off
    enabled: true
  - trigger: state
    entity_id:
    - fan.custom_ceiling_bedroom_3
    attribute: preset_mode
    to: low
    id: To Low Speed
    enabled: true
  - trigger: state
    entity_id:
    - fan.custom_ceiling_bedroom_3
    attribute: preset_mode
    id: To Medium Speed
    to: medium
    enabled: true
  - trigger: state
    entity_id:
    - fan.custom_ceiling_bedroom_3
    attribute: preset_mode
    id: To High Speed
    enabled: true
    to: high
  conditions:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{ trigger.from_state.state != "Unknown" }}'
    - condition: template
      value_template: '{{ trigger.from_state.state != "Unavailable" }}'
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - To Off
      sequence:
      - action: script.update_inovelli_light_switch_led_s
        metadata: {}
        data:
          led: All
          color: Red
          effect: Solid
          duration: 1 Second
          brightness_level: 10
          entity_ids:
          - light.ceiling_fan_switch_bedroom_3
    - conditions:
      - condition: trigger
        id:
        - To Low Speed
      sequence:
      - parallel:
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 1
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 50
            entity_ids:
            - light.ceiling_fan_switch_bedroom_3
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 2
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 50
            entity_ids:
            - light.ceiling_fan_switch_bedroom_3
    - conditions:
      - condition: trigger
        id:
        - To Medium Speed
      sequence:
      - parallel:
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 1
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 75
            entity_ids:
            - light.ceiling_fan_switch_bedroom_3
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 2
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 75
            entity_ids:
            - light.ceiling_fan_switch_bedroom_3
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 3
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 75
            entity_ids:
            - light.ceiling_fan_switch_bedroom_3
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: Led 4
            color: Green
            effect: Solid
            duration: 1 Second
            brightness_level: 75
            entity_ids:
            - light.ceiling_fan_switch_bedroom_3
    - conditions:
      - condition: trigger
        id:
        - To High Speed
      sequence:
      - action: script.update_inovelli_light_switch_led_s
        metadata: {}
        data:
          led: All
          color: Green
          effect: Solid
          duration: 1 Second
          brightness_level: 100
          entity_ids:
          - light.ceiling_fan_switch_bedroom_3
  mode: single
- id: '1740054083449'
  alias: Firearm Safe Opened
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.door_firearm_safe
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 1
    trigger: state
    from: 'off'
    id: Open Immediately
  - entity_id:
    - binary_sensor.door_firearm_safe
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 1
    trigger: state
    from: 'on'
    id: Closed Immediately
  - entity_id:
    - binary_sensor.door_firearm_safe
    to: 'on'
    for:
      hours: 0
      minutes: 5
      seconds: 0
    trigger: state
    from: 'off'
    id: Open Delayed
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Open Immediately
      - condition: state
        entity_id: input_boolean.notification_household_safe_activiy
        state: 'on'
      sequence:
      - parallel:
        - action: script.push_notification_to_ios_devices
          metadata: {}
          data:
            send_to:
            - thomas
            subtitle: Safe Activity
            interruption_level: critical
            notification_type: type_critical
            message: The firearm safe is open!
          enabled: true
        - action: persistent_notification.create
          metadata: {}
          data:
            message: The firearm safe was opened at {{ now().strftime( '%I:%M %p'
              ) }} on {{ now().strftime( '%m/%d/%Y' ) }}.
            title: Danger
        - action: script.update_inovelli_light_switch_led_s
          metadata: {}
          data:
            led: All
            color: Red
            effect: Fast Blink
            duration: Forever
            brightness_level: 100
            entity_ids:
            - light.ceiling_fan_switch_bedroom_1
            - light.ceiling_fan_switch_bedroom_2
            - light.ceiling_fan_switch_bedroom_3
            - light.ceiling_fan_switch_bedroom_4
    - conditions:
      - condition: trigger
        id:
        - Open Delayed
      - condition: state
        entity_id: input_boolean.notification_household_safe_activiy
        state: 'on'
      sequence:
      - parallel:
        - action: script.amazon_echo_announcement
          metadata: {}
          data:
            send_to:
            - dining_room
            - bathroom_1
            - bedroom_1
            - bedroom_2
            - bedroom_3
            - bedroom_4
            - kitchen
            message: Danger! The firearm safe has been open for 5 minutes.
        - action: script.push_notification_to_ios_devices
          metadata: {}
          data:
            send_to:
            - thomas
            subtitle: Danger
            interruption_level: critical
            notification_type: type_critical
            message: The firearm safe has been open for 5 minutes.
          enabled: true
        - action: persistent_notification.create
          metadata: {}
          data:
            message: The firearm safe has been open for 5 minutes.
            title: Danger
            notification_id: id_automation_firearm_safe_open_delayed
    - conditions:
      - condition: trigger
        id:
        - Closed Immediately
      sequence:
      - action: script.update_inovelli_light_switch_led_s
        metadata: {}
        data:
          led: All
          effect: 'Off'
          duration: Forever
          entity_ids:
          - light.ceiling_fan_switch_bedroom_1
          - light.ceiling_fan_switch_bedroom_2
          - light.ceiling_fan_switch_bedroom_3
          - light.ceiling_fan_switch_bedroom_4
  mode: queued
  max: 10
- id: '1749910059584'
  alias: Security Control, Lights - All
  description: ''
  triggers:
  - device_id: f45e2cf26f5fb3cf99fd5f874ca22d18
    domain: zha
    type: remote_button_short_press
    subtype: turn_on
    trigger: device
    id: Turn ON
  - device_id: f45e2cf26f5fb3cf99fd5f874ca22d18
    domain: zha
    type: remote_button_short_press
    subtype: turn_off
    trigger: device
    id: Turn OFF
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Turn ON
      sequence:
      - action: switch.turn_on
        metadata: {}
        data: {}
        target:
          entity_id:
          - switch.echo_kitchen_do_not_disturb_switch
          - switch.echo_dot_dining_room_do_not_disturb_switch
          - switch.echo_dot_bedroom_1_do_not_disturb_switch
          - switch.echo_dot_bedroom_2_do_not_disturb_switch
          - switch.echo_dot_bedroom_3_do_not_disturb_switch
          - switch.echo_dot_bedroom_4_do_not_disturb_switch
          - switch.echo_pop_main_bathroom_do_not_disturb_switch
      - action: scene.create
        metadata: {}
        data:
          scene_id: snapshot_house_lights
          snapshot_entities:
          - light.kitchen_light_1
          - light.kitchen_light_2
          - light.kitchen_light_3
          - light.kitchen_light_4
          - light.kitchen_light_5
          - light.kitchen_light_6
          - light.kitchen_cabinet_upper_range
          - light.kitchen_cabinet_upper_coffee_bar
          - light.dining_room_chandelier
          - light.living_room_corner_lamp
          - light.living_room_couch_lamp
          - light.foyer_ceiling_ledge
          - light.foyer_under_table
          - light.foyer_entryway_ceiling
          - light.foyer_exterior_entryway
          - light.ceiling_fan_bedroom_1
          - light.bedroom_1_lamp_hers
          - light.bedroom_1_lamp_his
          - light.closet_hallway_ceiling_light
          - light.closet_hallway_light_hers
          - light.closet_hallway_light_his
          - light.switch_1_bathroom_main_light
          - light.switch_2_bathroom_main_light
          - light.ceiling_fan_bedroom_2
          - light.bedroom_2_lamp_left
          - light.bedroom_2_lamp_right
          - light.ceiling_fan_bedroom_3
          - light.bedroom_3_floor_lamp
          - light.ceiling_fan_bedroom_4
          - light.bedroom_4_desk_lamp
          - light.bedroom_4_lightstrip
          - light.bedroom_4_tie_fighter_lamp
          - light.laundry_hallway_light
          - light.laundry_ceiling_light
          - light.guest_hallway_light
          - light.garage_ceiling
          - light.christmas_tree
        alias: Create Scene – Lights
      - parallel:
        - alias: Lights On - Common Areas
          action: light.turn_on
          metadata: {}
          data:
            brightness_pct: 100
          target:
            entity_id:
            - light.kitchen_ceiling_lights
            - light.kitchen_cabinet_upper_coffee_bar
            - light.kitchen_cabinet_upper_range
            - light.dining_room_chandelier
            - light.living_room_corner_lamp
            - light.living_room_couch_lamp
            - light.foyer_entryway_ceiling
        - alias: Lights On - Bedroom 1
          action: light.turn_on
          metadata: {}
          data:
            brightness_pct: 100
          target:
            entity_id:
            - light.ceiling_fan_bedroom_1
            - light.bedroom_1_lamp_hers
            - light.bedroom_1_lamp_his
            - light.closet_hallway_ceiling_light
            - light.switch_1_bathroom_main_light
            - light.switch_2_bathroom_main_light
        - alias: Lights On - Bedroom 2
          action: light.turn_on
          metadata: {}
          data:
            brightness_pct: 100
          target:
            entity_id:
            - light.ceiling_fan_bedroom_2
            - light.bedroom_2_lamp_left
            - light.bedroom_2_lamp_right
        - alias: Lights On - Bedroom 3
          action: light.turn_on
          metadata: {}
          data:
            brightness_pct: 100
          target:
            entity_id:
            - light.ceiling_fan_bedroom_3
            - light.bedroom_3_floor_lamp
        - alias: Lights On - Bedroom 4
          action: light.turn_on
          metadata: {}
          data:
            brightness_pct: 100
          target:
            entity_id:
            - light.ceiling_fan_bedroom_4
            - light.bedroom_4_desk_lamp
            - light.bedroom_4_lightstrip
        - alias: Lights On - Other
          action: light.turn_on
          metadata: {}
          data:
            brightness_pct: 100
          target:
            entity_id:
            - light.foyer_hallway_ceiling
            - light.guest_hallway_light
            - light.laundry_hallway_light
            - light.laundry_ceiling_light
      - alias: Create Scene – Security, Privacy Mode
        action: scene.create
        metadata: {}
        data:
          scene_id: snapshot_house_security_privacy
          snapshot_entities:
          - input_boolean.camera_int_privacy_mode
          - switch.camera_ext_backyard_northeast_privacy_mode
          - switch.camera_ext_backyard_southeast_privacy_mode
          - switch.camera_ext_doorbell_privacy_mode
          - switch.camera_ext_front_yard_northeast_privacy_mode
          - switch.camera_ext_front_yard_southeast_privacy_mode
          - switch.camera_ext_side_yard_north_east_privacy_mode
          - switch.camera_ext_side_yard_north_west_privacy_mode
          - switch.camera_ext_side_yard_south_east_privacy_mode
          - select.camera_ext_garage_privacy_mode
          - switch.camera_int_bdr1_privacy_mode
          - switch.camera_int_bdr3_privacy_mode
          - switch.camera_int_bdr4_privacy_mode
          - switch.camera_int_foyer_entry_privacy_mode
          - switch.camera_int_dining_room_privacy_mode
          - switch.camera_int_kitchen_privacy_mode
          - switch.camera_int_living_room_privacy_mode
      - alias: Create Scene – Security, Recording Mode
        action: scene.create
        metadata: {}
        data:
          scene_id: snapshot_house_security_recording
          snapshot_entities:
          - input_boolean.enable_exterior_camera_recording
          - input_boolean.enable_interior_camera_recording
          - input_boolean.enable_motion_camera_recording
          - select.camera_ext_backyard_northeast_recording_mode
          - select.camera_ext_backyard_southeast_recording_mode
          - select.camera_ext_doorbell_recording_mode
          - select.camera_ext_front_yard_northeast_recording_mode
          - select.camera_ext_front_yard_southeast_recording_mode
          - select.camera_ext_side_yard_north_east_recording_mode
          - select.camera_ext_side_yard_north_west_recording_mode
          - select.camera_ext_side_yard_south_east_recording_mode
          - select.camera_ext_garage_recording_mode
          - select.camera_int_bdr1_recording_mode
          - select.camera_int_bdr3_recording_mode
          - select.camera_int_bdr4_recording_mode
          - select.camera_int_foyer_entry_recording_mode
          - select.camera_int_dining_room_recording_mode
          - select.camera_int_kitchen_recording_mode
          - select.camera_int_living_room_recording_mode
      - action: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.camera_int_privacy_mode
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id:
          - input_boolean.enable_exterior_camera_recording
          - input_boolean.enable_interior_camera_recording
          - input_boolean.enable_motion_camera_recording
    - conditions:
      - condition: trigger
        id:
        - Turn OFF
      sequence:
      - action: switch.turn_off
        metadata: {}
        data: {}
        target:
          entity_id:
          - switch.echo_kitchen_do_not_disturb_switch
          - switch.echo_dot_dining_room_do_not_disturb_switch
          - switch.echo_dot_bedroom_1_do_not_disturb_switch
          - switch.echo_dot_bedroom_2_do_not_disturb_switch
          - switch.echo_dot_bedroom_3_do_not_disturb_switch
          - switch.echo_dot_bedroom_4_do_not_disturb_switch
          - switch.echo_pop_main_bathroom_do_not_disturb_switch
      - action: scene.turn_on
        metadata: {}
        data: {}
        target:
          entity_id:
          - scene.snapshot_house_lights
          - scene.snapshot_house_security_privacy
          - scene.snapshot_house_security_recording
      - action: scene.delete
        metadata: {}
        data: {}
        target:
          entity_id:
          - scene.snapshot_house_lights
          - scene.snapshot_house_security_privacy
          - scene.snapshot_house_security_recording
  mode: single
