substitutions:
  name: temp-fridge-freezer
  friendly_name: Temperature, Refrigerator and Freezer

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  min_version: 2024.6.0
  name_add_mac_suffix: false
  project:
    name: esphome.web
    version: dev

esp32:
  board: esp32dev
  framework:
    type: arduino

# dallas:
#   - pin: GPIO4
one_wire:
  - platform: gpio
    pin: GPIO4

sensor:
  #- platform: dallas
  - platform: dallas_temp
    address: 0x373ce104573b9028
    name: "Refrigerator Temperature"
    update_interval: 60s
    filters:
        - offset: -3
  #- platform: dallas
  - platform: dallas_temp
    address: 0x563ce1045708c728
    name: "Freezer Temperature"
    update_interval: 60s
    filters:
        - offset: -3

# Enable logging
logger:

# Enable Home Assistant API
api:

# Allow Over-The-Air updates
ota:
- platform: esphome

# Allow provisioning Wi-Fi via serial
improv_serial:

wifi:
  ssid: !secret wifi_main_ssid
  password: !secret wifi_main_password
  manual_ip:
    static_ip: 192.168.10.151
    gateway: 192.168.10.1
    subnet: 255.255.255.0
  # domain: .ppt7mtmtjhat1fspcuj5nh9j68fd130s.ui.nabu.casa
  # Set up a wifi access point
  ap: {}

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device via WiFi AP.
captive_portal:

dashboard_import:
  package_import_url: github://esphome/example-configs/esphome-web/esp32.yaml@main
  import_full_config: true

# Sets up Bluetooth LE (Only on ESP32) to allow the user
# to provision wifi credentials to the device.
esp32_improv:
  authorizer: none

# To have a "next url" for improv serial
web_server:
