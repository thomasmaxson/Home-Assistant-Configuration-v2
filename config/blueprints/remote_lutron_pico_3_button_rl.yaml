# This blueprint uses an Lutron Pico 3 Button with Raise/Lower Remote Control
#
# | Button | Duration     | Action        |
# | ------ | ------------ | ------------- |
# | On     | Short Press  | Custom action |
# | On     | Double Press | Custom action |
# | On     | Long Press   | Custom action |
# | Raise  | Short Press  | Custom action |
# | Raise  | Double Press | Custom action |
# | Raise  | Long Press   | Custom action |
# | Preset | Short Press  | Custom action |
# | Preset | Double Press | Custom action |
# | Preset | Long Press   | Custom action |
# | Lower  | Short Press  | Custom action |
# | Lower  | Double Press | Custom action |
# | Lower  | Long Press   | Custom action |
# | Off    | Short Press  | Custom action |
# | Off    | Double Press | Custom action |
# | Off    | Long Press   | Custom action |

blueprint:
  name: Lutron Pico, 3 Button with Raise/Lower
  description: Control devices with your Lutron Pico 3 button with raise/lower remote.
  author: Thomas Maxson
  source_url: https://gist.github.com/thomasmaxson/7327b309459d38d8a36ee3bb18ce6b9e
  homeassistant:
    min_version: 2024.6.0
  domain: automation
  input:
    remote:
      name: Lutron Pico remote control
      description: Select the Lutron Pico remote to trigger your automations.
      selector:
        device:
          # PJ2-3BRL-GXX-F01 = Fans (icons only)
          # PJ2-3BRL-GXX-L01 = Lights (icons only)
          # PJ2-3BRL-GXX-S01 = Shades (icons only)
          # PJ2-3BRL-GXX-S02 = Shades (icons + text)
          # PJ2-3BRL-GXX-S03 = Blackouts (icons + text)
          # PJ2-3BRL-GXX-S04 = Sheers (icons + text)
          # PJ2-3BRL-GXX-S05 = Blinds (icons + text)
          # PJ2-3BRL-GXX-S06 = Skylights (icons + text)
          # PJ2-3BRL-GXX-S07 = Draperies (icons + text)
          # PJ2-3BRL-GXX-S08 = N/A
          # PJ2-3BRL-GXX-S09 = Horizontal Sheer Blinds (icons + text)
          # PJ2-3BRL-GWH-S10 = Tilt Blinds (icons)

          filter:
            - integration: lutron_caseta
              manufacturer: Lutron Electronics Co., Inc
              model: PJ2-3BRL-GXX-F01 (Pico3ButtonRaiseLower)
            - integration: lutron_caseta
              manufacturer: Lutron Electronics Co., Inc
              model: PJ2-3BRL-GXX-X01 (Pico3ButtonRaiseLower)
          multiple: false

    actions_single_press:
      name: Single Tap
      icon: mdi:gesture-tap
      collapsed: false
      input:
        button_on_single:
          name: Tap On Button
          description: Action(s) to perform on single tap of the on button
          default: []
          selector:
            action: {}
        button_raise_single:
          name: Tap Up Button
          description: Action(s) to perform on single tap of the up button
          default: []
          selector:
            action: {}
        button_preset_single:
          name: Tap Preset Button
          description: Action(s) to perform on single tap of the preset button
          default: []
          selector:
            action: {}
        button_lower_single:
          name: Tap Down Button
          description: Action(s) to perform on single tap of the down button
          default: []
          selector:
            action: {}
        button_off_single:
          name: Tap Off Button
          description: Action(s) to perform on single tap of the off button
          default: []
          selector:
            action: {}

    actions_double_tap:
      name: Double Tap
      icon: mdi:gesture-double-tap
      collapsed: true
      input:
        button_on_double:
          name: Double Tap On Button
          description: Action(s) to perform on double tap of the on button
          default: []
          selector:
            action: {}
        button_preset_double:
          name: Double Tap Preset Button
          description: Action(s) to perform on double tap of the preset button
          default: []
          selector:
            action: {}
        button_off_double:
          name: Double Tap Off Button
          description: Action(s) to perform on double tap of the off button
          default: []
          selector:
            action: {}
        duration_double_tap:
          name: Double Tap Delay
          description: Duration used for the double tap detection
          default: 250
          selector:
            number:
              min: 100
              max: 2000
              unit_of_measurement: milliseconds
              step: 50
              mode: slider

    actions_hold_press:
      name: Press and Hold
      icon: mdi:gesture-tap-hold
      collapsed: true
      input:
        button_on_hold:
          name: Hold On Button
          description: Action(s) to perform on hold of the on button
          default: []
          selector:
            action: {}
        button_raise_hold:
          name: Hold Up Button
          description: Action(s) to perform on hold of the up button
          default: []
          selector:
            action: {}
        button_preset_hold:
          name: Hold Preset Button
          description: Action(s) to perform on hold of the preset button
          default: []
          selector:
            action: {}
        button_lower_hold:
          name: Hold Down Button
          description: Action(s) to perform on hold of the down button
          default: []
          selector:
            action: {}
        button_off_hold:
          name: Hold Off Button
          description: Action(s) to perform on hold of the off button
          default: []
          selector:
            action: {}
        duration_hold:
          name: Hold Delay
          description: Duration used for the hold detection
          default: 500
          selector:
            number:
              min: 500
              max: 4000
              unit_of_measurement: milliseconds
              step: 500
              mode: slider

    automation_config:
      name: Automation Configuration
      icon: mdi:cog
      collapsed: true
      input:
        config_mode:
          name: Automation Mode
          description: Mode that automation runs in
          default: restart
          selector:
            select:
              options:
                - single
                - restart
                - queued
                - parallel
              custom_value: false
              multiple: false

        config_max_num:
          name: Mode Max
          description: >
            Maximum number of runs that can be executed or queued at a time.
            Ignored by Single and Restart Modes
          default: 10
          selector:
            number:
              mode: slider
              unit_of_measurement: runs
              min: 1.0
              max: 15.0
              step: 1.0

mode: !input config_mode
max: !input config_max_num
max_exceeded: silent

triggers:
  - trigger: device
    device_id: !input remote
    domain: lutron_caseta
    type: press
    subtype: "on"
    id: on_pressed
  - trigger: device
    device_id: !input remote
    domain: lutron_caseta
    type: press
    subtype: raise
    id: raise_pressed
  - trigger: device
    device_id: !input remote
    domain: lutron_caseta
    type: press
    subtype: stop
    id: preset_pressed
  - trigger: device
    device_id: !input remote
    domain: lutron_caseta
    type: press
    subtype: lower
    id: lower_pressed
  - trigger: device
    device_id: !input remote
    domain: lutron_caseta
    type: press
    subtype: "off"
    id: off_pressed

conditions:
  - condition: template
    value_template: "{{ remote != 'remote.undefined' }}"

actions:
  - variables:
      var_duration_hold: !input duration_hold
      var_duration_double_tap: !input duration_double_tap
      remote: "{{ trigger.event.data.device_id }}"
  - choose:
      # Button Press (ON)
      - conditions:
          - condition: trigger
            id: on_pressed
        sequence:
          - wait_for_trigger:
              - trigger: device
                device_id: !input remote
                domain: lutron_caseta
                type: release
                subtype: "on"
            timeout:
              hours: 0
              minutes: 0
              seconds: 0
              milliseconds: "{{ var_duration_hold | float }}"
            continue_on_timeout: true
          - if:
              - condition: template
                value_template: "{{ wait.trigger == none }}"
            then: !input button_on_hold
            else:
              - wait_for_trigger:
                  - trigger: device
                    device_id: !input remote
                    domain: lutron_caseta
                    type: press
                    subtype: "on"
                timeout:
                  hours: 0
                  minutes: 0
                  seconds: 0
                  milliseconds: "{{ var_duration_double_tap | float }}"
                continue_on_timeout: true
              - if:
                  - condition: template
                    value_template: "{{ wait.trigger == none }}"
                then: !input button_on_single
                else: !input button_on_double

      # Button Press (RAISE)
      - conditions:
          - condition: trigger
            id: raise_pressed
        sequence:
          - wait_for_trigger:
              - trigger: device
                device_id: !input remote
                domain: lutron_caseta
                type: press
                subtype: raise
            timeout:
              hours: 0
              minutes: 0
              seconds: 0
              milliseconds: "{{ var_duration_hold | float }}"
            continue_on_timeout: true
          - if:
              - condition: template
                value_template: "{{ wait.trigger == none }}"
            then: !input button_raise_single
            else: !input button_raise_hold

      # Button Press (PRESET/STOP)
      - conditions:
          - condition: trigger
            id: preset_pressed
        sequence:
          - wait_for_trigger:
              - trigger: device
                device_id: !input remote
                domain: lutron_caseta
                type: release
                subtype: stop
            timeout:
              hours: 0
              minutes: 0
              seconds: 0
              milliseconds: "{{ var_duration_hold | float }}"
            continue_on_timeout: true
          - if:
              - condition: template
                value_template: "{{ wait.trigger == none }}"
            then: !input button_preset_hold
            else:
              - wait_for_trigger:
                  - trigger: device
                    device_id: !input remote
                    domain: lutron_caseta
                    type: press
                    subtype: stop
                timeout:
                  hours: 0
                  minutes: 0
                  seconds: 0
                  milliseconds: "{{ var_duration_double_tap | float }}"
                continue_on_timeout: true
              - if:
                  - condition: template
                    value_template: "{{ wait.trigger == none }}"
                then: !input button_preset_single
                else: !input button_preset_double

      # Button Press (LOWER)
      - conditions:
          - condition: trigger
            id: lower_pressed
        sequence:
          - wait_for_trigger:
              - trigger: device
                device_id: !input remote
                domain: lutron_caseta
                type: press
                subtype: lower
            timeout:
              hours: 0
              minutes: 0
              seconds: 0
              milliseconds: "{{ var_duration_hold | float }}"
            continue_on_timeout: true
          - if:
              - condition: template
                value_template: "{{ wait.trigger == none }}"
            then: !input button_lower_single
            else: !input button_lower_hold

      # Button Press (OFF)
      - conditions:
          - condition: trigger
            id: off_pressed
        sequence:
          - wait_for_trigger:
              - trigger: device
                device_id: !input remote
                domain: lutron_caseta
                type: release
                subtype: "off"
            timeout:
              hours: 0
              minutes: 0
              seconds: 0
              milliseconds: "{{ var_duration_hold | float }}"
            continue_on_timeout: true
          - if:
              - condition: template
                value_template: "{{ wait.trigger == none }}"
            then: !input button_off_hold
            else:
              - wait_for_trigger:
                  - trigger: device
                    device_id: !input remote
                    domain: lutron_caseta
                    type: press
                    subtype: "off"
                timeout:
                  hours: 0
                  minutes: 0
                  seconds: 0
                  milliseconds: "{{ var_duration_double_tap | float }}"
                continue_on_timeout: true
              - if:
                  - condition: template
                    value_template: "{{ wait.trigger == none }}"
                then: !input button_off_single
                else: !input button_off_double
