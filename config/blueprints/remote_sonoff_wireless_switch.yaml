# This blueprint uses an SONOFF Wireless Switch Remote Control connected through ZHA or Z2MQTT
#
# | Button | Duration     | Action        |
# | -------| ------------ | ------------- |
# | Power  | Short Press  | Custom action |
# | Power  | Double Press | Custom action |
# | Power  | Long Press   | Custom action |

blueprint:
  name: SONOFF, Wireless Switch
  description: Control devices with your SONOFF Wireless Switch.
  author: Thomas Maxson
  source_url: https://gist.github.com/thomasmaxson/1caba2eb5bd9bb0bb1aed157b5bfb15c
  homeassistant:
    min_version: 2024.6.0
  domain: automation
  input:
    remote:
      name: SONOFF, Wireless Switch
      description: SONOFF Wireless Switch remote used to trigger actions.
      selector:
        device:
          multiple: false
          filter:
            - integration: mqtt
              manufacturer: SONOFF
              model: Wireless button
            - integration: zha
              manufacturer: eWeLink
              model: WB01

    remote_actions:
      name: Button Actions
      icon: mdi:hand-pointing-up
      collapsed: false
      input:
        single_press_action:
          name: Button - Short Press
          description: The action to perform on _single short press_ of the Button.
          default: []
          selector:
            action:

        double_press_action:
          name: Button - Double Press
          description: The action to perform on _double short press_ of the Button.
          default: []
          selector:
            action:

        long_press_action:
          name: Button - Long Press
          description: The action to perform on _long press_ of the Button.
          default: []
          selector:
            action:

    automation_config:
      name: Configuration
      icon: mdi:cog
      collapsed: true
      input:
        config_mode:
          name: Automation Mode
          description: "Mode that the automation runs in."
          default: restart
          selector:
            select:
              options:
                - single
                - restart
                - queued
                - parallel
              custom_value: false
              multiple: false

        config_max_num:
          name: Max Number of Runs
          description: >
            Maximum number of runs that can be executed or queued at a time.
            <br>Ignored by _Single_ and _Restart_ Modes.
          default: 10
          selector:
            number:
              mode: slider
              unit_of_measurement: runs
              min: 1.0
              max: 15.0
              step: 1.0

        debug_valid_events:
          name: Debug Remote
          description: Display a persistent notification, with remote and event details, if triggered.
          default: false
          selector:
            boolean:

mode: !input config_mode
max: !input config_max_num
max_exceeded: silent

variables:
  var_remote: !input remote

triggers:
  # Single Press Events
  - trigger: event
    event_type: zha_event
    event_data:
      device_id: !input remote
      command: "toggle"
    id: single_press
  - trigger: device
    device_id: !input remote
    domain: mqtt
    type: action
    subtype: single
    id: single_press

  # Double Press Events
  - trigger: event
    event_type: zha_event
    event_data:
      device_id: !input remote
      command: "on"
    id: double_press
  - trigger: device
    device_id: !input remote
    domain: mqtt
    type: action
    subtype: double
    id: double_press

  # Long Press Events
  - trigger: event
    event_type: zha_event
    event_data:
      device_id: !input remote
      command: "off"
    id: long_press
  - trigger: device
    device_id: !input remote
    domain: mqtt
    type: action
    subtype: long
    id: long_press

conditions:
  - condition: template
    value_template: "{{ var_remote | length > 0 }}"

actions:
  - variables:
      device_manufacturer: "{{ device_attr( var_remote, 'manufacturer' ) | string }}"
      device_model: "{{ device_attr( var_remote, 'model' ) | string }}"
      device_model_id: "{{ device_attr( var_remote, 'model_id' ) | string }}"
      device_identifiers: "{{ device_attr( var_remote, 'identifiers' ) | list }}"
      integration_type: "{{ device_identifiers[0][0] | string | lower }}"
      trigger_action: >-
        {%- if integration_type == "zha" -%}
          {{ trigger.event.data.command }}
        {%- elif integration_type == "mqtt" -%}
          {{ trigger.payload }}
        {%- endif -%}
      trigger_data: >-
        {%- if integration_type == "zha" -%}
          {{ trigger.event.data }}
        {%- elif integration_type == "mqtt" -%}
          {{ trigger }}
        {%- endif -%}

  - if:
      - condition: template
        value_template: !input debug_valid_events
    then:
      - action: persistent_notification.create
        data:
          notification_id: blueprint_debug__remote_sonoff_wireless_switch
          title: >-
            {%- if device_model_id not in [ "", "none", none, null, false] -%}
              {{ device_manufacturer + " " + device_model }} ({{ device_model_id }})
            {%- else -%}
              {{ device_manufacturer + " " + device_model }}
            {%- endif -%}
          message: >-
            <br>_Integration_: {{ integration_type }} | _Action_: {{ trigger_action }}
            <br>
            <br>_Remote ID_: {{ var_remote }}
            <br>
            <br>```{{ trigger_data }}```

  - choose:
      - conditions:
          - condition: trigger
            id: single_press
        sequence: !input single_press_action

      - conditions:
          - condition: trigger
            id: double_press
        sequence: !input double_press_action

      - conditions:
          - condition: trigger
            id: long_press
        sequence: !input long_press_action
