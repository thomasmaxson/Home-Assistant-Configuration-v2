# This blueprint uses an IKEA TRÅDFRI, RODRET and SOMRIG 2 Button Remote Control connected through ZHA
#
# | Button       | Duration    | Action              |
# | ------------ | ----------- | ------------------- |
# | On or 1 Dot   | Short Press | Turn on             |
# | On or 1 Dot   | Long Press  | Increase brightness |
# | Off or 2 Dots | Short Press | Turn off            |
# | Off or 2 Dots | Long Press  | Decrease brightness |

blueprint:
  name: IKEA TRÅDFRI, RODRET or SOMRIG, 2 Button Remote
  description: Control devices with your IKEA TRÅDFRI, RODRET and SOMRIG 2 button remotes.
  author: Thomas Maxson
  source_url: https://gist.github.com/thomasmaxson/0e7f511eb9e65927708014e461a57674
  homeassistant:
    min_version: 2024.6.0
  domain: automation
  input:
    remotes:
      name: Remotes
      description: Select the IKEA remote  (Rodret, Somrig, Tradfri) to to use
      default: []
      selector:
        device:
          filter:
            - integration: zha
              manufacturer: IKEA of Sweden
              model: TRADFRI on/off switch
            - integration: zha
              manufacturer: IKEA of Sweden
              model: RODRET Dimmer
            - integration: zha
              manufacturer: IKEA of Sweden
              model: SOMRIG shortcut button
            - integration: mqtt
              manufacturer: IKEA
              model: TRADFRI on/off switch
            - integration: mqtt
              manufacturer: IKEA
              model: RODRET wireless dimmer/power switch
            - integration: mqtt
              manufacturer: IKEA
              model: SOMRIG shortcut button
          multiple: true

    actions_single_press:
      name: Single Press
      icon: mdi:gesture-tap
      collapsed: false
      input:
        button_on_single:
          name: On/1 Dot short button press action
          description: >-
            Choose action(s) to run when: 

            Rodret or Tradfri remote **on button** is pressed or,

            Somrig remote **1 dot button** is pressed.
          default: []
          selector:
            action: {}
        button_off_single:
          name: Off/2 Dots short button press action
          description: >-
            Choose action(s) to run when: 

            Rodret or Tradfri remote **off button** is pressed or,

            Somrig remote **2 dots button** is pressed.
          default: []
          selector:
            action: {}

    actions_double_press:
      name: (x2) Double Press
      description: >-
        For **Rodret**, and **Tradfri** remotes, the _Double press event(s)_ must be exposed and _Double press delay_ interval must be set.
      icon: mdi:gesture-double-tap
      collapsed: true
      input:
        expose_press_button_on_double:
          name: Expose virtual double press "on" event
          description: >
            Choose whether or not to expose the virtual **double press** event for the **on** button. 
            Turn this on if you are providing action(s) for the **Double press action (on / 1 dot)**.
          default: false
          selector:
            boolean: {}
        button_on_double:
          name: On/1 Dot double button press action
          description: >-
            Choose action(s) to run when: 

            Rodret or Tradfri remote **on button** is double pressed or,

            Somrig remote **1 dot button** is double pressed.
          default: []
          selector:
            action: {}
        expose_press_button_off_double:
          name: Expose virtual double press "off" event
          description: >
            Choose whether or not to expose the virtual **double press** event for the **off** button. 
            Turn this on if you are providing an action for the **Double press action (off / 2 dots)**.
          default: false
          selector:
            boolean: {}
        button_off_double:
          name: Off/2 Dots double button press action
          description: >-
            Choose action(s) to run when: 

            Rodret or Tradfri remote **off button** is double pressed or,

            Somrig remote **2 dots button** is double pressed.
          default: []
          selector:
            action: {}
        double_press_button_delay:
          name: Double press delay
          description: >
            Max delay between the first and the second button press for the
            **Double press events**. Provide a value only if you are using a double press action.
            Increase this value if you notice that the double press action is not triggered
            properly.
          default: 250
          selector:
            number:
              unit_of_measurement: milliseconds
              min: 100.0
              max: 5000.0
              step: 10.0
              mode: slider

    actions_hold_press:
      name: Press and Hold
      icon: mdi:gesture-tap-hold
      collapsed: true
      input:
        button_on_hold:
          name: On/1 Dot double button held action
          description: >-
            Choose action(s) to run when: 

            Rodret or Tradfri remote **on button** is held down or,

            Somrig remote **1 dot button** is held down.
          default: []
          selector:
            action: {}
        button_off_hold:
          name: Off/2 Dots double button held action
          description: >-
            Choose action(s) to run when: 

            Rodret or Tradfri remote **off button** is held down or,

            Somrig remote **2 dots button** is held down.
          default: []
          selector:
            action: {}
        helper_hold_delay:
          name: Hold delay
          description: Delay between the execution of the **Hold** action(s).
          default: 250
          selector:
            number:
              unit_of_measurement: milliseconds
              min: 100.0
              max: 5000.0
              step: 10.0
              mode: slider
        helper_max_loops:
          name: Max number of loops
          description: Maximum number of loops when holding down a button.
          default: 20
          selector:
            number:
              min: 1.0
              max: 1000.0
              step: 1.0
              mode: slider

    automation_config:
      name: Automation Configuration
      icon: mdi:cog
      collapsed: true
      input:
        config_mode:
          name: Automation Mode
          description: Mode that automation runs in
          default: restart
          selector:
            select:
              options:
                - single
                - restart
                - queued
                - parallel
              custom_value: false
              multiple: false

        config_max_num:
          name: Mode Max
          description: >
            Maximum number of runs that can be executed or queued at a time.
            Ignored by Single and Restart Modes
          default: 10
          selector:
            number:
              mode: slider
              unit_of_measurement: runs
              min: 1.0
              max: 15.0
              step: 1.0

mode: !input config_mode
max: !input config_max_num
max_exceeded: silent

triggers:
  # RODRET (E2201) + TRADFRI (E1743)
  - trigger: event
    event_type: zha_event
    event_data:
      command: "on"
      cluster_id: 6
      endpoint_id: 1
    id: press-on-zha-e1743-e2201
  - trigger: mqtt
    topic: "+/+/action"
    payload: "on"
    id: press-on-z2m-e1743-e2201
  - trigger: event
    event_type: zha_event
    event_data:
      command: "off"
      cluster_id: 6
      endpoint_id: 1
    id: press-off-zha-e1743-e2201
  - trigger: mqtt
    topic: "+/+/action"
    payload: "off"
    id: press-off-z2m-e1743-e2201
  - trigger: event
    event_type: zha_event
    event_data:
      command: move_with_on_off
      cluster_id: 8
      endpoint_id: 1
    id: hold-on-zha-e1743-e2201
  - trigger: mqtt
    topic: "+/+/action"
    payload: brightness_move_up
    id: hold-on-z2m-e1743-e2201
  - trigger: event
    event_type: zha_event
    event_data:
      command: move
      cluster_id: 8
      endpoint_id: 1
    id: hold-off-zha-e1743-e2201
  - trigger: mqtt
    topic: "+/+/action"
    payload: brightness_move_down
    id: hold-off-z2m-e1743-e2201
  - trigger: event
    event_type: zha_event
    event_data:
      endpoint_id: 1
      cluster_id: 8
      command: stop_with_on_off
    id: release-zha-e1743-e2201
  - trigger: mqtt
    topic: "+/+/action"
    payload: brightness_stop
    id: release-z2m-e1743-e2201

  # SOMRIG (E2213)
  - trigger: event
    event_type: zha_event
    event_data:
      command: short_release
      endpoint_id: 1
    id: press-dots1-zha-e2213
  - trigger: mqtt
    topic: "+/+/action"
    payload: 1_short_release
    id: press-dots1-z2m-e2213
  - trigger: event
    event_type: zha_event
    event_data:
      command: short_release
      endpoint_id: 2
    id: press-dots2-zha-e2213
  - trigger: mqtt
    topic: "+/+/action"
    payload: 2_short_release
    id: press-dots2-z2m-e2213
  - trigger: event
    event_type: zha_event
    event_data:
      command: multi_press_complete
      endpoint_id: 1
    id: double-press-dots1-zha-e2213
  - trigger: mqtt
    topic: "+/+/action"
    payload: 1_double_press
    id: double-press-dots1-z2m-e2213
  - trigger: event
    event_type: zha_event
    event_data:
      command: multi_press_complete
      endpoint_id: 2
    id: double-press-dots2-zha-e2213
  - trigger: mqtt
    topic: "+/+/action"
    payload: 2_double_press
    id: double-press-dots2-z2m-e2213
  - trigger: event
    event_type: zha_event
    event_data:
      command: long_press
      endpoint_id: 1
    id: hold-dots1-zha-e2213
  - trigger: mqtt
    topic: "+/+/action"
    payload: 1_long_press
    id: hold-dots1-z2m-e2213
  - trigger: event
    event_type: zha_event
    event_data:
      command: long_press
      endpoint_id: 2
    id: hold-dots2-zha-e2213
  - trigger: mqtt
    topic: "+/+/action"
    payload: 2_long_press
    id: hold-dots2-z2m-e2213
  - trigger: event
    event_type: zha_event
    event_data:
      command: long_release
      endpoint_id: 1
    id: release-hold-dots1-zha-e2213
  - trigger: mqtt
    topic: "+/+/action"
    payload: 1_long_release
    id: release-hold-dots1-z2m-e2213
  - trigger: event
    event_type: zha_event
    event_data:
      command: long_release
      endpoint_id: 2
    id: release-hold-dots2-zha-e2213
  - trigger: mqtt
    topic: "+/+/action"
    payload: 2_long_release
    id: release-hold-dots2-z2m-e2213
variables:
  expose_press_button_on_double: !input expose_press_button_on_double
  expose_press_button_off_double: !input expose_press_button_off_double
  remotes: !input remotes
  remote: >-
    {% set is_zha = trigger.platform == "event" and trigger.event.event_type == "zha_event" %}
    {% set is_mqtt = trigger.platform == "mqtt" %}
    {% set device_name = trigger.topic.split("/")[1] if is_mqtt else none %}
    {{ 
      (trigger.event.data.device_id if is_zha) or
      (device_id(trigger.topic.split("/")[1]) if is_mqtt and device_name)
    }}
  mqtt_topic: "{{ trigger.topic }}"
condition:
  - condition: template
    value_template: "{{ remote in remotes }}"
actions:
  - choose:
      - conditions:
          - condition: trigger
            id:
              - press-on-zha-e1743-e2201
              - press-on-z2m-e1743-e2201
              - press-dots1-zha-e2213
              - press-dots1-z2m-e2213
        sequence:
          - if:
              - condition: template
                value_template: "{{ expose_press_button_on_double }}"
            then:
              - choose:
                  - conditions:
                      - condition: trigger
                        id:
                          - press-on-zha-e1743-e2201
                    sequence:
                      - wait_for_trigger:
                          - trigger: event
                            event_type: zha_event
                            event_data:
                              device_id: "{{ remote }}"
                              command: "on"
                              cluster_id: 6
                              endpoint_id: 1
                        timeout:
                          milliseconds: !input double_press_button_delay
                        continue_on_timeout: true
                      - if:
                          - condition: template
                            value_template: "{{ wait.trigger.idx is defined }}"
                        then: !input button_on_double
                        else: !input button_on_single
                  - conditions:
                      - condition: trigger
                        id:
                          - press-on-z2m-e1743-e2201
                    sequence:
                      - wait_for_trigger:
                          - trigger: mqtt
                            topic: "{{ mqtt_topic }}"
                            payload: "on"
                        timeout:
                          milliseconds: !input double_press_button_delay
                        continue_on_timeout: true
                      - if:
                          - condition: template
                            value_template: "{{ wait.trigger.idx is defined }}"
                        then: !input button_on_double
                        else: !input button_on_single
                default: !input button_on_single
            else: !input button_on_single
      - conditions:
          - condition: trigger
            id:
              - press-off-zha-e1743-e2201
              - press-off-z2m-e1743-e2201
              - press-dots2-zha-e2213
              - press-dots2-z2m-e2213
        sequence:
          - if:
              - condition: template
                value_template: "{{ expose_press_button_off_double }}"
            then:
              - choose:
                  - conditions:
                      - condition: trigger
                        id:
                          - press-off-zha-e1743-e2201
                    sequence:
                      - wait_for_trigger:
                          - trigger: event
                            event_type: zha_event
                            event_data:
                              device_id: "{{ remote }}"
                              command: "off"
                              cluster_id: 6
                              endpoint_id: 1
                        timeout:
                          milliseconds: !input double_press_button_delay
                        continue_on_timeout: true
                      - if:
                          - condition: template
                            value_template: "{{ wait.trigger.idx is defined }}"
                        then: !input button_off_double
                        else: !input button_off_single
                  - conditions:
                      - condition: trigger
                        id:
                          - press-off-z2m-e1743-e2201
                    sequence:
                      - wait_for_trigger:
                          - trigger: mqtt
                            topic: "{{ mqtt_topic }}"
                            payload: "off"
                        timeout:
                          milliseconds: !input double_press_button_delay
                        continue_on_timeout: true
                      - if:
                          - condition: template
                            value_template: "{{ wait.trigger.idx is defined }}"
                        then: !input button_off_double
                        else: !input button_off_single
                default: !input button_off_single
            else: !input button_off_single
      - conditions:
          - condition: trigger
            id:
              - double-press-dots1-zha-e2213
              - double-press-dots1-z2m-e2213
        sequence: !input button_on_double
      - conditions:
          - condition: trigger
            id:
              - double-press-dots2-zha-e2213
              - double-press-dots2-z2m-e2213
        sequence: !input button_off_double
      #
      # Actions for up button long press
      - conditions:
          - condition: trigger
            id:
              - hold-on-zha-e1743-e2201
              - hold-on-z2m-e1743-e2201
              - hold-dots1-zha-e2213
              - hold-dots1-z2m-e2213
        sequence:
          - repeat:
              count: !input helper_max_loops
              sequence:
                - parallel:
                    - sequence: !input button_on_hold
                    - sequence:
                        - choose:
                            - conditions:
                                - condition: trigger
                                  id:
                                    - hold-on-zha-e1743-e2201
                                    - hold-dots1-zha-e2213
                              sequence:
                                - wait_for_trigger:
                                    - trigger: event
                                      event_type: zha_event
                                      event_data:
                                        device_id: "{{ remote }}"
                                        command: "stop_with_on_off"
                                        cluster_id: 8
                                        endpoint_id: 1
                                  timeout:
                                    milliseconds: !input helper_hold_delay
                                  continue_on_timeout: true
                                - if:
                                    - condition: template
                                      value_template: "{{ wait.trigger.idx is defined }}"
                                  then:
                                    - stop: button released
                            - conditions:
                                - condition: trigger
                                  id:
                                    - hold-on-z2m-e1743-e2201
                                    - hold-dots1-z2m-e2213
                              sequence:
                                - wait_for_trigger:
                                    - trigger: mqtt
                                      topic: "{{ mqtt_topic }}"
                                      payload: "brightness_stop"
                                    - trigger: mqtt
                                      topic: "{{ mqtt_topic }}"
                                      payload: "1_long_release"
                                  timeout:
                                    milliseconds: !input helper_hold_delay
                                  continue_on_timeout: true
                                - if:
                                    - condition: template
                                      value_template: "{{ wait.trigger.idx is defined }}"
                                  then:
                                    - stop: button released
      - conditions:
          - condition: trigger
            id:
              - hold-off-zha-e1743-e2201
              - hold-off-z2m-e1743-e2201
              - hold-dots2-zha-e2213
              - hold-dots2-z2m-e2213
        sequence:
          - repeat:
              count: !input helper_max_loops
              sequence:
                - parallel:
                    - sequence: !input button_off_hold
                    - sequence:
                        - choose:
                            - conditions:
                                - condition: trigger
                                  id:
                                    - hold-off-zha-e1743-e2201
                                    - hold-dots2-zha-e2213
                              sequence:
                                - wait_for_trigger:
                                    - trigger: event
                                      event_type: zha_event
                                      event_data:
                                        device_id: "{{ remote }}"
                                        command: "stop_with_on_off"
                                        cluster_id: 8
                                        endpoint_id: 1
                                  timeout:
                                    milliseconds: !input helper_hold_delay
                                  continue_on_timeout: true
                                - if:
                                    - condition: template
                                      value_template: "{{ wait.trigger.idx is defined }}"
                                  then:
                                    - stop: button released
                            - conditions:
                                - condition: trigger
                                  id:
                                    - hold-off-z2m-e1743-e2201
                                    - hold-dots2-z2m-e2213
                              sequence:
                                - wait_for_trigger:
                                    - trigger: mqtt
                                      topic: "{{ mqtt_topic }}"
                                      payload: "brightness_stop"
                                    - trigger: mqtt
                                      topic: "{{ mqtt_topic }}"
                                      payload: "2_long_release"
                                  timeout:
                                    milliseconds: !input helper_hold_delay
                                  continue_on_timeout: true
                                - if:
                                    - condition: template
                                      value_template: "{{ wait.trigger.idx is defined }}"
                                  then:
                                    - stop: button released
