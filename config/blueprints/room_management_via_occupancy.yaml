blueprint:
  name: Manage Area State via Sensors
  description: >-
    Manage occupancy state via multiple sensors. Control what happens when:
      - A door opens or closes
      - Occupancy is detected or is clear
  author: Thomas Maxson
  source_url: https://gist.github.com/thomasmaxson/635084f3a7f8e1877542c210b39c6ed5
  homeassistant:
    min_version: 2024.6.0
  domain: automation
  input:
    sensor_door:
      name: Door Sensor
      selector:
        entity:
          multiple: false
          filter:
            domain: binary_sensor

    sensor_occupancy:
      name: Occupancy Sensor
      selector:
        entity:
          multiple: false
          filter:
            domain: binary_sensor

    group_door_specific_actions:
      name: Door Actions
      icon: mdi:door
      collapsed: true
      input:
        enable_door_action:
          name: Door Opened Action(s)
          description: "Action(s) to perform when the door is opened."
          default: []
          selector:
            action:

        disable_door_action:
          name: Door Closed Action(s)
          description: "Action(s) to perform when the door is closed."
          default: []
          selector:
            action:

    group_occupancy_specific_actions:
      name: Occupancy Actions
      icon: mdi:account
      collapsed: true
      input:
        enable_occupancy_action_now:
          name: Occupancy Detected Action(s)
          description: "Action(s) to perform when occupancy is detected."
          default: []
          selector:
            action:

        disable_occupancy_action_now:
          name: Occupancy Cleared Action(s)
          description: "Action(s) to perform when occupancy is cleared."
          default: []
          selector:
            action:

        enable_action_wait_duration:
          name: Action Delay Duration
          description: "The amount of time to wait until delayed active actions are triggered."
          default: 60
          selector:
            number:
              mode: box
              unit_of_measurement: seconds
              min: 0.0
              max: 3600.0
              step: 1.0

        enable_occupancy_action_wait:
          name: Delayed Occupancy Detected Action(s)
          description: "Action(s) to perform when activity is detected, after a specified delay."
          default: []
          selector:
            action:

        disable_action_wait_duration:
          name: Inaction Delay Duration
          description: "The amount of time to wait until delayed inactive actions are triggered."
          default: 60
          selector:
            number:
              mode: box
              unit_of_measurement: seconds
              min: 0.0
              max: 3600.0
              step: 1.0

        disable_occupancy_action_wait:
          name: Delayed Occupancy Cleared Action(s)
          description: "Action(s) to perform when activity is no longer detected, after a specified delay."
          default: []
          selector:
            action:

    group_area_config:
      name: Helpers
      icon: mdi:cog
      collapsed: true
      input:
        idle_timer:
          name: Idle Timer
          description: "After this timer elapses, devices will automatically revert to their inactive state."
          default: "timer.undefined"
          selector:
            entity:
              multiple: false
              filter:
                domain: timer

variables:
  sensor_door: !input sensor_door
  sensor_occupancy: !input sensor_occupancy
  enable_door_action: !input enable_door_action
  disable_door_action: !input disable_door_action
  enable_occupancy_action_now: !input enable_occupancy_action_now
  disable_occupancy_action_now: !input disable_occupancy_action_now
  enable_action_wait_duration: !input enable_action_wait_duration
  disable_action_wait_duration: !input disable_action_wait_duration
  enable_occupancy_action_wait: !input enable_occupancy_action_wait
  disable_occupancy_action_wait: !input disable_occupancy_action_wait
  idle_timer: !input idle_timer

triggers:
  # When door is OPENED - IMMEDIATE
  - trigger: state
    id: event_now_door_open
    entity_id: !input sensor_door
    from: "off"
    to: "on"

  # When door is OPENED - DELAYED
  - trigger: state
    id: event_wait_door_open
    entity_id: !input sensor_door
    from: "off"
    to: "on"
    for: !input enable_action_wait_duration

  # When door is CLOSED - IMMEDIATE
  - trigger: state
    id: event_now_door_close
    entity_id: !input sensor_door
    from: "on"
    to: "off"

  # When door is CLOSED - DELAYED
  - trigger: state
    id: event_wait_door_close
    entity_id: !input sensor_door
    from: "on"
    to: "off"
    for: !input disable_action_wait_duration

  # When motion is DETECTED - IMMEDIATE
  - trigger: state
    id: event_now_motion_detect
    entity_id: !input sensor_occupancy
    from: "off"
    to: "on"

  # When motion is CLEARED - IMMEDIATE
  - trigger: state
    id: event_now_motion_clear
    entity_id: !input sensor_occupancy
    from: "on"
    to: "off"

  # When motion is CLEARED - DELAYED
  - trigger: state
    id: event_wait_motion_clear
    entity_id: !input sensor_occupancy
    from: "on"
    to: "off"
    for: !input disable_action_wait_duration

  # When idle timer ENDS - IMMEDIATE
  - trigger: event
    id: event_idle_timer_finished
    event_type: timer.finished
    event_data:
      entity_id: !input idle_timer

actions:
  - choose:
      # Actions to perform if DOOR OPENED
      - conditions:
          - condition: trigger
            id: event_now_door_open
        sequence:
          # If configured, RUN delayed enable ACTIONS
          - if:
              - condition: template
                value_template: "{{ enable_door_action | length > 0 }}"
            then: !input enable_door_action

      # Actions to perform if DOOR CLOSED
      - conditions:
          - condition: trigger
            id: event_now_door_close
        sequence:
          # If configured, RUN delayed enable ACTIONS
          - if:
              - condition: template
                value_template: "{{ disable_door_action | length > 0 }}"
            then: !input disable_door_action

      # Actions to perform if DOOR OPENED, and MOTION CLEAR
      - conditions:
          - condition: and
            conditions:
              - condition: trigger
                id: event_now_door_open
              - condition: state
                entity_id: !input sensor_occupancy
                state: "off"
        sequence:
          # If configured, RUN immediate enable ACTIONS
          - if:
              - condition: template
                value_template: "{{ enable_occupancy_action_now | length > 0 }}"
            then: !input enable_occupancy_action_now
          # If configured, manage idle TIMER
          - if:
              - condition: template
                value_template: "{{ true if idle_timer != 'timer.undefined' }}"
            then:
              # CANCEL idle TIMER
              - action: timer.cancel
                target:
                  entity_id: !input idle_timer
                data: {}
              # START idle TIMER
              - action: timer.start
                metadata: {}
                data: {}
                target:
                  entity_id: !input idle_timer

      # Actions to perform if DOOR CLOSED, and MOTION CLEAR
      # Action: IMMEDIATE DISABLE
      - conditions:
          - condition: and
            conditions:
              - condition: trigger
                id: event_now_door_close
              - condition: state
                entity_id: !input sensor_occupancy
                state: "off"
        sequence:
          # If configured, RUN immediate disable ACTIONS
          - if:
              - condition: template
                value_template: "{{ disable_occupancy_action_now | length > 0 }}"
            then: !input disable_occupancy_action_now

      # Actions to perform when DOOR CLOSED, and MOTION CLEARED after delay
      - conditions:
          - condition: and
            conditions:
              - condition: trigger
                id: event_wait_door_close
              - condition: state
                entity_id: !input sensor_occupancy
                state: "off"
        sequence:
          # If configured, RUN delayed disable ACTIONS
          - if:
              - condition: template
                value_template: "{{ disable_occupancy_action_wait | length > 0 }}"
            then: !input disable_occupancy_action_wait
          # If configured, CANCEL idle TIMER
          - if:
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ true if idle_timer != 'timer.undefined' }}"
                  - condition: state
                    entity_id: !input idle_timer
                    state: active
            then:
              - action: timer.cancel
                data: {}
                target:
                  entity_id: !input idle_timer

      # Actions to perform when DOOR OPEN, and MOTION DETECTED
      - conditions:
          - condition: and
            conditions:
              - condition: trigger
                id: event_now_motion_detect
              - condition: state
                entity_id: !input sensor_door
                state: "on"
        sequence:
          # If configured, RUN immediate enable ACTIONS
          - if:
              - condition: template
                value_template: "{{ enable_occupancy_action_now | length > 0 }}"
            then: !input enable_occupancy_action_now
          # - if:
          #     - condition: template
          #       value_template: "{{ enable_occupancy_action_wait | length > 0 }}"
          #   then: !input enable_occupancy_action_wait
          # If configured, START idle TIMER
          - if:
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ true if idle_timer != 'timer.undefined' }}"
                  - condition: state
                    entity_id: !input idle_timer
                    state: active
            then:
              - action: timer.cancel
                data: {}
                target:
                  entity_id: !input idle_timer

      # Actions to perform when MOTION CLEARED
      - conditions:
          - condition: and
            conditions:
              - condition: trigger
                id: event_wait_motion_clear
        sequence:
          # If configured, RUN immediate disable ACTIONS
          - if:
              - condition: template
                value_template: "{{ disable_occupancy_action_now | length > 0 }}"
            then: !input disable_occupancy_action_now
          - if:
              - condition: template
                value_template: "{{ disable_occupancy_action_wait | length > 0 }}"
            then: !input disable_occupancy_action_wait
          # If DOOR is OPEN
          - if:
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ true if idle_timer != 'timer.undefined' }}"
                  - condition: state
                    entity_id: !input sensor_door
                    state: "on"
            then:
              # If configured, CANCEL idle TIMER
              - action: timer.cancel
                target:
                  entity_id: !input idle_timer
                data: {}
              # If configured, START idle TIMER
              - action: timer.start
                metadata: {}
                data: {}
                target:
                  entity_id: !input idle_timer

      # Actions to perform when occupancy TIMER FINISHED
      - conditions:
          - condition: trigger
            id: event_idle_timer_finished
        sequence:
          - if:
              - condition: and
                conditions:
                  - condition: state
                    entity_id: !input sensor_door
                    state: "off"
                  - condition: state
                    entity_id: !input sensor_occupancy
                    state: "off"
            then:
              # CANCEL idle TIMER
              - action: timer.cancel
                data: {}
                target:
                  entity_id: !input idle_timer
              # If configured, RUN immediate disable ACTIONS
              - if:
                  - condition: template
                    value_template: "{{ disable_occupancy_action_now | length > 0 }}"
                then: !input disable_occupancy_action_now
              # If configured, RUN delayed disable ACTIONS
              - if:
                  - condition: template
                    value_template: "{{ disable_occupancy_action_wait | length > 0 }}"
                then: !input disable_occupancy_action_wait
            else:
              # CANCEL idle TIMER
              - action: timer.cancel
                data: {}
                target:
                  entity_id: !input idle_timer
              # START idle TIMER
              - action: timer.start
                metadata: {}
                data: {}
                target:
                  entity_id: !input idle_timer

mode: single
max_exceeded: silent
